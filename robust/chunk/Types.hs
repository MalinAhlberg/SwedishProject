module Types where
import PGF
import Data.Maybe

text   = fromJust $ readType "Text"
phr    = fromJust $ readType "Phr"   
utt    = fromJust $ readType "Utt"
s      = fromJust $ readType "S"
cl     = fromJust $ readType "Cl"
vp     = fromJust $ readType "VP"
npsub  = fromJust $ readType "NPTyped Subject" -- NO PROBLEM! problem? solve by another parse category? NPCast
npobj  = fromJust $ readType "NPTyped Object" 
advsub = fromJust $ readType "AdvTyped Subject"  
advobj = fromJust $ readType "AdvTyped Object"  
cadv   = fromJust $ readType "CAdv"  
v      = fromJust $ readType "V"
vs     = fromJust $ readType "VS"
vv     = fromJust $ readType "VV"
v2     = fromJust $ readType "V2"
v3     = fromJust $ readType "V3"
va     = fromJust $ readType "VA"
vq     = fromJust $ readType "VQ"
v2s    = fromJust $ readType "V2S"
v2q    = fromJust $ readType "V2Q"
v2a    = fromJust $ readType "V2A"
cn     = fromJust $ readType "CN"
n      = fromJust $ readType "N"
n2     = fromJust $ readType "N2"
detsub = fromJust $ readType "DetTyped Subject"
detobj = fromJust $ readType "DeTyped Objectt"
predet = fromJust $ readType "Predet"
apsub  = fromJust $ readType "APTyped Subject"
apobj  = fromJust $ readType "APTyped Object"
rcl    = fromJust $ readType "RCl"
idet   = fromJust $ readType "IDet"
ip     = fromJust $ readType "IP"
card   = fromJust $ readType "Card"
art    = fromJust $ readType "Art"
rp     = fromJust $ readType "RP"
ada    = fromJust $ readType "AdA"
subj   = fromJust $ readType "Subj"
conj   = fromJust $ readType "Conj"
pconj  = fromJust $ readType "PConj"
voc    = fromJust $ readType "Voc"
comp   = fromJust $ readType "Comp"
prep   = fromJust $ readType "Prep"
rs     = fromJust $ readType "RS"
iquant = fromJust $ readType "IQuant"
quantsub = fromJust $ readType "QuantTyped Subject"
quantobj = fromJust $ readType "QuantTyped Object"
pron   = fromJust $ readType "Pron"  -- obs! ej reflexive
relvp  = fromJust $ readType "RelVP"
--pol    = fromJust $ readType "Pol"  --no, this must be some special, just string "inte"
advs = [advsub,advobj]
nps  = [npsub,npobj]
aps  = [apsub,apobj]
