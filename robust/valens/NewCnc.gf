 K_maerka_vb_1_1_V2	= mkV2 ( mkV "K-märker" ) noPrep;
 aaberopa_vb_1_1_V2	= mkV2 ( mkV "åberopar" ) noPrep;
 aaderlaata_vb_1_1_V2	= mkV2 ( mkV "åderlåta" "åderlät" "åderlåtit" ) noPrep;
 aadra_vb_2_1_V2	= mkV2 (reflV ( mkV "ådrar" )) noPrep;
 aaka_vb_1_11_V	= mkV "åker" ;
 aaka_vb_1_12_V	= partV ( mkV "åker" ) "dit";
 aaka_vb_1_13_V	= partV ( mkV "åker" ) "fast";
 aaka_vb_1_11_V2	= mkV2 (partV ( mkV "åker" ) "med") noPrep;
 aaka_vb_1_12_V2	= mkV2 (partV ( mkV "åker" ) "på") noPrep;
 aakalla_vb_1_1_V2	= mkV2 ( mkV "åkallar" ) noPrep;
 aala_vb_1_1_V	= mkV "ålar" ;
 aalaegga_vb_1_1_V3	= mkV3 ( mkV "ålägga" "ålade" "ålagt" ) noPrep noPrep;
 aalaegga_vb_1_1_VV	= mkV "ålägga" "ålade" "ålagt" ** {c2 = mkComplement [ " att" ] ; lock_VV = <>} ;
 aaldras_vb_1_1_V	= mkV "åldras" ;
 aanga_vb_1_1_V	= mkV "ångar" ;
 aangra_vb_1_1_V	= reflV ( mkV "ångrar" );
 aangra_vb_1_1_V2	= mkV2 ( mkV "ångrar" ) noPrep;
 aangra_vb_1_1_VS	= mkVS ( mkV "ångrar" ) ;
 aasidosaetta_vb_1_1_V2	= mkV2 ( mkV "åsidosätta" "åsidosätter" "åsidosätt" "åsidosatte" "åsidosatt" "åsidosatt" ) noPrep;
 aaskaadliggoera_vb_1_1_V2	= mkV2 ( mkV "åskådliggöra" "åskådliggjorde" "åskådliggjort" ) noPrep;
 aastadkomma_vb_1_1_V2	= mkV2 ( mkV "åstadkomma" "åstadkom" "åstadkommit" ) noPrep;
 aasyfta_vb_1_1_V2	= mkV2 ( mkV "åsyftar" ) noPrep;
 aatala_vb_1_1_V2	= mkV2 ( mkV "åtalar" ) noPrep;
 aateranpassa_vb_1_1_V2	= mkV2 ( mkV "återanpassar" ) noPrep;
 aaterberaetta_vb_1_1_V2	= mkV2 ( mkV "återberättar" ) noPrep;
 aaterbetala_vb_1_1_V2	= mkV2 ( mkV "återbetalar" ) noPrep;
 aaterfaa_vb_1_1_V2	= mkV2 ( mkV "återfå" "återfick" "återfått" ) noPrep;
 aaterfinna_vb_1_1_V2	= mkV2 ( mkV "återfinna" "återfann" "återfunnit" ) noPrep;
 aaterfoera_vb_1_1_V2	= mkV2 ( mkV "återföra" "återförde" "återfört" ) noPrep;
 aaterfoerena_vb_1_1_V2	= mkV2 ( mkV "återförenar" ) (mkPrep "med");
 aatergaa_vb_1_1_V2	= mkV2 ( mkV "återgå" "återgår" "återgå" "återgick" "återgått" "återgången" ) (mkPrep "till");
 aatergaa_vb_1_1_VV	= mkV "återgå" "återgår" "återgå" "återgick" "återgått" "återgången" ** {c2 = mkComplement [ "till att" ] ; lock_VV = <>} ;
 aatergaelda_vb_1_1_V2	= mkV2 ( mkV "återgäldar" ) noPrep;
 aaterge_vb_1_1_V2	= mkV2 ( mkV "återge" "återger" "återge" "återgav" "återgett" "återgiven" ) noPrep;
 aaterhaemta_vb_1_1_V	= reflV ( mkV "återhämtar" );
 aaterkomma_vb_1_1_V	= mkV "återkomma" "återkom" "återkommit" ;
 aaterkomma_vb_1_1_V2	= mkV2 ( mkV "återkomma" "återkom" "återkommit" ) (mkPrep "till");
 aaterse_vb_1_1_V2	= mkV2 ( mkV "återse" "återsåg" "återsett" ) noPrep;
 aaterspegla_vb_1_1_V2	= mkV2 ( mkV "återspeglar" ) noPrep;
 aaterstaa_vb_1_1_V	= mkV "återstå" "återstod" "återstått" ;
 aaterstaella_vb_1_1_V2	= mkV2 ( mkV "återställer" ) noPrep;
 aatervaenda_vb_1_1_V	= mkV "återvänder" ;
 aatervinna_vb_1_1_V2	= mkV2 ( mkV "återvinna" "återvann" "återvunnit" ) noPrep;
 aatfoelja_vb_1_1_V2	= mkV2 ( mkV "åtfölja" "åtföljde" "åtföljt" ) noPrep;
 aatgaerda_vb_1_1_V2	= mkV2 ( mkV "åtgärdar" ) noPrep;
 aatnjuta_vb_1_1_V2	= mkV2 ( mkV "åtnjuta" "åtnjöt" "åtnjutit" ) noPrep;
 aatraa_vb_1_1_V2	= mkV2 ( mkV "åtrår" ) noPrep;
 abdikera_vb_1_V	= mkV "abdikerar" ;
 abonnera_vb_1_V2	= mkV2 ( mkV "abonnerar" ) (mkPrep "på");
 absorbera_vb_2_V2	= mkV2 ( mkV "absorberar" ) noPrep;
 abstrahera_vb_1_V	= mkV "abstraherar" ;
 accelerera_vb_2_V	= mkV "accelererar" ;
 accentuera_vb_1_V2	= mkV2 ( mkV "accentuerar" ) noPrep;
 acceptera_vb_1_V2	= mkV2 ( mkV "accepterar" ) noPrep;
 acceptera_vb_1_VS	= mkVS ( mkV "accepterar" ) ;
 acceptera_vb_1_VV	= mkV "accepterar" ** {c2 = mkComplement [ " att" ] ; lock_VV = <>} ;
 acklimatisera_vb_1_V	= reflV ( mkV "acklimatiserar" );
 ackompanjera_vb_1_V2	= mkV2 ( mkV "ackompanjerar" ) noPrep;
 ackreditera_vb_1_V2	= mkV2 ( mkV "ackrediterar" ) noPrep;
 ackumulera_vb_1_V2	= mkV2 ( mkV "ackumulerar" ) noPrep;
 addera_vb_1_V2	= mkV2 ( mkV "adderar" ) noPrep;
 adjungera_vb_1_V2	= mkV2 ( mkV "adjungerar" ) noPrep;
 adla_vb_1_V2	= mkV2 ( mkV "adlar" ) noPrep;
 administrera_vb_1_V2	= mkV2 ( mkV "administrerar" ) noPrep;
 adoptera_vb_1_V2	= mkV2 ( mkV "adopterar" ) noPrep;
 adressera_vb_1_V2	= mkV2 ( mkV "adresserar" ) noPrep;
 aeckla_vb_1_11_V2	= mkV2 ( mkV "äcklar" ) (mkPrep "av");
 aeckla_vb_1_12_V2	= mkV2 ( mkV "äcklar" ) noPrep;
 aega_vb_2_1_V2	= mkV2 ( mkV "äger" ) noPrep;
 aegna_vb_1_11_V2	= mkV2 ( mkV "ägnar" ) noPrep;
 aegna_vb_1_12_V2	= mkV2 (partV (reflV ( mkV "ägnar" )) "åt") noPrep;
 aegna_vb_1_1_V3	= mkV3 ( mkV "ägnar" ) noPrep (mkPrep "åt");
 aegna_vb_1_1_VV	= partV (reflV ( mkV "ägnar" )) "åt" ** {c2 = mkComplement [ " att" ] ; lock_VV = <>} ;
 aekta_vb_1_1_V2	= mkV2 ( mkV "äktar" ) noPrep;
 aelska_vb_2_1_V2	= mkV2 ( mkV "älskar" ) noPrep;
 aelska_vb_2_1_VV	= mkV "älskar" ** {c2 = mkComplement [ " att" ] ; lock_VV = <>} ;
 aelta_vb_1_1_V2	= mkV2 ( mkV "ältar" ) noPrep;
 aemna_vb_1_1_VV	= mkV "ämnar" ** {c2 = mkComplement [ ] ; lock_VV = <>} ;
 aendra_vb_1_1_V	= reflV ( mkV "ändrar" );
 aendra_vb_1_1_V2	= mkV2 (partV ( mkV "ändrar" ) "på") noPrep;
 aentra_vb_1_1_V2	= mkV2 ( mkV "äntrar" ) noPrep;
 aera_vb_1_1_V2	= mkV2 ( mkV "ärar" ) noPrep;
 aerva_vb_1_1_V2	= mkV2 ( mkV "ärver" ) noPrep;
 aeska_vb_1_1_V2	= mkV2 ( mkV "äskar" ) noPrep;
 aeta_vb_1_1_V2	= mkV2 ( mkV "äta" "åt" "ätit" ) noPrep;
 aeventyra_vb_1_1_V2	= mkV2 ( mkV "äventyrar" ) noPrep;
 affischera_vb_1_V	= mkV "affischerar" ;
 aga_vb_1_V2	= mkV2 ( mkV "agar" ) noPrep;
 agera_vb_2_V	= mkV "agerar" ;
 agera_vb_2_VA	= mkVA ( mkV "agerar" ) ;
 agitera_vb_1_V2	= mkV2 ( mkV "agiterar" ) (mkPrep "för");
 ajournera_vb_1_V2	= mkV2 ( mkV "ajournerar" ) noPrep;
 akta_vb_21_V2	= mkV2 ( mkV "aktar" ) noPrep;
 akta_vb_22_V2	= mkV2 (reflV ( mkV "aktar" )) (mkPrep "för");
 akta_vb_2_VV	= reflV ( mkV "aktar" ) ** {c2 = mkComplement [ "för att" ] ; lock_VV = <>} ;
 aktivera_vb_1_V2	= mkV2 ( mkV "aktiverar" ) noPrep;
 aktualisera_vb_1_V2	= mkV2 ( mkV "aktualiserar" ) noPrep;
 alstra_vb_1_V2	= mkV2 ( mkV "alstrar" ) noPrep;
 alternera_vb_1_V	= mkV "alternerar" ;
 alternera_vb_1_V2	= mkV2 ( mkV "alternerar" ) (mkPrep "med");
 ambulera_vb_1_V	= mkV "ambulerar" ;
 amma_vb_1_V2	= mkV2 ( mkV "ammar" ) noPrep;
 amortera_vb_1_V2	= mkV2 (partV ( mkV "amorterar" ) "på") noPrep;
 amputera_vb_1_V2	= mkV2 ( mkV "amputerar" ) noPrep;
 ana_vb_1_V2	= mkV2 ( mkV "anar" ) noPrep;
 ana_vb_1_VS	= mkVS ( mkV "anar" ) ;
 analysera_vb_1_V2	= mkV2 ( mkV "analyserar" ) noPrep;
 anamma_vb_1_V2	= mkV2 ( mkV "anammar" ) noPrep;
 anbefalla_vb_1_V2	= mkV2 ( mkV "anbefaller" ) noPrep;
 anbefalla_vb_1_VS	= mkVS ( mkV "anbefaller" ) ;
 anbringa_vb_1_V3	= mkV3 ( mkV "anbringar" ) noPrep (mkPrep "på");
 andas_vb_1_V	= mkV "andas" ;
 andas_vb_1_V2	= mkV2 ( mkV "andas" ) noPrep;
 andra_vb_1_V2	= mkV2 ( mkV "andra" "andrar" "andra" "androg" "andragit" "andragen" ) noPrep;
 anfaekta_vb_1_1_V2	= mkV2 ( mkV "anfäktar" ) noPrep;
 anfalla_vb_1_V2	= mkV2 ( mkV "anfalla" "anföll" "anfallit" ) noPrep;
 anfoera_vb_1_1_V2	= mkV2 ( mkV "anföra" "anförde" "anfört" ) noPrep;
 anfoera_vb_1_1_VS	= mkVS ( mkV "anföra" "anförde" "anfört" ) ;
 anfoertro_vb_1_1_V2S	= mkV2S ( mkV "anförtror" ) noPrep;
 anfoertro_vb_1_1_V3	= mkV3 ( mkV "anförtror" ) noPrep noPrep;
 ange_vb_1_V2	= mkV2 ( mkV "ange" "anger" "ange" "angav" "angett" "angiven" ) noPrep;
 ange_vb_1_VS	= mkVS ( mkV "ange" "anger" "ange" "angav" "angett" "angiven" ) ;
 angripa_vb_1_V2	= mkV2 ( mkV "angripa" "angrep" "angripit" ) noPrep;
 anhaalla_vb_1_11_V2	= mkV2 ( mkV "anhålla" "anhöll" "anhållit" ) (mkPrep "om");
 anhaalla_vb_1_12_V2	= mkV2 ( mkV "anhålla" "anhöll" "anhållit" ) noPrep;
 anhaalla_vb_1_1_VS	= mkVS ( mkV "anhålla" "anhöll" "anhållit" ) ;
 anhaalla_vb_1_1_VV	= mkV "anhålla" "anhöll" "anhållit" ** {c2 = mkComplement [ "om att" ] ; lock_VV = <>} ;
 anklaga_vb_1_V3	= mkV3 ( mkV "anklagar" ) noPrep (mkPrep "för");
 anklaga_vb_1_VV	= mkV "anklagar" ** {c2 = mkComplement [ " att" ] ; lock_VV = <>} ;
 anknyta_vb_1_V3	= mkV3 ( mkV "anknyta" "anknöt" "anknutit" ) noPrep (mkPrep "till");
 ankomma_vb_1_V	= mkV "ankomma" "ankom" "ankommit" ;
 anlaegga_vb_1_1_V2	= mkV2 ( mkV "anlägga" "anlade" "anlagt" ) noPrep;
 anlaenda_vb_1_1_V	= mkV "anländer" ;
 anlita_vb_1_V2	= mkV2 ( mkV "anlitar" ) noPrep;
 anloepa_vb_1_1_V2	= mkV2 ( mkV "anlöper" ) noPrep;
 anmaela_vb_1_11_V2	= mkV2 ( mkV "anmäler" ) noPrep;
 anmaela_vb_1_12_V2	= mkV2 (reflV ( mkV "anmäler" )) (mkPrep "till");
 anmaela_vb_1_1_VS	= mkVS ( mkV "anmäler" ) ;
 anmaerka_vb_1_1_V2	= mkV2 ( mkV "anmärker" ) (mkPrep "på");
 anmaerka_vb_1_1_VS	= mkVS ( mkV "anmärker" ) ;
 anmana_vb_1_V2	= mkV2 ( mkV "anmanar" ) noPrep;
 anmoda_vb_1_V2	= mkV2 ( mkV "anmodar" ) noPrep;
 annektera_vb_1_V2	= mkV2 ( mkV "annekterar" ) noPrep;
 annonsera_vb_11_V2	= mkV2 ( mkV "annonserar" ) (mkPrep "efter");
 annonsera_vb_12_V2	= mkV2 (partV ( mkV "annonserar" ) "ut") noPrep;
 annullera_vb_1_V2	= mkV2 ( mkV "annullerar" ) noPrep;
 anordna_vb_1_V2	= mkV2 ( mkV "anordnar" ) noPrep;
 anpassa_vb_1_V2	= mkV2 (reflV ( mkV "anpassar" )) (mkPrep "till");
 anpassa_vb_1_V3	= mkV3 ( mkV "anpassar" ) noPrep (mkPrep "till");
 anraetta_vb_1_1_V2	= mkV2 ( mkV "anrättar" ) noPrep;
 anrika_vb_1_V2	= mkV2 ( mkV "anrikar" ) noPrep;
 anropa_vb_1_V2	= mkV2 ( mkV "anropar" ) noPrep;
 ansa_vb_1_V2	= mkV2 ( mkV "ansar" ) noPrep;
 ansaetta_vb_1_1_V2	= mkV2 ( mkV "ansätta" "ansätter" "ansätt" "ansatte" "ansatt" "ansatt" ) noPrep;
 anse_vb_1_V2A	= mkV2A ( mkV "anse" "ansåg" "ansett" ) noPrep;
 anse_vb_1_VS	= mkVS ( mkV "anse" "ansåg" "ansett" ) ;
 anskaffa_vb_1_V2	= mkV2 ( mkV "anskaffar" ) noPrep;
 anslaa_vb_1_1_V2	= mkV2 ( mkV "anslå" "anslog" "anslagit" ) noPrep;
 ansluta_vb_11_V2	= mkV2 ( mkV "ansluta" "anslöt" "anslutit" ) noPrep;
 ansluta_vb_12_V2	= mkV2 (reflV ( mkV "ansluta" "anslöt" "anslutit" )) (mkPrep "till");
 ansoeka_vb_1_1_V	= mkV "ansöker" ;
 ansoeka_vb_1_1_V2	= mkV2 ( mkV "ansöker" ) (mkPrep "om");
 anspela_vb_1_V2	= mkV2 ( mkV "anspelar" ) (mkPrep "på");
 anstaa_vb_1_1_V2	= mkV2 ( mkV "anstå" "anstod" "anstått" ) noPrep;
 anstaella_vb_1_1_V2	= mkV2 ( mkV "anställer" ) noPrep;
 anstifta_vb_1_V2	= mkV2 ( mkV "anstiftar" ) noPrep;
 anstraenga_vb_1_1_V	= reflV ( mkV "anstränger" );
 anstraenga_vb_1_1_V2	= mkV2 ( mkV "anstränger" ) noPrep;
 ansvara_vb_1_V2	= mkV2 ( mkV "ansvarar" ) (mkPrep "för");
 ansvara_vb_1_VS	= mkVS ( mkV "ansvarar" ) ;
 anta_vb_1_V2	= mkV2 ( mkV "anta" "antar" "anta" "antog" "antagit" "antagen" ) noPrep;
 anta_vb_1_VS	= mkVS ( mkV "anta" "antar" "anta" "antog" "antagit" "antagen" ) ;
 antaenda_vb_1_1_V2	= mkV2 ( mkV "antänder" ) noPrep;
 antasta_vb_1_V2	= mkV2 ( mkV "antastar" ) noPrep;
 anteckna_vb_11_V2	= mkV2 ( mkV "antecknar" ) noPrep;
 anteckna_vb_12_V2	= mkV2 (reflV ( mkV "antecknar" )) (mkPrep "för");
 antraeffa_vb_1_1_V2	= mkV2 ( mkV "anträffar" ) noPrep;
 antyda_vb_1_VS	= mkVS ( mkV "antyda" "antydde" "antytt" ) ;
 anvaenda_vb_1_11_V2	= mkV2 ( mkV "använder" ) noPrep;
 anvaenda_vb_1_12_V2	= mkV2 (reflV ( mkV "använder" )) (mkPrep "av");
 anvisa_vb_11_V3	= mkV3 ( mkV "anvisar" ) noPrep (mkPrep "till");
 anvisa_vb_12_V3	= mkV3 ( mkV "anvisar" ) noPrep noPrep;
 appellera_vb_1_V2	= mkV2 ( mkV "appellerar" ) (mkPrep "till");
 applaadera_vb_1_1_V2	= mkV2 ( mkV "applåderar" ) noPrep;
 applicera_vb_1_V2	= mkV2 ( mkV "applicerar" ) noPrep;
 applicera_vb_1_V3	= mkV3 ( mkV "applicerar" ) noPrep (mkPrep "på");
 aptera_vb_1_V2	= mkV2 ( mkV "apterar" ) noPrep;
 arbeta_vb_1_V	= mkV "arbetar" ;
 arbeta_vb_11_V2	= mkV2 (partV ( mkV "arbetar" ) "för") (mkPrep "med");
 arbeta_vb_12_V2	= mkV2 (partV ( mkV "arbetar" ) "in") noPrep;
 argumentera_vb_1_V2	= mkV2 ( mkV "argumenterar" ) (mkPrep "för");
 arkebusera_vb_1_V2	= mkV2 ( mkV "arkebuserar" ) noPrep;
 armera_vb_1_V2	= mkV2 ( mkV "armerar" ) noPrep;
 arrangera_vb_1_V2	= mkV2 ( mkV "arrangerar" ) noPrep;
 arrendera_vb_1_V2	= mkV2 ( mkV "arrenderar" ) noPrep;
 arrestera_vb_1_V2	= mkV2 ( mkV "arresterar" ) noPrep;
 artas_vb_1_V	= reflV ( mkV "artas" );
 artas_vb_1_V2	= mkV2 (reflV ( mkV "artas" )) (mkPrep "till");
 artikulera_vb_1_V2	= mkV2 ( mkV "artikulerar" ) noPrep;
 asfaltera_vb_1_V2	= mkV2 ( mkV "asfalterar" ) noPrep;
 aska_vb_1_V2	= mkV2 ( mkV "askar" ) noPrep;
 aspirera_vb_1_V2	= mkV2 ( mkV "aspirerar" ) (mkPrep "på");
 assimilera_vb_1_V2	= mkV2 ( mkV "assimilerar" ) noPrep;
 assistera_vb_1_V3	= mkV3 ( mkV "assisterar" ) noPrep (mkPrep "vid");
 associera_vb_1_V2	= mkV2 ( mkV "associerar" ) (mkPrep "till");
 associera_vb_1_V3	= mkV3 ( mkV "associerar" ) noPrep (mkPrep "med");
 attackera_vb_1_V2	= mkV2 ( mkV "attackerar" ) noPrep;
 attestera_vb_1_V2	= mkV2 ( mkV "attesterar" ) noPrep;
 attrahera_vb_1_V2	= mkV2 ( mkV "attraherar" ) noPrep;
 auktorisera_vb_1_V2	= mkV2 ( mkV "auktoriserar" ) noPrep;
 auskultera_vb_1_V	= mkV "auskulterar" ;
 automatisera_vb_1_V2	= mkV2 ( mkV "automatiserar" ) noPrep;
 avancera_vb_1_VA	= ;
 avbalka_vb_1_V2	= mkV2 ( mkV "avbalkar" ) noPrep;
 avbestaella_vb_1_1_V2	= mkV2 ( mkV "avbeställer" ) noPrep;
 avbilda_vb_1_V2	= mkV2 ( mkV "avbildar" ) noPrep;
 avboeja_vb_2_1_V2	= mkV2 ( mkV "avböja" "avböjde" "avböjt" ) noPrep;
 avboeja_vb_2_1_VV	= mkV "avböja" "avböjde" "avböjt" ** {c2 = mkComplement [ " att" ] ; lock_VV = <>} ;
 avbryta_vb_1_V2	= mkV2 ( mkV "avbryta" "avbröt" "avbrutit" ) noPrep;
 avdela_vb_1_V2	= mkV2 ( mkV "avdelar" ) noPrep;
 avdramatisera_vb_1_V2	= mkV2 ( mkV "avdramatiserar" ) noPrep;
 avdunsta_vb_1_V	= mkV "avdunstar" ;
 avfaerda_vb_1_1_V2	= mkV2 ( mkV "avfärdar" ) noPrep;
 avfolka_vb_1_V	= mkV "avfolkar" ;
 avfyra_vb_1_V2	= mkV2 ( mkV "avfyrar" ) noPrep;
 avgaa_vb_1_1_V	= mkV "avgå" "avgår" "avgå" "avgick" "avgått" "avgången" ;
 avge_vb_1_V2	= mkV2 ( mkV "avge" "avger" "avge" "avgav" "avgett" "avgiven" ) noPrep;
 avgoera_vb_1_1_V2	= mkV2 ( mkV "avgöra" "avgjorde" "avgjort" ) noPrep;
 avgoera_vb_1_1_VQ	= mkVQ ( mkV "avgöra" "avgjorde" "avgjort" ) ;
 avguda_vb_1_V2	= mkV2 ( mkV "avgudar" ) noPrep;
 avhaalla_vb_1_11_V2	= mkV2 ( mkV "avhålla" "avhöll" "avhållit" ) noPrep;
 avhaalla_vb_1_12_V2	= mkV2 (reflV ( mkV "avhålla" "avhöll" "avhållit" )) (mkPrep "från");
 avhaalla_vb_1_1_V3	= mkV3 ( mkV "avhålla" "avhöll" "avhållit" ) noPrep (mkPrep "från");
 avhaalla_vb_1_1_VV	= mkV "avhålla" "avhöll" "avhållit" ** {c2 = mkComplement [ " att" ] ; lock_VV = <>} ;
 avhjaelpa_vb_1_1_V2	= mkV2 ( mkV "avhjälper" ) noPrep;
 avhysa_vb_1_V2	= mkV2 ( mkV "avhyser" ) noPrep;
 avisera_vb_1_V2	= mkV2 ( mkV "aviserar" ) noPrep;
 avklara_vb_2_V2	= mkV2 ( mkV "avklarar" ) noPrep;
 avkraeva_vb_1_1_V3	= mkV3 ( mkV "avkräver" ) noPrep noPrep;
 avkunna_vb_1_V2	= mkV2 ( mkV "avkunnar" ) noPrep;
 avla_vb_1_V2	= mkV2 ( mkV "avlar" ) noPrep;
 avlaegga_vb_1_1_V2	= mkV2 ( mkV "avlägga" "avlade" "avlagt" ) noPrep;
 avlaegsna_vb_1_11_V2	= mkV2 ( mkV "avlägsnar" ) noPrep;
 avlaegsna_vb_1_12_V2	= mkV2 (reflV ( mkV "avlägsnar" )) (mkPrep "från");
 avlaemna_vb_1_1_V2	= mkV2 ( mkV "avlämnar" ) noPrep;
 avlaesa_vb_1_1_V2	= mkV2 ( mkV "avläser" ) noPrep;
 avlasta_vb_1_V2	= mkV2 ( mkV "avlastar" ) noPrep;
 avleda_vb_1_V2	= mkV2 ( mkV "avleda" "avledde" "avlett" ) noPrep;
 avlida_vb_1_V	= mkV "avlida" "avled" "avlidit" ;
 avliva_vb_1_V2	= mkV2 ( mkV "avlivar" ) noPrep;
 avloena_vb_1_1_V2	= mkV2 ( mkV "avlönar" ) noPrep;
 avloepa_vb_1_1_V	= mkV "avlöper" ;
 avloesa_vb_1_1_V2	= mkV2 ( mkV "avlöser" ) noPrep;
 avlossa_vb_1_V2	= mkV2 ( mkV "avlossar" ) noPrep;
 avraada_vb_1_1_V2	= mkV2 ( mkV "avråda" "avrådde" "avrått" ) noPrep;
 avraetta_vb_1_1_V2	= mkV2 ( mkV "avrättar" ) noPrep;
 avreagera_vb_1_V2	= mkV2 (reflV ( mkV "avreagerar" )) (mkPrep "på");
 avregistrera_vb_1_V2	= mkV2 ( mkV "avregistrerar" ) noPrep;
 avrunda_vb_1_V2	= mkV2 ( mkV "avrundar" ) noPrep;
 avrusta_vb_1_V	= mkV "avrustar" ;
 avsaega_vb_1_1_V2	= mkV2 (reflV ( mkV "avsäga" "avsade" "avsagt" )) noPrep;
 avsaetta_vb_1_1_V2	= mkV2 ( mkV "avsätta" "avsätter" "avsätt" "avsatte" "avsatt" "avsatt" ) noPrep;
 avse_vb_1_V2	= mkV2 ( mkV "avse" "avsåg" "avsett" ) noPrep;
 avse_vb_1_VV	= mkV "avse" "avsåg" "avsett" ** {c2 = mkComplement [ " att" ] ; lock_VV = <>} ;
 avskaerma_vb_1_11_V2	= mkV2 ( mkV "avskärmar" ) noPrep;
 avskaerma_vb_1_12_V2	= mkV2 (reflV ( mkV "avskärmar" )) (mkPrep "från");
 avskaffa_vb_1_V2	= mkV2 ( mkV "avskaffar" ) noPrep;
 avskeda_vb_1_V2	= mkV2 ( mkV "avskedar" ) noPrep;
 avskilja_vb_1_V2	= mkV2 ( mkV "avskilja" "avskilde" "avskilt" ) noPrep;
 avskraecka_vb_1_1_V2	= mkV2 ( mkV "avskräcker" ) noPrep;
 avsky_vb_1_V	= mkV "avskyr" ;
 avsky_vb_1_V2	= mkV2 ( mkV "avskyr" ) noPrep;
 avsky_vb_1_VV	= mkV "avskyr" ** {c2 = mkComplement [ " att" ] ; lock_VV = <>} ;
 avslaa_vb_1_1_V2	= mkV2 ( mkV "avslå" "avslog" "avslagit" ) noPrep;
 avsloeja_vb_1_1_V2	= mkV2 ( mkV "avslöjar" ) noPrep;
 avsloeja_vb_1_1_VS	= mkVS ( mkV "avslöjar" ) ;
 avsluta_vb_1_V2	= mkV2 ( mkV "avslutar" ) noPrep;
 avsoendra_vb_1_1_V2	= mkV2 ( mkV "avsöndrar" ) noPrep;
 avspaerra_vb_1_1_V2	= mkV2 ( mkV "avspärrar" ) noPrep;
 avspegla_vb_1_V2	= mkV2 ( mkV "avspeglar" ) noPrep;
 avspisa_vb_1_V2	= mkV2 ( mkV "avspisar" ) noPrep;
 avstaa_vb_1_1_V2	= mkV2 ( mkV "avstå" "avstod" "avstått" ) (mkPrep "från");
 avstaa_vb_1_1_VV	= mkV "avstå" "avstod" "avstått" ** {c2 = mkComplement [ "från att" ] ; lock_VV = <>} ;
 avstava_vb_1_V2	= mkV2 ( mkV "avstavar" ) noPrep;
 avstyra_vb_1_V2	= mkV2 ( mkV "avstyra" "avstyrde" "avstyrt" ) noPrep;
 avstyrka_vb_1_V2	= mkV2 ( mkV "avstyrker" ) noPrep;
 avsyna_vb_1_V2	= mkV2 ( mkV "avsynar" ) noPrep;
 avta_vb_1_V	= mkV "avta" "avtar" "avta" "avtog" "avtagit" "avtagen" ;
 avtacka_vb_1_V2	= mkV2 ( mkV "avtackar" ) noPrep;
 avtala_vb_1_V2	= mkV2 (partV ( mkV "avtalar" ) "om") noPrep;
 avteckna_vb_1_V2	= mkV2 (reflV ( mkV "avtecknar" )) (mkPrep "mot");
 avtraeda_vb_1_1_V2	= mkV2 ( mkV "avträda" "avträdde" "avträtt" ) noPrep;
 avtrubba_vb_1_V2	= mkV2 ( mkV "avtrubbar" ) noPrep;
 avundas_vb_1_V3	= mkV3 ( mkV "avundas" ) noPrep noPrep;
 avvaenja_vb_1_1_V2	= mkV2 ( mkV "avvänja" "avvande" "avvant" ) noPrep;
 avvaepna_vb_1_1_V2	= mkV2 ( mkV "avväpnar" ) noPrep;
 avvaerja_vb_1_1_V2	= mkV2 ( mkV "avvärja" "avvärjde" "avvärjt" ) noPrep;
 avvakta_vb_1_V2	= mkV2 ( mkV "avvaktar" ) noPrep;
 avvara_vb_1_V2	= mkV2 ( mkV "avvarar" ) noPrep;
 avveckla_vb_1_V2	= mkV2 ( mkV "avvecklar" ) noPrep;
 avverka_vb_1_V2	= mkV2 ( mkV "avverkar" ) noPrep;
 avvika_vb_1_V2	= mkV2 ( mkV "avvika" "avvek" "avvikit" ) (mkPrep "från");
 avvisa_vb_1_V2	= mkV2 ( mkV "avvisar" ) noPrep;
 avyttra_vb_1_V2	= mkV2 ( mkV "avyttrar" ) noPrep;
 axla_vb_1_V2	= mkV2 ( mkV "axlar" ) noPrep;
 baagna_vb_1_1_V2	= mkV2 ( mkV "bågnar" ) (mkPrep "av");
 babbla_vb_1_V	= mkV "babblar" ;
 backa_vb_1_V	= mkV "backar" ;
 backa_vb_11_V2	= mkV2 ( mkV "backar" ) noPrep;
 backa_vb_12_V2	= mkV2 (partV ( mkV "backar" ) "upp") noPrep;
 bada_vb_1_V2	= mkV2 ( mkV "badar" ) noPrep;
 badda_vb_1_V2	= mkV2 ( mkV "baddar" ) noPrep;
 baedda_vb_1_11_V2	= mkV2 ( mkV "bäddar" ) (mkPrep "för");
 baedda_vb_1_12_V2	= mkV2 ( mkV "bäddar" ) noPrep;
 baenda_vb_1_1_V2	= mkV2 ( mkV "bänder" ) (mkPrep "med");
 baera_vb_1_1_V	= partV (reflV ( mkV "bära" "bar" "burit" )) "åt";
 baera_vb_1_1_V2	= mkV2 ( mkV "bära" "bar" "burit" ) noPrep;
 baerga_vb_1_1_V2	= mkV2 ( mkV "bärgar" ) noPrep;
 baettra_vb_1_1_V	= reflV ( mkV "bättrar" );
 baeva_vb_1_1_V2	= mkV2 ( mkV "bävar" ) (mkPrep "för");
 baka_vb_1_V2	= mkV2 ( mkV "bakar" ) noPrep;
 bakbinda_vb_1_V2	= mkV2 ( mkV "bakbinda" "bakband" "bakbundit" ) noPrep;
 baktala_vb_1_V2	= mkV2 ( mkV "baktalar" ) noPrep;
 balansera_vb_2_V	= mkV "balanserar" ;
 balansera_vb_2_V2	= mkV2 ( mkV "balanserar" ) noPrep;
 balsamera_vb_1_V2	= mkV2 ( mkV "balsamerar" ) noPrep;
 banda_vb_1_V2	= mkV2 ( mkV "bandar" ) noPrep;
 banka_vb_1_V2	= mkV2 ( mkV "bankar" ) (mkPrep "på");
 bannlysa_vb_1_V2	= mkV2 ( mkV "bannlyser" ) noPrep;
 banta_vb_2_V	= mkV "bantar" ;
 banta_vb_2_V2	= mkV2 ( mkV "bantar" ) noPrep;
 basa_vb_1_V2	= mkV2 ( mkV "basar" ) (mkPrep "för");
 basera_vb_1_V2	= mkV2 (reflV ( mkV "baserar" )) (mkPrep "på");
 basta_vb_1_V	= mkV "bastar" ;
 baxna_vb_1_V	= mkV "baxnar" ;
 be_vb_1_V	= mkV "be" "bad" "bett" ;
 be_vb_11_V2	= mkV2 ( mkV "be" "bad" "bett" ) (mkPrep "till");
 be_vb_12_V2	= mkV2 ( mkV "be" "bad" "bett" ) noPrep;
 be_vb_1_V3	= mkV3 ( mkV "be" "bad" "bett" ) noPrep (mkPrep "om");
 beakta_vb_1_V2	= mkV2 ( mkV "beaktar" ) noPrep;
 beakta_vb_1_VS	= mkVS ( mkV "beaktar" ) ;
 bearbeta_vb_1_V2	= mkV2 ( mkV "bearbetar" ) noPrep;
 bebaada_vb_1_1_V2	= mkV2 ( mkV "bebådar" ) noPrep;
 bebo_vb_1_V2	= mkV2 ( mkV "bebor" ) noPrep;
 bebygga_vb_1_V2	= mkV2 ( mkV "bebygger" ) noPrep;
 bedaara_vb_1_1_V2	= mkV2 ( mkV "bedårar" ) noPrep;
 bedarra_vb_1_V	= mkV "bedarrar" ;
 bedoema_vb_1_1_V2	= mkV2 ( mkV "bedömer" ) noPrep;
 bedra_vb_1_V	= reflV ( mkV "bedra" "bedrar" "bedra" "bedrog" "bedragit" "bedragen" );
 bedra_vb_1_V2	= mkV2 ( mkV "bedra" "bedrar" "bedra" "bedrog" "bedragit" "bedragen" ) noPrep;
 bedriva_vb_1_V2	= mkV2 ( mkV "bedriva" "bedrev" "bedrivit" ) noPrep;
 bedroeva_vb_1_1_V2	= mkV2 ( mkV "bedrövar" ) noPrep;
 bedyra_vb_1_V2	= mkV2 ( mkV "bedyrar" ) noPrep;
 bedyra_vb_1_VS	= mkVS ( mkV "bedyrar" ) ;
 befaesta_vb_1_1_V2	= mkV2 ( mkV "befästa" "befäster" "befäst" "befäste" "befäst" "befäst" ) noPrep;
 befalla_vb_1_V2	= mkV2 ( mkV "befaller" ) noPrep;
 befara_vb_1_V2	= mkV2 ( mkV "befarar" ) noPrep;
 befara_vb_1_VS	= mkVS ( mkV "befarar" ) ;
 beflaecka_vb_1_1_V2	= mkV2 ( mkV "befläckar" ) noPrep;
 befolka_vb_1_V2	= mkV2 ( mkV "befolkar" ) noPrep;
 befordra_vb_1_V2	= mkV2 ( mkV "befordrar" ) noPrep;
 befraemja_vb_1_1_V2	= mkV2 ( mkV "befrämjar" ) noPrep;
 befria_vb_1_V2	= mkV2 ( mkV "befriar" ) noPrep;
 befrukta_vb_1_V2	= mkV2 ( mkV "befruktar" ) noPrep;
 begaa_vb_1_1_V2	= mkV2 ( mkV "begå" "begår" "begå" "begick" "begått" "begången" ) noPrep;
 begaava_vb_1_1_V3	= mkV3 ( mkV "begåvar" ) noPrep (mkPrep "med");
 begaera_vb_1_1_V	= mkV "begära" "begärde" "begärt" ;
 begaera_vb_1_1_V2	= mkV2 ( mkV "begära" "begärde" "begärt" ) noPrep;
 begaera_vb_1_1_VS	= mkVS ( mkV "begära" "begärde" "begärt" ) ;
 begagna_vb_1_V2	= mkV2 ( mkV "begagnar" ) noPrep;
 begraata_vb_1_1_V2	= mkV2 ( mkV "begråta" "begrät" "begråtit" ) noPrep;
 begraensa_vb_1_11_V2	= mkV2 ( mkV "begränsar" ) noPrep;
 begraensa_vb_1_12_V2	= mkV2 (reflV ( mkV "begränsar" )) (mkPrep "till");
 begraensa_vb_1_1_VV	= reflV ( mkV "begränsar" ) ** {c2 = mkComplement [ "till att" ] ; lock_VV = <>} ;
 begrava_vb_11_V2	= mkV2 ( mkV "begraver" ) noPrep;
 begrava_vb_12_V2	= mkV2 (reflV ( mkV "begraver" )) (mkPrep "i");
 begripa_vb_11_V2	= mkV2 ( mkV "begripa" "begrep" "begripit" ) noPrep;
 begripa_vb_12_V2	= mkV2 (reflV ( mkV "begripa" "begrep" "begripit" )) (mkPrep "på");
 begrunda_vb_1_V2	= mkV2 ( mkV "begrundar" ) noPrep;
 behaalla_vb_1_1_V2	= mkV2 ( mkV "behålla" "behöll" "behållit" ) noPrep;
 behaerska_vb_1_1_V2	= mkV2 ( mkV "behärskar" ) noPrep;
 behaga_vb_1_V2	= mkV2 ( mkV "behagar" ) noPrep;
 behaga_vb_1_VV	= mkV "behagar" ** {c2 = mkComplement [ ] ; lock_VV = <>} ;
 behandla_vb_1_V2	= mkV2 ( mkV "behandlar" ) noPrep;
 behoevas_vb_1_1_V2	= mkV2 ( mkV "behövs" ) noPrep;
 behoevas_vb_1_1_VV	= mkV "behövs" ** {c2 = mkComplement [ ] ; lock_VV = <>} ;
 beivra_vb_1_V2	= mkV2 ( mkV "beivrar" ) noPrep;
 bejaka_vb_1_V2	= mkV2 ( mkV "bejakar" ) noPrep;
 bekaempa_vb_1_1_V2	= mkV2 ( mkV "bekämpar" ) noPrep;
 bekaenna_vb_1_1_V2	= mkV2 ( mkV "bekänna" "bekände" "bekänt" ) noPrep;
 bekaenna_vb_1_1_VS	= mkVS ( mkV "bekänna" "bekände" "bekänt" ) ;
 beklaga_vb_1_V2	= mkV2 ( mkV "beklagar" ) noPrep;
 beklaga_vb_1_VS	= mkVS ( mkV "beklagar" ) ;
 bekomma_vb_1_V2	= mkV2 ( mkV "bekomma" "bekom" "bekommit" ) noPrep;
 bekosta_vb_1_V2	= mkV2 ( mkV "bekostar" ) noPrep;
 bekraefta_vb_1_1_V	= mkV "bekräftar" ;
 bekraefta_vb_1_1_V2	= mkV2 ( mkV "bekräftar" ) noPrep;
 bekymra_vb_1_V2	= mkV2 (reflV ( mkV "bekymrar" )) (mkPrep "för");
 belaana_vb_1_1_V2	= mkV2 ( mkV "belånar" ) noPrep;
 belaegga_vb_1_1_V2	= mkV2 ( mkV "belägga" "belade" "belagt" ) noPrep;
 belaegga_vb_1_1_V3	= mkV3 ( mkV "belägga" "belade" "belagt" ) noPrep (mkPrep "med");
 belaegra_vb_1_1_V2	= mkV2 ( mkV "belägrar" ) noPrep;
 belasta_vb_1_V2	= mkV2 ( mkV "belastar" ) noPrep;
 beledsaga_vb_1_V2	= mkV2 ( mkV "beledsagar" ) noPrep;
 beloena_vb_1_1_V2	= mkV2 ( mkV "belönar" ) noPrep;
 belysa_vb_1_V2	= mkV2 ( mkV "belyser" ) noPrep;
 bemaestra_vb_1_1_V2	= mkV2 ( mkV "bemästrar" ) noPrep;
 bemanna_vb_1_V2	= mkV2 ( mkV "bemannar" ) noPrep;
 bemoeta_vb_1_1_V2	= mkV2 ( mkV "bemöter" ) noPrep;
 bemyndiga_vb_1_V2	= mkV2 ( mkV "bemyndigar" ) noPrep;
 bena_vb_1_V2	= mkV2 ( mkV "benar" ) noPrep;
 benaada_vb_1_1_V2	= mkV2 ( mkV "benådar" ) noPrep;
 benaemna_vb_1_1_V3	= mkV3 ( mkV "benämner" ) noPrep noPrep;
 beordra_vb_1_V2	= mkV2 ( mkV "beordrar" ) noPrep;
 beraekna_vb_1_1_V2	= mkV2 ( mkV "beräknar" ) noPrep;
 beraekna_vb_1_1_VS	= mkVS ( mkV "beräknar" ) ;
 beraetta_vb_1_1_V2	= mkV2 (partV ( mkV "berättar" ) "om") noPrep;
 beraetta_vb_1_1_VS	= mkVS (partV ( mkV "berättar" ) "om") ;
 beraettiga_vb_1_1_V3	= mkV3 ( mkV "berättigar" ) noPrep (mkPrep "till");
 bereda_vb_11_V2	= mkV2 ( mkV "bereda" "beredde" "berett" ) noPrep;
 bereda_vb_12_V2	= mkV2 (reflV ( mkV "bereda" "beredde" "berett" )) (mkPrep "på");
 bereda_vb_1_VS	= mkVS (reflV ( mkV "bereda" "beredde" "berett" )) ;
 berika_vb_1_V2	= mkV2 ( mkV "berikar" ) noPrep;
 berika_vb_1_V3	= mkV3 ( mkV "berikar" ) noPrep (mkPrep "med");
 beriktiga_vb_1_V2	= mkV2 ( mkV "beriktigar" ) noPrep;
 bero_vb_1_V2	= mkV2 (partV ( mkV "beror" ) "på") noPrep;
 bero_vb_1_VS	= mkVS (partV ( mkV "beror" ) "på") ;
 beroemma_vb_1_1_V2	= mkV2 ( mkV "berömmer" ) noPrep;
 beroera_vb_1_1_V2	= mkV2 ( mkV "beröra" "berörde" "berört" ) noPrep;
 beroeva_vb_1_1_V3	= mkV3 ( mkV "berövar" ) noPrep noPrep;
 besaetta_vb_1_1_V2	= mkV2 ( mkV "besätta" "besätter" "besätt" "besatte" "besatt" "besatt" ) noPrep;
 besanna_vb_1_V2	= mkV2 ( mkV "besannar" ) noPrep;
 besegla_vb_1_V2	= mkV2 ( mkV "beseglar" ) noPrep;
 besegra_vb_1_V2	= mkV2 ( mkV "besegrar" ) noPrep;
 besiktiga_vb_1_V2	= mkV2 ( mkV "besiktigar" ) noPrep;
 besinna_vb_1_V	= reflV ( mkV "besinnar" );
 besinna_vb_1_VS	= mkVS ( mkV "besinnar" ) ;
 besitta_vb_1_V2	= mkV2 ( mkV "besitta" "besatt" "besuttit" ) noPrep;
 besjaela_vb_1_1_V2	= mkV2 ( mkV "besjälar" ) noPrep;
 besjunga_vb_1_V2	= mkV2 ( mkV "besjunga" "besjöng" "besjungit" ) noPrep;
 beskaada_vb_1_1_V2	= mkV2 ( mkV "beskådar" ) noPrep;
 beskatta_vb_1_V2	= mkV2 ( mkV "beskattar" ) noPrep;
 beskjuta_vb_1_V2	= mkV2 ( mkV "beskjuta" "besköt" "beskjutit" ) noPrep;
 beskriva_vb_1_V2	= mkV2 ( mkV "beskriva" "beskrev" "beskrivit" ) noPrep;
 beskydda_vb_1_V2	= mkV2 ( mkV "beskyddar" ) noPrep;
 beskylla_vb_1_V2	= mkV2 ( mkV "beskyller" ) noPrep;
 beslaa_vb_1_1_V2	= mkV2 ( mkV "beslå" "beslog" "beslagit" ) noPrep;
 beslaa_vb_1_1_V3	= mkV3 ( mkV "beslå" "beslog" "beslagit" ) noPrep (mkPrep "med");
 beslagta_vb_1_V2	= mkV2 ( mkV "beslagta" "beslagtar" "beslagta" "beslagtog" "beslagtagit" "beslagtagen" ) noPrep;
 besluta_vb_1_V2	= mkV2 ( mkV "beslutar" ) (mkPrep "om");
 besluta_vb_1_VS	= mkVS ( mkV "beslutar" ) ;
 besluta_vb_1_VV	= mkV "beslutar" ** {c2 = mkComplement [ " att" ] ; lock_VV = <>} ;
 besoeka_vb_1_1_V2	= mkV2 ( mkV "besöker" ) noPrep;
 bespara_vb_1_V3	= mkV3 ( mkV "besparar" ) noPrep noPrep;
 bespotta_vb_1_V2	= mkV2 ( mkV "bespottar" ) noPrep;
 bespruta_vb_1_V2	= mkV2 ( mkV "besprutar" ) noPrep;
 bestaa_vb_2_1_V	= mkV "bestå" "bestod" "bestådd" ;
 bestaa_vb_2_1_V2	= mkV2 ( mkV "bestå" "bestod" "bestådd" ) (mkPrep "av");
 bestaa_vb_2_1_VS	= mkVS ( mkV "bestå" "bestod" "bestådd" ) ;
 bestaella_vb_2_1_V2	= mkV2 ( mkV "beställer" ) noPrep;
 bestaemma_vb_1_11_V2	= mkV2 ( mkV "bestämmer" ) (mkPrep "över");
 bestaemma_vb_1_12_V2	= mkV2 ( mkV "bestämmer" ) noPrep;
 bestaemma_vb_1_13_V2	= mkV2 (reflV ( mkV "bestämmer" )) (mkPrep "för");
 bestaemma_vb_1_11_VS	= mkVS ( mkV "bestämmer" ) ;
 bestaemma_vb_1_12_VS	= mkVS (reflV ( mkV "bestämmer" )) ;
 bestaemma_vb_1_1_VV	= reflV ( mkV "bestämmer" ) ** {c2 = mkComplement [ "för att" ] ; lock_VV = <>} ;
 bestiga_vb_1_V2	= mkV2 ( mkV "bestiga" "besteg" "bestigit" ) noPrep;
 bestraala_vb_1_1_V2	= mkV2 ( mkV "bestrålar" ) noPrep;
 bestraffa_vb_1_V2	= mkV2 ( mkV "bestraffar" ) noPrep;
 bestrida_vb_1_V2	= mkV2 ( mkV "bestrida" "bestred" "bestritt" ) noPrep;
 bestrida_vb_1_VS	= mkVS ( mkV "bestrida" "bestred" "bestritt" ) ;
 bestroe_vb_1_1_V2	= mkV2 ( mkV "beströr" ) noPrep;
 bestryka_vb_1_V2	= mkV2 ( mkV "bestryka" "beströk" "bestrukit" ) noPrep;
 bestyra_vb_1_VS	= mkVS ( mkV "bestyra" "bestyrde" "bestyrt" ) ;
 bestyrka_vb_1_V2	= mkV2 ( mkV "bestyrker" ) noPrep;
 bestyrka_vb_1_VS	= mkVS ( mkV "bestyrker" ) ;
 besvaera_vb_1_1_V2	= mkV2 ( mkV "besvärar" ) noPrep;
 besvaerja_vb_1_1_V2	= mkV2 ( mkV "besvärja" "besvor" "besvurit" ) noPrep;
 besvara_vb_1_V2	= mkV2 ( mkV "besvarar" ) noPrep;
 beta_vb_2_V	= mkV "beta" "betar" "beta" "betog" "betagit" "betagen" ;
 beta_vb_2_V2	= mkV2 ( mkV "beta" "betar" "beta" "betog" "betagit" "betagen" ) noPrep;
 betaecka_vb_1_1_V2	= mkV2 ( mkV "betäcker" ) noPrep;
 betaenka_vb_1_1_V2	= mkV2 ( mkV "betänker" ) noPrep;
 betaenka_vb_1_1_VS	= mkVS ( mkV "betänker" ) ;
 betala_vb_1_V3	= mkV3 ( mkV "betalar" ) noPrep noPrep;
 beteckna_vb_1_V2	= mkV2 ( mkV "betecknar" ) noPrep;
 betinga_vb_1_V	= mkV "betingar" ;
 betjaena_vb_1_1_V2	= mkV2 ( mkV "betjänar" ) noPrep;
 betona_vb_1_V2	= mkV2 ( mkV "betonar" ) noPrep;
 betona_vb_1_VS	= mkVS ( mkV "betonar" ) ;
 betrakta_vb_1_V2	= mkV2 ( mkV "betraktar" ) noPrep;
 betsa_vb_1_V2	= mkV2 ( mkV "betsar" ) noPrep;
 betunga_vb_1_V2	= mkV2 ( mkV "betungar" ) noPrep;
 betvinga_vb_1_V2	= mkV2 ( mkV "betvingar" ) noPrep;
 betvivla_vb_1_VS	= mkVS ( mkV "betvivlar" ) ;
 betyda_vb_1_V	= mkV "betyda" "betydde" "betytt" ;
 betyda_vb_1_V2	= mkV2 ( mkV "betyda" "betydde" "betytt" ) noPrep;
 betyda_vb_1_V3	= mkV3 ( mkV "betyda" "betydde" "betytt" ) noPrep (mkPrep "för");
 betyda_vb_1_VS	= mkVS ( mkV "betyda" "betydde" "betytt" ) ;
 betyga_vb_1_V3	= mkV3 ( mkV "betygar" ) noPrep noPrep;
 betygsaetta_vb_1_1_V2	= mkV2 ( mkV "betygsätta" "betygsätter" "betygsätt" "betygsatte" "betygsatt" "betygsatt" ) noPrep;
 beundra_vb_1_V2	= mkV2 ( mkV "beundrar" ) noPrep;
 bevaepna_vb_1_1_V2	= mkV2 ( mkV "beväpnar" ) noPrep;
 bevaerdiga_vb_1_1_V2	= mkV2 ( mkV "bevärdigar" ) (mkPrep "inte");
 bevaka_vb_1_V2	= mkV2 ( mkV "bevakar" ) noPrep;
 bevara_vb_1_V2	= mkV2 ( mkV "bevarar" ) noPrep;
 bevattna_vb_1_V2	= mkV2 ( mkV "bevattnar" ) noPrep;
 bevilja_vb_1_V2	= mkV2 ( mkV "beviljar" ) noPrep;
 bevisa_vb_1_V2	= mkV2 ( mkV "bevisar" ) noPrep;
 bevisa_vb_1_VS	= mkVS ( mkV "bevisar" ) ;
 bevista_vb_1_V2	= mkV2 ( mkV "bevistar" ) noPrep;
 bevittna_vb_1_V2	= mkV2 ( mkV "bevittnar" ) noPrep;
 bevittna_vb_1_VS	= mkVS ( mkV "bevittnar" ) ;
 bibehaalla_vb_1_1_V2	= mkV2 ( mkV "bibehålla" "bibehöll" "bibehållit" ) noPrep;
 bibringa_vb_1_V3	= mkV3 ( mkV "bibringar" ) noPrep noPrep;
 bida_vb_1_V	= mkV "bidar" ;
 bidra_vb_1_V2	= mkV2 ( mkV "bidra" "bidrar" "bidra" "bidrog" "bidragit" "bidragen" ) (mkPrep "till");
 bidra_vb_1_VS	= mkVS ( mkV "bidra" "bidrar" "bidra" "bidrog" "bidragit" "bidragen" ) ;
 bifalla_vb_1_V2	= mkV2 ( mkV "bifalla" "biföll" "bifallit" ) noPrep;
 bifoga_vb_1_V2	= mkV2 ( mkV "bifogar" ) noPrep;
 bikta_vb_1_V	= reflV ( mkV "biktar" );
 bikta_vb_11_V2	= mkV2 ( mkV "biktar" ) noPrep;
 bikta_vb_12_V2	= mkV2 (reflV ( mkV "biktar" )) noPrep;
 bila_vb_2_V	= mkV "bilar" ;
 bilaegga_vb_1_1_V2	= mkV2 ( mkV "bilägga" "bilade" "bilagt" ) noPrep;
 bilda_vb_1_V2	= mkV2 ( mkV "bildar" ) noPrep;
 binda_vb_11_V2	= mkV2 ( mkV "binda" "band" "bundit" ) noPrep;
 binda_vb_12_V2	= mkV2 (reflV ( mkV "binda" "band" "bundit" )) (mkPrep "för");
 bistaa_vb_1_1_V2	= mkV2 ( mkV "bistå" "bistod" "bistått" ) noPrep;
 bita_vb_1_V	= mkV "bita" "bet" "bitit" ;
 bita_vb_11_V2	= mkV2 ( mkV "bita" "bet" "bitit" ) (mkPrep "i");
 bita_vb_12_V2	= mkV2 ( mkV "bita" "bet" "bitit" ) noPrep;
 bitraeda_vb_1_1_V2	= mkV2 ( mkV "biträda" "biträdde" "biträtt" ) noPrep;
 bjuda_vb_1_V3	= mkV3 ( mkV "bjuda" "bjöd" "bjudit" ) noPrep (mkPrep "på");
 blaana_vb_1_1_V	= mkV "blånar" ;
 blaaneka_vb_1_1_V	= mkV "blånekar" ;
 blaasa_vb_2_1_V	= mkV "blåser" ;
 bladdra_vb_1_V	= mkV "bladdrar" ;
 blaeddra_vb_1_1_V	= mkV "bläddrar" ;
 blaenda_vb_1_1_V2	= mkV2 ( mkV "bländar" ) noPrep;
 blaenga_vb_1_1_V2	= mkV2 ( mkV "blänger" ) (mkPrep "på");
 blaenka_vb_1_1_V	= mkV "blänker" ;
 blanda_vb_1_V2	= mkV2 (partV (reflV ( mkV "blandar" )) "i") noPrep;
 blanda_vb_1_V3	= mkV3 ( mkV "blandar" ) noPrep (mkPrep "och");
 bleka_vb_1_V2	= mkV2 ( mkV "bleker" ) noPrep;
 blekna_vb_1_V	= mkV "bleknar" ;
 bli_vb_11_V	= partV ( mkV "bli" "blev" "blivit" ) "av";
 bli_vb_12_V	= partV ( mkV "bli" "blev" "blivit" ) "över";
 bli_vb_11_V2	= mkV2 ( mkV "bli" "blev" "blivit" ) noPrep;
 bli_vb_12_V2	= mkV2 (partV (partV ( mkV "bli" "blev" "blivit" ) "av") "med") noPrep;
 bli_vb_1_VA	= mkVA ( mkV "bli" "blev" "blivit" ) ;
 blicka_vb_1_V	= mkV "blickar" ;
 blidka_vb_1_V2	= mkV2 ( mkV "blidkar" ) noPrep;
 blinka_vb_1_V	= mkV "blinkar" ;
 blockera_vb_1_V2	= mkV2 ( mkV "blockerar" ) noPrep;
 bloeda_vb_1_1_V	= mkV "blöda" "blödde" "blött" ;
 bloeta_vb_1_1_V2	= mkV2 ( mkV "blöter" ) noPrep;
 blomma_vb_1_V	= mkV "blommar" ;
 blomstra_vb_1_V	= mkV "blomstrar" ;
 blossa_vb_1_V	= partV ( mkV "blossar" ) "upp";
 blotta_vb_1_V2	= mkV2 ( mkV "blottar" ) noPrep;
 blottlaegga_vb_1_1_V2	= mkV2 ( mkV "blottlägga" "blottlade" "blottlagt" ) noPrep;
 bluffa_vb_1_V2	= mkV2 ( mkV "bluffar" ) noPrep;
 blunda_vb_1_V	= mkV "blundar" ;
 bo_vb_1_V	= mkV "bor" ;
 bocka_vb_1_V	= mkV "bockar" ;
 bocka_vb_1_V2	= mkV2 ( mkV "bockar" ) noPrep;
 boeja_vb_1_11_V2	= mkV2 ( mkV "böja" "böjde" "böjt" ) noPrep;
 boeja_vb_1_12_V2	= mkV2 (reflV ( mkV "böja" "böjde" "böjt" )) (mkPrep "för");
 boeka_vb_1_1_V2	= mkV2 ( mkV "bökar" ) (mkPrep "i");
 boela_vb_1_1_V	= mkV "bölar" ;
 boelja_vb_1_1_V	= mkV "böljar" ;
 boena_vb_1_1_V2	= mkV2 ( mkV "bönar" ) (mkPrep "om");
 boenfalla_vb_1_1_V2	= mkV2 ( mkV "bönfalla" "bönföll" "bönfallit" ) (mkPrep "om");
 boenhoera_vb_1_1_V2	= mkV2 ( mkV "bönhöra" "bönhörde" "bönhört" ) noPrep;
 boera_vb_1_1_VV	= mkV "böra" "borde" "bort" ** {c2 = mkComplement [ ] ; lock_VV = <>} ;
 boerja_vb_1_1_V2	= mkV2 ( mkV "börjar" ) (mkPrep "med");
 boerja_vb_1_11_VV	= mkV "börjar" ** {c2 = mkComplement [ "med att" ] ; lock_VV = <>} ;
 boerja_vb_1_12_VV	= mkV "börjar" ** {c2 = mkComplement [ ] ; lock_VV = <>} ;
 boeta_vb_1_1_V2	= mkV2 ( mkV "bötar" ) noPrep;
 boetfaella_vb_1_1_V2	= mkV2 ( mkV "bötfäller" ) noPrep;
 bogsera_vb_1_V2	= mkV2 ( mkV "bogserar" ) noPrep;
 bojkotta_vb_1_V2	= mkV2 ( mkV "bojkottar" ) noPrep;
 boka_vb_1_V2	= mkV2 ( mkV "bokar" ) noPrep;
 bokfoera_vb_1_1_V2	= mkV2 ( mkV "bokföra" "bokförde" "bokfört" ) noPrep;
 bokstavera_vb_1_V2	= mkV2 ( mkV "bokstaverar" ) noPrep;
 bolla_vb_11_V2	= mkV2 ( mkV "bollar" ) (mkPrep "med");
 bolla_vb_12_V2	= mkV2 ( mkV "bollar" ) noPrep;
 bolma_vb_1_V	= mkV "bolmar" ;
 bolma_vb_1_V2	= mkV2 ( mkV "bolmar" ) (mkPrep "på");
 bomba_vb_1_V2	= mkV2 ( mkV "bombar" ) noPrep;
 bombardera_vb_1_V2	= mkV2 ( mkV "bombarderar" ) noPrep;
 bombardera_vb_1_V3	= mkV3 ( mkV "bombarderar" ) noPrep (mkPrep "med");
 bomma_vb_2_V2	= mkV2 ( mkV "bommar" ) noPrep;
 bona_vb_1_V2	= mkV2 ( mkV "bonar" ) noPrep;
 borda_vb_1_V2	= mkV2 ( mkV "bordar" ) noPrep;
 bordlaegga_vb_1_1_V2	= mkV2 ( mkV "bordlägga" "bordlade" "bordlagt" ) noPrep;
 borga_vb_1_V2	= mkV2 ( mkV "borgar" ) (mkPrep "för");
 borra_vb_1_V2	= mkV2 ( mkV "borrar" ) noPrep;
 borsta_vb_1_V2	= mkV2 ( mkV "borstar" ) noPrep;
 bortfoerklara_vb_1_1_V2	= mkV2 ( mkV "bortförklarar" ) noPrep;
 bortse_vb_1_V2	= mkV2 ( mkV "bortse" "bortsåg" "bortsett" ) (mkPrep "från");
 bortse_vb_1_VS	= mkVS ( mkV "bortse" "bortsåg" "bortsett" ) ;
 bota_vb_1_V2	= mkV2 ( mkV "botar" ) noPrep;
 bottenskrapa_vb_1_V2	= mkV2 ( mkV "bottenskrapar" ) noPrep;
 bottna_vb_1_V	= mkV "bottnar" ;
 bottna_vb_1_V2	= mkV2 ( mkV "bottnar" ) (mkPrep "i");
 boxas_vb_1_V2	= mkV2 ( mkV "boxas" ) (mkPrep "med");
 braaka_vb_2_1_V2	= mkV2 ( mkV "bråkar" ) (mkPrep "med");
 braas_vb_1_1_V2	= mkV2 (partV ( mkV "brås" ) "på") noPrep;
 braecka_vb_1_1_V	= mkV "bräcker" ;
 braecka_vb_1_1_V2	= mkV2 ( mkV "bräcker" ) noPrep;
 braedsegla_vb_1_1_V	= mkV "brädseglar" ;
 braeka_vb_1_1_V	= mkV "bräker" ;
 braenna_vb_1_11_V	= partV ( mkV "bränna" "brände" "bränt" ) "vid";
 braenna_vb_1_12_V	= reflV ( mkV "bränna" "brände" "bränt" );
 braenna_vb_1_11_V2	= mkV2 ( mkV "bränna" "brände" "bränt" ) noPrep;
 braenna_vb_1_12_V2	= mkV2 (partV ( mkV "bränna" "brände" "bränt" ) "vid") noPrep;
 braennmaerka_vb_1_1_V2	= mkV2 ( mkV "brännmärker" ) noPrep;
 braka_vb_1_V	= mkV "brakar" ;
 brassa_vb_1_V	= partV ( mkV "brassar" ) "på";
 bre_vb_1_V	= reflV (partV ( mkV "breda" "bredde" "brett" ) "ut");
 bre_vb_1_V2	= mkV2 ( mkV "breda" "bredde" "brett" ) noPrep;
 bredda_vb_1_V2	= mkV2 ( mkV "breddar" ) noPrep;
 brevvaexla_vb_1_1_V2	= mkV2 ( mkV "brevväxlar" ) (mkPrep "med");
 briljera_vb_1_V2	= mkV2 ( mkV "briljerar" ) (mkPrep "med");
 bringa_vb_1_V2	= mkV2 ( mkV "bringar" ) noPrep;
 brinna_vb_2_V	= mkV "brinna" "brann" "brunnit" ;
 brinna_vb_2_V2	= mkV2 ( mkV "brinna" "brann" "brunnit" ) (mkPrep "av");
 brisera_vb_1_V	= mkV "briserar" ;
 brista_vb_2_V	= mkV "brista" "brast" "brustit" ;
 brista_vb_2_V2	= mkV2 ( mkV "brista" "brast" "brustit" ) (mkPrep "i");
 brodera_vb_1_V2	= mkV2 ( mkV "broderar" ) noPrep;
 bromsa_vb_1_V2	= mkV2 ( mkV "bromsar" ) noPrep;
 brottas_vb_1_V2	= mkV2 ( mkV "brottas" ) (mkPrep "med");
 bruka_vb_1_V2	= mkV2 ( mkV "brukar" ) noPrep;
 bruka_vb_1_VV	= mkV "brukar" ** {c2 = mkComplement [ ] ; lock_VV = <>} ;
 brumma_vb_1_V	= mkV "brummar" ;
 brusa_vb_11_V	= mkV "brusar" ;
 brusa_vb_12_V	= partV ( mkV "brusar" ) "upp";
 bry_vb_1_V	= reflV ( mkV "bryr" );
 bry_vb_1_V2	= mkV2 (partV (reflV ( mkV "bryr" )) "om") noPrep;
 bry_vb_1_VS	= mkVS (partV (reflV ( mkV "bryr" )) "om") ;
 brygga_vb_1_V2	= mkV2 ( mkV "brygger" ) noPrep;
 bryna_vb_1_V2	= mkV2 ( mkV "bryna" "bryner" "bryn" "brynte" "brynt" "brynt" ) noPrep;
 bryta_vb_11_V	= partV ( mkV "bryta" "bröt" "brutit" ) "samman";
 bryta_vb_12_V	= partV ( mkV "bryta" "bröt" "brutit" ) "ut";
 bryta_vb_13_V	= reflV ( mkV "bryta" "bröt" "brutit" );
 bryta_vb_11_V2	= mkV2 ( mkV "bryta" "bröt" "brutit" ) (mkPrep "med");
 bryta_vb_12_V2	= mkV2 ( mkV "bryta" "bröt" "brutit" ) (mkPrep "ner");
 bryta_vb_13_V2	= mkV2 ( mkV "bryta" "bröt" "brutit" ) (mkPrep "på");
 bryta_vb_14_V2	= mkV2 ( mkV "bryta" "bröt" "brutit" ) noPrep;
 bryta_vb_15_V2	= mkV2 (partV ( mkV "bryta" "bröt" "brutit" ) "mot") noPrep;
 bryta_vb_16_V2	= mkV2 (partV ( mkV "bryta" "bröt" "brutit" ) "upp") (mkPrep "från");
 bua_vb_1_V2	= mkV2 ( mkV "buar" ) (mkPrep "åt");
 bubbla_vb_1_V	= mkV "bubblar" ;
 buga_vb_1_V	= reflV ( mkV "bugar" );
 buklanda_vb_1_V	= mkV "buklandar" ;
 bukta_vb_1_V	= mkV "buktar" ;
 bullra_vb_1_V	= mkV "bullrar" ;
 bulta_vb_1_V	= mkV "bultar" ;
 bunkra_vb_1_V	= mkV "bunkrar" ;
 bunta_vb_1_V2	= mkV2 (partV ( mkV "buntar" ) "ihop") noPrep;
 busa_vb_1_V	= mkV "busar" ;
 bussa_vb_1_V3	= mkV3 ( mkV "bussar" ) noPrep (mkPrep "på");
 bygga_vb_11_V2	= mkV2 ( mkV "bygger" ) (mkPrep "på");
 bygga_vb_12_V2	= mkV2 ( mkV "bygger" ) noPrep;
 bygga_vb_1_VS	= mkVS ( mkV "bygger" ) ;
 byta_vb_1_V2	= mkV2 ( mkV "byter" ) noPrep;
 campa_vb_1_V	= mkV "campar" ;
 censurera_vb_1_V2	= mkV2 ( mkV "censurerar" ) noPrep;
 centralisera_vb_1_V2	= mkV2 ( mkV "centraliserar" ) noPrep;
 centrifugera_vb_1_V2	= mkV2 ( mkV "centrifugerar" ) noPrep;
 chansa_vb_1_V2	= mkV2 ( mkV "chansar" ) (mkPrep "på");
 checka_vb_1_V	= partV ( mkV "checkar" ) "in";
 checka_vb_1_V2	= mkV2 ( mkV "checkar" ) noPrep;
 checka_vb_1_VS	= mkVS ( mkV "checkar" ) ;
 chocka_vb_1_V2	= mkV2 ( mkV "chockar" ) noPrep;
 chockera_vb_1_V2	= mkV2 ( mkV "chockerar" ) noPrep;
 cirkla_vb_1_V2	= mkV2 ( mkV "cirklar" ) (mkPrep "över");
 cirkulera_vb_1_V	= mkV "cirkulerar" ;
 citera_vb_1_V2	= mkV2 ( mkV "citerar" ) noPrep;
 crawla_vb_1_V	= mkV "crawlar" ;
 cykla_vb_1_V	= mkV "cyklar" ;
 daana_vb_2_1_V	= mkV "dånar" ;
 daasa_vb_1_1_V	= mkV "dåsar" ;
 dadda_vb_1_V2	= mkV2 ( mkV "daddar" ) noPrep;
 daemma_vb_1_1_V2	= mkV2 (partV ( mkV "dämmer" ) "upp") noPrep;
 daempa_vb_1_1_V2	= mkV2 ( mkV "dämpar" ) noPrep;
 daenga_vb_1_1_V2	= mkV2 (partV ( mkV "dänger" ) "till") noPrep;
 dagdroemma_vb_1_1_V2	= mkV2 ( mkV "dagdrömmer" ) (mkPrep "om");
 dala_vb_1_V	= mkV "dalar" ;
 dallra_vb_1_V	= mkV "dallrar" ;
 dalta_vb_1_V2	= mkV2 ( mkV "daltar" ) (mkPrep "med");
 damma_vb_2_V2	= mkV2 ( mkV "dammar" ) noPrep;
 dammsuga_vb_1_V2	= mkV2 ( mkV "dammsuga" "dammsög" "dammsugit" ) noPrep;
 dana_vb_1_V2	= mkV2 ( mkV "danar" ) noPrep;
 dansa_vb_1_V2	= mkV2 ( mkV "dansar" ) (mkPrep "med");
 darra_vb_1_V2	= mkV2 ( mkV "darrar" ) (mkPrep "av");
 datera_vb_1_V2	= mkV2 ( mkV "daterar" ) noPrep;
 datorisera_vb_1_V2	= mkV2 ( mkV "datoriserar" ) noPrep;
 datummaerka_vb_1_1_V2	= mkV2 ( mkV "datummärker" ) noPrep;
 debitera_vb_1_V2	= mkV2 ( mkV "debiterar" ) noPrep;
 debutera_vb_1_V	= mkV "debuterar" ;
 decentralisera_vb_1_V2	= mkV2 ( mkV "decentraliserar" ) noPrep;
 dedicera_vb_1_V3	= mkV3 ( mkV "dedicerar" ) noPrep (mkPrep "till");
 defilera_vb_1_V	= partV ( mkV "defilerar" ) "förbi";
 definiera_vb_1_V2	= mkV2 ( mkV "definierar" ) noPrep;
 deformera_vb_1_V2	= mkV2 ( mkV "deformerar" ) noPrep;
 dega_vb_1_V	= mkV "degar" ;
 degradera_vb_1_V2	= mkV2 ( mkV "degraderar" ) noPrep;
 deklamera_vb_1_V2	= mkV2 ( mkV "deklamerar" ) noPrep;
 deklarera_vb_1_V2	= mkV2 ( mkV "deklarerar" ) noPrep;
 deklarera_vb_1_VS	= mkVS ( mkV "deklarerar" ) ;
 dela_vb_1_V2	= mkV2 ( mkV "delar" ) noPrep;
 dela_vb_1_V3	= mkV3 ( mkV "delar" ) noPrep (mkPrep "med");
 delegera_vb_1_V3	= mkV3 ( mkV "delegerar" ) noPrep (mkPrep "till");
 delge_vb_1_V3	= mkV3 ( mkV "delge" "delger" "delge" "delgav" "delgett" "delgiven" ) noPrep noPrep;
 delta_vb_1_V2	= mkV2 ( mkV "delta" "deltar" "delta" "deltog" "deltagit" "deltagen" ) (mkPrep "i");
 dementera_vb_1_V2	= mkV2 ( mkV "dementerar" ) noPrep;
 dementera_vb_1_VS	= mkVS ( mkV "dementerar" ) ;
 demonstrera_vb_21_V2	= mkV2 ( mkV "demonstrerar" ) (mkPrep "mot");
 demonstrera_vb_22_V2	= mkV2 ( mkV "demonstrerar" ) noPrep;
 demonstrera_vb_2_VS	= mkVS ( mkV "demonstrerar" ) ;
 deponera_vb_1_V2	= mkV2 ( mkV "deponerar" ) noPrep;
 deportera_vb_1_V2	= mkV2 ( mkV "deporterar" ) noPrep;
 deppa_vb_1_V	= mkV "deppar" ;
 desertera_vb_1_V2	= mkV2 ( mkV "deserterar" ) (mkPrep "från");
 desinficera_vb_1_V2	= mkV2 ( mkV "desinficerar" ) noPrep;
 destillera_vb_1_V2	= mkV2 (partV ( mkV "destillerar" ) "fram") noPrep;
 detonera_vb_1_V	= mkV "detonerar" ;
 detonera_vb_1_V2	= mkV2 ( mkV "detonerar" ) noPrep;
 devalvera_vb_1_V2	= mkV2 ( mkV "devalverar" ) noPrep;
 dia_vb_1_V	= mkV "diar" ;
 dia_vb_1_V2	= mkV2 ( mkV "diar" ) noPrep;
 diagnostisera_vb_1_V2	= mkV2 ( mkV "diagnostiserar" ) noPrep;
 digga_vb_1_V2	= mkV2 ( mkV "diggar" ) noPrep;
 digna_vb_1_V2	= mkV2 ( mkV "dignar" ) (mkPrep "under");
 dikta_vb_11_V2	= mkV2 ( mkV "diktar" ) (mkPrep "om");
 dikta_vb_12_V2	= mkV2 ( mkV "diktar" ) noPrep;
 diktera_vb_1_V2	= mkV2 ( mkV "dikterar" ) noPrep;
 dilla_vb_1_V	= mkV "dillar" ;
 dimpa_vb_1_V	= mkV "dimpa" "damp" "dumpit" ;
 dingla_vb_11_V2	= mkV2 ( mkV "dinglar" ) (mkPrep "i");
 dingla_vb_12_V2	= mkV2 ( mkV "dinglar" ) (mkPrep "med");
 dippa_vb_2_V	= mkV "dippar" ;
 dirigera_vb_1_V2	= mkV2 ( mkV "dirigerar" ) noPrep;
 diska_vb_2_V2	= mkV2 ( mkV "diskar" ) noPrep;
 diskriminera_vb_1_V2	= mkV2 ( mkV "diskriminerar" ) noPrep;
 diskutera_vb_1_V3	= mkV3 ( mkV "diskuterar" ) noPrep (mkPrep "med");
 diskvalificera_vb_1_V2	= mkV2 ( mkV "diskvalificerar" ) noPrep;
 disponera_vb_11_V2	= mkV2 ( mkV "disponerar" ) noPrep;
 disponera_vb_12_V2	= mkV2 (partV ( mkV "disponerar" ) "över") noPrep;
 distrahera_vb_1_V2	= mkV2 ( mkV "distraherar" ) noPrep;
 distribuera_vb_1_V2	= mkV2 ( mkV "distribuerar" ) noPrep;
 distribuera_vb_1_V3	= mkV3 ( mkV "distribuerar" ) noPrep (mkPrep "till");
 dividera_vb_1_V2	= mkV2 ( mkV "dividerar" ) (mkPrep "med");
 dividera_vb_1_V3	= mkV3 ( mkV "dividerar" ) noPrep (mkPrep "med");
 djupfrysa_vb_1_V2	= mkV2 ( mkV "djupfryser" ) noPrep;
 doa_vb_1_V	= mkV "doar" ;
 docka_vb_1_V2	= mkV2 ( mkV "dockar" ) noPrep;
 doe_vb_1_1_V	= mkV "dö" "dog" "dött" ;
 doeda_vb_1_1_V2	= mkV2 ( mkV "dödar" ) noPrep;
 doedfoerklara_vb_1_1_V2	= mkV2 ( mkV "dödförklarar" ) noPrep;
 doelja_vb_1_1_V2	= mkV2 ( mkV "dölja" "dolde" "dolt" ) noPrep;
 doelja_vb_1_1_VS	= mkVS ( mkV "dölja" "dolde" "dolt" ) ;
 doema_vb_1_1_V2	= mkV2 ( mkV "dömer" ) noPrep;
 doepa_vb_1_1_V2	= mkV2 ( mkV "döper" ) noPrep;
 dofta_vb_2_V	= mkV "doftar" ;
 dofta_vb_2_V2	= mkV2 ( mkV "doftar" ) noPrep;
 doktorera_vb_1_V	= mkV "doktorerar" ;
 dokumentera_vb_1_V2	= mkV2 ( mkV "dokumenterar" ) noPrep;
 dokumentera_vb_1_VS	= mkVS ( mkV "dokumenterar" ) ;
 domdera_vb_1_V	= mkV "domderar" ;
 dominera_vb_11_V2	= mkV2 (partV ( mkV "dominerar" ) "i") noPrep;
 dominera_vb_12_V2	= mkV2 (partV ( mkV "dominerar" ) "över") noPrep;
 domna_vb_11_V	= mkV "domnar" ;
 domna_vb_12_V	= partV ( mkV "domnar" ) "av";
 donera_vb_1_V2	= mkV2 ( mkV "donerar" ) noPrep;
 donera_vb_1_V3	= mkV3 ( mkV "donerar" ) noPrep (mkPrep "till");
 dopa_vb_1_V	= reflV ( mkV "dopar" );
 dopa_vb_1_V2	= mkV2 ( mkV "dopar" ) noPrep;
 doppa_vb_1_V	= reflV ( mkV "doppar" );
 doppa_vb_1_V2	= mkV2 ( mkV "doppar" ) noPrep;
 dra_vb_11_V	= partV ( mkV "dra" "drar" "dra" "drog" "dragit" "dragen" ) "ut";
 dra_vb_12_V	= reflV ( mkV "dra" "drar" "dra" "drog" "dragit" "dragen" );
 dra_vb_11_V2	= mkV2 ( mkV "dra" "drar" "dra" "drog" "dragit" "dragen" ) noPrep;
 dra_vb_12_V2	= mkV2 (partV ( mkV "dra" "drar" "dra" "drog" "dragit" "dragen" ) "i") noPrep;
 dra_vb_13_V2	= mkV2 (partV ( mkV "dra" "drar" "dra" "drog" "dragit" "dragen" ) "igång") noPrep;
 dra_vb_14_V2	= mkV2 (partV ( mkV "dra" "drar" "dra" "drog" "dragit" "dragen" ) "in") (mkPrep "på");
 dra_vb_15_V2	= mkV2 (partV ( mkV "dra" "drar" "dra" "drog" "dragit" "dragen" ) "in") noPrep;
 dra_vb_16_V2	= mkV2 (partV ( mkV "dra" "drar" "dra" "drog" "dragit" "dragen" ) "med") noPrep;
 dra_vb_17_V2	= mkV2 (partV ( mkV "dra" "drar" "dra" "drog" "dragit" "dragen" ) "på") noPrep;
 dra_vb_18_V2	= mkV2 (partV ( mkV "dra" "drar" "dra" "drog" "dragit" "dragen" ) "åt") noPrep;
 dra_vb_19_V2	= mkV2 (partV (partV ( mkV "dra" "drar" "dra" "drog" "dragit" "dragen" ) "av") "för") noPrep;
 dra_vb_110_V2	= mkV2 (reflV ( mkV "dra" "drar" "dra" "drog" "dragit" "dragen" )) (mkPrep "för");
 dra_vb_1_VV	= reflV ( mkV "dra" "drar" "dra" "drog" "dragit" "dragen" ) ** {c2 = mkComplement [ "för att" ] ; lock_VV = <>} ;
 draasa_vb_1_1_V	= mkV "dråsar" ;
 drabba_vb_1_V2	= mkV2 ( mkV "drabbar" ) noPrep;
 draella_vb_1_1_V	= mkV "dräller" ;
 draella_vb_1_1_V2	= mkV2 ( mkV "dräller" ) noPrep;
 draemma_vb_1_1_V2	= mkV2 (partV ( mkV "drämmer" ) "till") noPrep;
 draenka_vb_1_1_V	= reflV ( mkV "dränker" );
 draenka_vb_1_1_V2	= mkV2 ( mkV "dränker" ) noPrep;
 draenka_vb_1_1_V3	= mkV3 ( partV ( mkV "dränker" ) "in" ) noPrep (mkPrep "med");
 draepa_vb_1_11_V2	= mkV2 ( mkV "dräper" ) noPrep;
 draepa_vb_1_12_V2	= mkV2 (partV ( mkV "dräper" ) "av") noPrep;
 dragga_vb_1_V2	= mkV2 ( mkV "draggar" ) (mkPrep "efter");
 dramatisera_vb_1_V2	= mkV2 ( mkV "dramatiserar" ) noPrep;
 dregla_vb_1_V	= mkV "dreglar" ;
 dreja_vb_1_V2	= mkV2 ( mkV "drejar" ) noPrep;
 dressera_vb_1_V2	= mkV2 ( mkV "dresserar" ) noPrep;
 dribbla_vb_1_V	= mkV "dribblar" ;
 dricka_vb_1_V	= mkV "dricka" "drack" "druckit" ;
 dricka_vb_1_V2	= mkV2 ( mkV "dricka" "drack" "druckit" ) noPrep;
 drilla_vb_1_V	= mkV "drillar" ;
 drilla_vb_1_V2	= mkV2 ( mkV "drillar" ) noPrep;
 driva_vb_11_V	= mkV "driva" "drev" "drivit" ;
 driva_vb_12_V	= partV ( mkV "driva" "drev" "drivit" ) "omkring";
 driva_vb_11_V2	= mkV2 ( mkV "driva" "drev" "drivit" ) noPrep;
 driva_vb_12_V2	= mkV2 (partV ( mkV "driva" "drev" "drivit" ) "fram") noPrep;
 driva_vb_13_V2	= mkV2 (partV ( mkV "driva" "drev" "drivit" ) "igenom") noPrep;
 driva_vb_14_V2	= mkV2 (partV ( mkV "driva" "drev" "drivit" ) "upp") noPrep;
 driva_vb_1_VS	= mkVS (partV ( mkV "driva" "drev" "drivit" ) "igenom") ;
 droeja_vb_1_1_V	= mkV "dröja" "dröjde" "dröjt" ;
 droemma_vb_1_1_V2	= mkV2 ( mkV "drömmer" ) (mkPrep "om");
 droemma_vb_1_1_VS	= mkVS ( mkV "drömmer" ) ;
 droppa_vb_2_V2	= mkV2 ( mkV "droppar" ) noPrep;
 drunkna_vb_1_V2	= mkV2 ( mkV "drunknar" ) (mkPrep "i");
 drypa_vb_1_V2	= mkV2 ( mkV "drypa" "dröp" "drupit" ) (mkPrep "av");
 dua_vb_1_V2	= mkV2 ( mkV "duar" ) noPrep;
 dubba_vb_1_V2	= mkV2 ( mkV "dubbar" ) noPrep;
 dubba_vb_1_V3	= mkV3 ( mkV "dubbar" ) noPrep (mkPrep "till");
 dubbla_vb_1_V2	= mkV2 ( mkV "dubblar" ) noPrep;
 dubblera_vb_1_V2	= mkV2 ( mkV "dubblerar" ) noPrep;
 ducka_vb_1_V	= mkV "duckar" ;
 duga_vb_1_V2	= mkV2 ( mkV "duga" "dög" "dugt" ) (mkPrep "till");
 duga_vb_1_VV	= mkV "duga" "dög" "dugt" ** {c2 = mkComplement [ " att" ] ; lock_VV = <>} ;
 duka_vb_11_V2	= mkV2 ( mkV "dukar" ) noPrep;
 duka_vb_12_V2	= mkV2 (partV ( mkV "dukar" ) "under") (mkPrep "för");
 duka_vb_13_V2	= mkV2 (partV ( mkV "dukar" ) "upp") noPrep;
 dumpa_vb_1_V2	= mkV2 ( mkV "dumpar" ) noPrep;
 dundra_vb_1_V	= mkV "dundrar" ;
 dunka_vb_11_V2	= mkV2 ( mkV "dunkar" ) (mkPrep "på");
 dunka_vb_12_V2	= mkV2 ( mkV "dunkar" ) noPrep;
 dunsa_vb_1_V2	= mkV2 ( mkV "dunsar" ) (mkPrep "i");
 dunsta_vb_2_V	= mkV "dunstar" ;
 dupera_vb_1_V2	= mkV2 ( mkV "duperar" ) noPrep;
 duplicera_vb_1_V2	= mkV2 ( mkV "duplicerar" ) noPrep;
 duscha_vb_1_V	= mkV "duschar" ;
 duscha_vb_1_V2	= mkV2 ( mkV "duschar" ) noPrep;
 dyka_vb_11_V	= mkV "dyker" ;
 dyka_vb_12_V	= partV ( mkV "dyker" ) "upp";
 dyrka_vb_11_V2	= mkV2 ( mkV "dyrkar" ) noPrep;
 dyrka_vb_12_V2	= mkV2 (partV ( mkV "dyrkar" ) "upp") noPrep;
 effektivisera_vb_1_V2	= mkV2 ( mkV "effektiviserar" ) noPrep;
 efterapa_vb_1_V2	= mkV2 ( mkV "efterapar" ) noPrep;
 efterfraaga_vb_1_1_V2	= mkV2 ( mkV "efterfrågar" ) noPrep;
 efterlaemna_vb_1_1_V2	= mkV2 ( mkV "efterlämnar" ) noPrep;
 efterlysa_vb_1_V2	= mkV2 ( mkV "efterlyser" ) noPrep;
 eftersaenda_vb_1_1_V2	= mkV2 ( mkV "eftersänder" ) noPrep;
 efterskaenka_vb_1_1_V2	= mkV2 ( mkV "efterskänker" ) noPrep;
 efterstraeva_vb_1_1_V2	= mkV2 ( mkV "eftersträvar" ) noPrep;
 eftertraeda_vb_1_1_V2	= mkV2 ( mkV "efterträda" "efterträdde" "efterträtt" ) noPrep;
 eftertrakta_vb_1_V2	= mkV2 ( mkV "eftertraktar" ) noPrep;
 egga_vb_1_V2	= mkV2 ( mkV "eggar" ) noPrep;
 eka_vb_2_V	= mkV "ekar" ;
 elda_vb_11_V2	= mkV2 ( mkV "eldar" ) (mkPrep "upp");
 elda_vb_12_V2	= mkV2 ( mkV "eldar" ) noPrep;
 eliminera_vb_1_V2	= mkV2 ( mkV "eliminerar" ) noPrep;
 emigrera_vb_1_V	= mkV "emigrerar" ;
 emotse_vb_1_V2	= mkV2 ( mkV "emotse" "emotsåg" "emotsett" ) noPrep;
 engagera_vb_11_V2	= mkV2 ( mkV "engagerar" ) noPrep;
 engagera_vb_12_V2	= mkV2 (reflV ( mkV "engagerar" )) (mkPrep "för");
 entlediga_vb_1_V2	= mkV2 ( mkV "entledigar" ) noPrep;
 envisas_vb_1_VV	= mkV "envisas" ** {c2 = mkComplement [ "med att" ] ; lock_VV = <>} ;
 erbjuda_vb_1_V2	= mkV2 ( mkV "erbjuda" "erbjöd" "erbjudit" ) noPrep;
 erbjuda_vb_1_V3	= mkV3 ( mkV "erbjuda" "erbjöd" "erbjudit" ) noPrep noPrep;
 erbjuda_vb_1_VV	= reflV ( mkV "erbjuda" "erbjöd" "erbjudit" ) ** {c2 = mkComplement [ " att" ] ; lock_VV = <>} ;
 erfara_vb_1_V2	= mkV2 ( mkV "erfara" "erfor" "erfarit" ) noPrep;
 erfara_vb_1_VS	= mkVS ( mkV "erfara" "erfor" "erfarit" ) ;
 erfordra_vb_1_V2	= mkV2 ( mkV "erfordrar" ) noPrep;
 erhaalla_vb_1_1_V2	= mkV2 ( mkV "erhålla" "erhöll" "erhållit" ) noPrep;
 erinra_vb_11_V2	= mkV2 ( mkV "erinrar" ) (mkPrep "mot");
 erinra_vb_12_V2	= mkV2 ( mkV "erinrar" ) (mkPrep "om");
 erinra_vb_13_V2	= mkV2 (reflV ( mkV "erinrar" )) noPrep;
 erinra_vb_11_VS	= mkVS ( mkV "erinrar" ) ;
 erinra_vb_12_VS	= mkVS (reflV ( mkV "erinrar" )) ;
 erkaenna_vb_1_1_V2	= mkV2 ( mkV "erkänna" "erkände" "erkänt" ) noPrep;
 erkaenna_vb_1_1_VS	= mkVS ( mkV "erkänna" "erkände" "erkänt" ) ;
 erlaegga_vb_1_1_V2	= mkV2 ( mkV "erlägga" "erlade" "erlagt" ) noPrep;
 eroevra_vb_1_1_V2	= mkV2 ( mkV "erövrar" ) noPrep;
 ersaetta_vb_1_1_V2	= mkV2 ( mkV "ersätta" "ersätter" "ersätt" "ersatte" "ersatt" "ersatt" ) noPrep;
 ertappa_vb_1_V2	= mkV2 ( mkV "ertappar" ) noPrep;
 etablera_vb_1_V	= reflV ( mkV "etablerar" );
 etablera_vb_1_V2	= mkV2 ( mkV "etablerar" ) noPrep;
 etsa_vb_1_V2	= mkV2 ( mkV "etsar" ) noPrep;
 evakuera_vb_1_V2	= mkV2 ( mkV "evakuerar" ) noPrep;
 exemplifiera_vb_1_V2	= mkV2 ( mkV "exemplifierar" ) noPrep;
 existera_vb_1_V	= mkV "existerar" ;
 expandera_vb_1_V	= mkV "expanderar" ;
 expediera_vb_1_V2	= mkV2 ( mkV "expedierar" ) noPrep;
 experimentera_vb_1_V2	= mkV2 ( mkV "experimenterar" ) (mkPrep "med");
 experimentera_vb_1_VV	= mkV "experimenterar" ** {c2 = mkComplement [ "med att" ] ; lock_VV = <>} ;
 exploatera_vb_1_V2	= mkV2 ( mkV "exploaterar" ) noPrep;
 explodera_vb_1_V	= mkV "exploderar" ;
 exponera_vb_1_V2	= mkV2 ( mkV "exponerar" ) noPrep;
 exportera_vb_1_V2	= mkV2 ( mkV "exporterar" ) noPrep;
 extraknaecka_vb_1_1_V	= mkV "extraknäcker" ;
 faa_vb_1_1_V2	= mkV2 ( mkV "få" "fick" "fått" ) noPrep;
 faa_vb_1_1_VV	= mkV "få" "fick" "fått" ** {c2 = mkComplement [ ] ; lock_VV = <>} ;
 faalla_vb_1_1_V2	= mkV2 ( mkV "fållar" ) noPrep;
 faanga_vb_1_1_V2	= mkV2 ( mkV "fångar" ) noPrep;
 fabricera_vb_1_V2	= mkV2 ( mkV "fabricerar" ) noPrep;
 faekta_vb_1_1_V2	= mkV2 ( mkV "fäktar" ) (mkPrep "med");
 faella_vb_1_1_V2	= mkV2 ( mkV "fäller" ) noPrep;
 faengsla_vb_1_1_V2	= mkV2 ( mkV "fängslar" ) noPrep;
 faerdas_vb_1_1_V2	= mkV2 ( mkV "färdas" ) (mkPrep "med");
 faerdigstaella_vb_1_1_V2	= mkV2 ( mkV "färdigställer" ) noPrep;
 faerga_vb_1_1_V2	= mkV2 ( mkV "färgar" ) noPrep;
 faerglaegga_vb_1_1_V2	= mkV2 ( mkV "färglägga" "färglade" "färglagt" ) noPrep;
 faesta_vb_1_1_V2	= mkV2 ( mkV "fästa" "fäster" "fäst" "fäste" "fäst" "fäst" ) noPrep;
 fajtas_vb_1_V2	= mkV2 ( mkV "fajtas" ) (mkPrep "med");
 falla_vb_1_V	= mkV "falla" "föll" "fallit" ;
 falna_vb_1_V	= mkV "falnar" ;
 famla_vb_1_V2	= mkV2 ( mkV "famlar" ) (mkPrep "efter");
 fantisera_vb_1_V2	= mkV2 ( mkV "fantiserar" ) (mkPrep "om");
 fantisera_vb_1_VV	= mkV "fantiserar" ** {c2 = mkComplement [ "om att" ] ; lock_VV = <>} ;
 fasa_vb_2_V2	= mkV2 ( mkV "fasar" ) (mkPrep "för");
 fasa_vb_2_VV	= mkV "fasar" ** {c2 = mkComplement [ "för att" ] ; lock_VV = <>} ;
 fascinera_vb_1_V2	= mkV2 ( mkV "fascinerar" ) noPrep;
 fasta_vb_1_V	= mkV "fastar" ;
 fastna_vb_1_V2	= mkV2 ( mkV "fastnar" ) (mkPrep "i");
 faststaella_vb_1_1_V2	= mkV2 ( mkV "fastställer" ) noPrep;
 faststaella_vb_1_1_VS	= mkVS ( mkV "fastställer" ) ;
 fattas_vb_1_V	= mkV "fattas" ;
 fattas_vb_1_V2	= mkV2 ( mkV "fattas" ) noPrep;
 fattas_vb_1_VQ	= mkVQ ( mkV "fattas" ) ;
 fattas_vb_1_VS	= mkVS ( mkV "fattas" ) ;
 favorisera_vb_1_V2	= mkV2 ( mkV "favoriserar" ) noPrep;
 feja_vb_1_V2	= mkV2 ( mkV "fejar" ) noPrep;
 fejka_vb_1_V2	= mkV2 ( mkV "fejkar" ) noPrep;
 felas_vb_1_V	= mkV "felas" ;
 fernissa_vb_1_V2	= mkV2 ( mkV "fernissar" ) noPrep;
 festa_vb_1_V	= mkV "festar" ;
 fiffla_vb_1_V2	= mkV2 ( mkV "fifflar" ) (mkPrep "med");
 figurera_vb_1_V2	= mkV2 ( mkV "figurerar" ) (mkPrep "i");
 fika_vb_1_V	= mkV "fikar" ;
 fila_vb_1_V2	= mkV2 (partV ( mkV "filar" ) "på") noPrep;
 filma_vb_1_V	= mkV "filmar" ;
 filosofera_vb_1_V	= mkV "filosoferar" ;
 filtrera_vb_1_V2	= mkV2 ( mkV "filtrerar" ) noPrep;
 fimpa_vb_1_V2	= mkV2 ( mkV "fimpar" ) noPrep;
 finansiera_vb_1_V2	= mkV2 ( mkV "finansierar" ) noPrep;
 fingera_vb_1_V2	= mkV2 ( mkV "fingerar" ) noPrep;
 fingra_vb_1_V2	= mkV2 (partV ( mkV "fingrar" ) "på") noPrep;
 finkamma_vb_1_V2	= mkV2 ( mkV "finkammar" ) noPrep;
 finna_vb_11_V2	= mkV2 ( mkV "finna" "fann" "funnit" ) noPrep;
 finna_vb_12_V2	= mkV2 (partV (reflV ( mkV "finna" "fann" "funnit" )) "i") noPrep;
 finna_vb_1_V2A	= mkV2A ( mkV "finna" "fann" "funnit" ) noPrep;
 finna_vb_11_VS	= mkVS ( mkV "finna" "fann" "funnit" ) ;
 finna_vb_12_VS	= mkVS (partV (reflV ( mkV "finna" "fann" "funnit" )) "i") ;
 finna_vb_1_VV	= partV (reflV ( mkV "finna" "fann" "funnit" )) "i" ** {c2 = mkComplement [ " att" ] ; lock_VV = <>} ;
 finslipa_vb_1_V2	= mkV2 ( mkV "finslipar" ) noPrep;
 finta_vb_1_V	= mkV "fintar" ;
 fira_vb_11_V2	= mkV2 ( mkV "firar" ) (mkPrep "från");
 fira_vb_12_V2	= mkV2 ( mkV "firar" ) noPrep;
 fira_vb_13_V2	= mkV2 (partV ( mkV "firar" ) "ner") noPrep;
 fira_vb_1_VS	= mkVS ( mkV "firar" ) ;
 fiska_vb_1_V2	= mkV2 ( mkV "fiskar" ) noPrep;
 fixa_vb_1_V	= reflV ( mkV "fixar" );
 fixa_vb_1_V2	= mkV2 ( mkV "fixar" ) noPrep;
 fixera_vb_1_V2	= mkV2 ( mkV "fixerar" ) noPrep;
 fjaedra_vb_1_1_V	= mkV "fjädrar" ;
 fjaerma_vb_1_1_V2	= mkV2 (reflV ( mkV "fjärmar" )) (mkPrep "från");
 fjaerta_vb_1_1_V	= mkV "fjärtar" ;
 fjaeska_vb_1_1_V2	= mkV2 ( mkV "fjäskar" ) (mkPrep "för");
 fjaettra_vb_1_1_V2	= mkV2 ( mkV "fjättrar" ) noPrep;
 flaa_vb_1_1_V	= mkV "flår" ;
 flaa_vb_1_1_V2	= mkV2 ( mkV "flår" ) noPrep;
 flaasa_vb_1_1_V	= mkV "flåsar" ;
 flabba_vb_1_V	= mkV "flabbar" ;
 flacka_vb_1_V	= partV ( mkV "flackar" ) "omkring";
 fladdra_vb_1_V	= mkV "fladdrar" ;
 flaemta_vb_1_1_V	= mkV "flämtar" ;
 flaeta_vb_1_1_V2	= mkV2 ( mkV "flätar" ) noPrep;
 flaga_vb_1_V	= mkV "flagar" ;
 flagga_vb_1_V	= mkV "flaggar" ;
 flagna_vb_1_V	= mkV "flagnar" ;
 flambera_vb_1_V2	= mkV2 ( mkV "flamberar" ) noPrep;
 flamma_vb_1_V	= mkV "flammar" ;
 flanera_vb_1_V	= mkV "flanerar" ;
 flaxa_vb_1_V	= mkV "flaxar" ;
 flimra_vb_1_V	= mkV "flimrar" ;
 flina_vb_1_V	= mkV "flinar" ;
 floeda_vb_1_1_V	= mkV "flödar" ;
 florera_vb_1_V	= mkV "florerar" ;
 flotta_vb_1_V2	= mkV2 ( mkV "flottar" ) noPrep;
 fluktuera_vb_1_V	= mkV "fluktuerar" ;
 fly_vb_1_V	= mkV "flyr" ;
 flyga_vb_1_V	= mkV "flyga" "flög" "flugit" ;
 flyga_vb_1_V2	= mkV2 ( mkV "flyga" "flög" "flugit" ) noPrep;
 flyta_vb_1_V	= mkV "flyta" "flöt" "flutit" ;
 flytta_vb_11_V	= mkV "flyttar" ;
 flytta_vb_12_V	= reflV ( mkV "flyttar" );
 flytta_vb_1_V2	= mkV2 ( mkV "flyttar" ) noPrep;
 fnissa_vb_1_V	= mkV "fnissar" ;
 fnittra_vb_1_V	= mkV "fnittrar" ;
 foeda_vb_1_1_V	= mkV "föda" "födde" "fött" ;
 foeda_vb_1_11_V2	= mkV2 ( mkV "föda" "födde" "fött" ) noPrep;
 foeda_vb_1_12_V2	= mkV2 (partV ( mkV "föda" "födde" "fött" ) "upp") noPrep;
 foelja_vb_1_11_V2	= mkV2 ( mkV "följa" "följde" "följt" ) noPrep;
 foelja_vb_1_12_V2	= mkV2 (partV ( mkV "följa" "följde" "följt" ) "med") noPrep;
 foelja_vb_1_13_V2	= mkV2 (partV ( mkV "följa" "följde" "följt" ) "upp") noPrep;
 foera_vb_1_1_V2	= mkV2 ( mkV "föra" "förde" "fört" ) noPrep;
 foeraedla_vb_1_1_V2	= mkV2 ( mkV "förädlar" ) noPrep;
 foeraendra_vb_1_1_V2	= mkV2 ( mkV "förändrar" ) noPrep;
 foerakta_vb_1_1_V2	= mkV2 ( mkV "föraktar" ) noPrep;
 foerankra_vb_1_1_V2	= mkV2 ( mkV "förankrar" ) noPrep;
 foeranleda_vb_1_1_V2	= mkV2 ( mkV "föranleda" "föranledde" "föranlett" ) noPrep;
 foerargas_vb_1_1_V2	= mkV2 ( mkV "förargas" ) noPrep;
 foerbaettra_vb_1_1_V2	= mkV2 ( mkV "förbättrar" ) noPrep;
 foerbanna_vb_1_1_V2	= mkV2 ( mkV "förbannar" ) noPrep;
 foerbehaalla_vb_1_1_V2	= mkV2 (reflV ( mkV "förbehålla" "förbehöll" "förbehållit" )) noPrep;
 foerbehaalla_vb_1_1_VV	= reflV ( mkV "förbehålla" "förbehöll" "förbehållit" ) ** {c2 = mkComplement [ " att" ] ; lock_VV = <>} ;
 foerbereda_vb_1_11_V2	= mkV2 ( mkV "förbereda" "förberedde" "förberett" ) noPrep;
 foerbereda_vb_1_12_V2	= mkV2 (reflV ( mkV "förbereda" "förberedde" "förberett" )) (mkPrep "för");
 foerbereda_vb_1_1_VV	= reflV ( mkV "förbereda" "förberedde" "förberett" ) ** {c2 = mkComplement [ "för att" ] ; lock_VV = <>} ;
 foerbinda_vb_1_1_V2	= mkV2 ( mkV "förbinda" "förband" "förbundit" ) noPrep;
 foerbinda_vb_1_1_V3	= mkV3 ( mkV "förbinda" "förband" "förbundit" ) noPrep (mkPrep "med");
 foerbinda_vb_1_1_VV	= reflV ( mkV "förbinda" "förband" "förbundit" ) ** {c2 = mkComplement [ " att" ] ; lock_VV = <>} ;
 foerbise_vb_1_1_V2	= mkV2 ( mkV "förbise" "förbisåg" "förbisett" ) noPrep;
 foerbjuda_vb_1_1_V2	= mkV2 ( mkV "förbjuda" "förbjöd" "förbjudit" ) noPrep;
 foerbli_vb_1_1_VA	= mkVA ( mkV "förbli" "förblev" "förblivit" ) ;
 foerbloeda_vb_1_1_V	= mkV "förblöda" "förblödde" "förblött" ;
 foerbluffa_vb_1_1_V2	= mkV2 ( mkV "förbluffar" ) noPrep;
 foerbraenna_vb_1_1_V2	= mkV2 ( mkV "förbränna" "förbrände" "förbränt" ) noPrep;
 foerbruka_vb_1_1_V2	= mkV2 ( mkV "förbrukar" ) noPrep;
 foerbrylla_vb_1_1_V2	= mkV2 ( mkV "förbryllar" ) noPrep;
 foerdaerva_vb_1_1_V2	= mkV2 ( mkV "fördärvar" ) noPrep;
 foerdela_vb_1_11_V2	= mkV2 ( mkV "fördelar" ) noPrep;
 foerdela_vb_1_12_V2	= mkV2 (reflV ( mkV "fördelar" )) (mkPrep "på");
 foerdjupa_vb_1_1_V2	= mkV2 (reflV ( mkV "fördjupar" )) (mkPrep "i");
 foerdoema_vb_1_1_V2	= mkV2 ( mkV "fördömer" ) noPrep;
 foerdriva_vb_1_1_V2	= mkV2 ( mkV "fördriva" "fördrev" "fördrivit" ) noPrep;
 foerdroeja_vb_1_1_V2	= mkV2 ( mkV "fördröja" "fördröjde" "fördröjt" ) noPrep;
 foerdubbla_vb_1_1_V2	= mkV2 ( mkV "fördubblar" ) noPrep;
 foerebaada_vb_1_1_V2	= mkV2 ( mkV "förebådar" ) noPrep;
 foerebraa_vb_1_1_V2S	= mkV2S ( mkV "förebrår" ) noPrep;
 foerebygga_vb_1_1_V2	= mkV2 ( mkV "förebygger" ) noPrep;
 foerebygga_vb_1_1_VS	= mkVS ( mkV "förebygger" ) ;
 foeredra_vb_1_1_V2	= mkV2 ( mkV "föredra" "föredrar" "föredra" "föredrog" "föredragit" "föredragen" ) noPrep;
 foeredra_vb_1_1_VS	= mkVS ( mkV "föredra" "föredrar" "föredra" "föredrog" "föredragit" "föredragen" ) ;
 foeredra_vb_1_1_VV	= mkV "föredra" "föredrar" "föredra" "föredrog" "föredragit" "föredragen" ** {c2 = mkComplement [ " att" ] ; lock_VV = <>} ;
 foerefalla_vb_1_1_VA	= mkVA ( mkV "förefalla" "föreföll" "förefallit" ) ;
 foeregaa_vb_1_1_V2	= mkV2 ( mkV "föregå" "föregår" "föregå" "föregick" "föregått" "föregången" ) noPrep;
 foerege_vb_1_1_V2	= mkV2 ( mkV "förege" "föreger" "förege" "föregav" "föregett" "föregiven" ) noPrep;
 foeregripa_vb_1_1_V2	= mkV2 ( mkV "föregripa" "föregrep" "föregripit" ) noPrep;
 foerekomma_vb_1_1_V	= mkV "förekomma" "förekom" "förekommit" ;
 foerelaegga_vb_1_1_V2	= mkV2 ( mkV "förelägga" "förelade" "förelagt" ) noPrep;
 foerelaesa_vb_1_1_V	= mkV "föreläser" ;
 foereligga_vb_1_1_V	= mkV "föreligga" "förelåg" "förelegat" ;
 foerena_vb_1_1_V	= reflV ( mkV "förenar" );
 foerena_vb_1_1_V2	= mkV2 ( mkV "förenar" ) noPrep;
 foerena_vb_1_1_V3	= mkV3 ( mkV "förenar" ) noPrep (mkPrep "med");
 foerenkla_vb_1_1_V2	= mkV2 ( mkV "förenklar" ) noPrep;
 foereskriva_vb_1_1_VS	= mkVS ( mkV "föreskriva" "föreskrev" "föreskrivit" ) ;
 foereslaa_vb_1_1_V2	= mkV2 ( mkV "föreslå" "föreslog" "föreslagit" ) noPrep;
 foereslaa_vb_1_1_VS	= mkVS ( mkV "föreslå" "föreslog" "föreslagit" ) ;
 foerespegla_vb_1_1_V3	= mkV3 ( mkV "förespeglar" ) noPrep noPrep;
 foerespraaka_vb_1_1_V2	= mkV2 ( mkV "förespråkar" ) noPrep;
 foerestaa_vb_1_1_V	= mkV "förestå" "förestod" "förestått" ;
 foerestaa_vb_1_1_V2	= mkV2 ( mkV "förestå" "förestod" "förestått" ) noPrep;
 foerestaella_vb_1_11_V2	= mkV2 ( mkV "föreställer" ) noPrep;
 foerestaella_vb_1_12_V2	= mkV2 (reflV ( mkV "föreställer" )) noPrep;
 foerestaella_vb_1_1_VS	= mkVS (reflV ( mkV "föreställer" )) ;
 foeresvaeva_vb_1_1_V2	= mkV2 ( mkV "föresvävar" ) noPrep;
 foereta_vb_1_1_V	= reflV ( mkV "företa" "företar" "företa" "företog" "företagit" "företagen" );
 foereta_vb_1_1_V2	= mkV2 ( mkV "företa" "företar" "företa" "företog" "företagit" "företagen" ) noPrep;
 foerfalla_vb_1_1_V	= mkV "förfalla" "förföll" "förfallit" ;
 foerfalska_vb_1_1_V2	= mkV2 ( mkV "förfalskar" ) noPrep;
 foerfara_vb_1_1_V2	= mkV2 ( mkV "förfara" "förfor" "förfarit" ) (mkPrep "med");
 foerfatta_vb_1_1_V2	= mkV2 ( mkV "författar" ) noPrep;
 foerflyta_vb_1_1_V	= mkV "förflyta" "förflöt" "förflutit" ;
 foerflytta_vb_1_1_V	= reflV ( mkV "förflyttar" );
 foerflytta_vb_1_1_V2	= mkV2 ( mkV "förflyttar" ) noPrep;
 foerfoelja_vb_1_1_V2	= mkV2 ( mkV "förfölja" "förföljde" "förföljt" ) noPrep;
 foerfoera_vb_1_1_V2	= mkV2 ( mkV "förföra" "förförde" "förfört" ) noPrep;
 foerfoga_vb_1_1_V2	= mkV2 ( mkV "förfogar" ) (mkPrep "över");
 foerfuska_vb_1_1_V2	= mkV2 ( mkV "förfuskar" ) noPrep;
 foergaa_vb_1_1_V	= mkV "förgå" "förgår" "förgå" "förgick" "förgått" "förgången" ;
 foergaa_vb_1_1_V2	= mkV2 (reflV ( mkV "förgå" "förgår" "förgå" "förgick" "förgått" "förgången" )) (mkPrep "mot");
 foergifta_vb_1_1_V2	= mkV2 ( mkV "förgiftar" ) noPrep;
 foergoera_vb_1_1_V2	= mkV2 ( mkV "förgöra" "förgjorde" "förgjort" ) noPrep;
 foergrenas_vb_1_1_V	= reflV ( mkV "förgrenas" );
 foergylla_vb_1_1_V2	= mkV2 ( mkV "förgyller" ) noPrep;
 foerhaalla_vb_1_1_V	= reflV ( mkV "förhålla" "förhöll" "förhållit" );
 foerhaalla_vb_1_1_VA	= mkVA (reflV ( mkV "förhålla" "förhöll" "förhållit" )) ;
 foerhala_vb_1_1_V2	= mkV2 ( mkV "förhalar" ) noPrep;
 foerhandla_vb_1_11_V2	= mkV2 ( mkV "förhandlar" ) (mkPrep "med");
 foerhandla_vb_1_12_V2	= mkV2 ( mkV "förhandlar" ) (mkPrep "om");
 foerhindra_vb_1_1_V2	= mkV2 ( mkV "förhindrar" ) noPrep;
 foerhindra_vb_1_1_VS	= mkVS ( mkV "förhindrar" ) ;
 foerhoeja_vb_1_1_V2	= mkV2 ( mkV "förhöja" "förhöjde" "förhöjt" ) noPrep;
 foerhoera_vb_1_11_V2	= mkV2 ( mkV "förhöra" "förhörde" "förhört" ) noPrep;
 foerhoera_vb_1_12_V2	= mkV2 (reflV ( mkV "förhöra" "förhörde" "förhört" )) (mkPrep "om");
 foerhoera_vb_1_1_VQ	= mkVQ (reflV ( mkV "förhöra" "förhörde" "förhört" )) ;
 foerinta_vb_1_1_V2	= mkV2 ( mkV "förintar" ) noPrep;
 foerkasta_vb_1_1_V2	= mkV2 ( mkV "förkastar" ) noPrep;
 foerklara_vb_1_1_V2	= mkV2 ( mkV "förklarar" ) noPrep;
 foerklara_vb_1_1_VA	= mkVA (reflV ( mkV "förklarar" )) ;
 foerklara_vb_1_1_VS	= mkVS ( mkV "förklarar" ) ;
 foerklinga_vb_1_1_V	= mkV "förklingar" ;
 foerknippa_vb_1_1_V3	= mkV3 ( mkV "förknippar" ) noPrep (mkPrep "med");
 foerkorta_vb_1_1_V2	= mkV2 ( mkV "förkortar" ) noPrep;
 foerkovra_vb_1_1_V2	= mkV2 (reflV ( mkV "förkovrar" )) (mkPrep "i");
 foerkroma_vb_1_1_V2	= mkV2 ( mkV "förkromar" ) noPrep;
 foerkroppsliga_vb_1_1_V2	= mkV2 ( mkV "förkroppsligar" ) noPrep;
 foerkunna_vb_1_1_V2	= mkV2 ( mkV "förkunnar" ) noPrep;
 foerkunna_vb_1_1_VS	= mkVS ( mkV "förkunnar" ) ;
 foerkvaeva_vb_1_1_V2	= mkV2 ( mkV "förkväver" ) noPrep;
 foerlaata_vb_1_1_V3	= mkV3 ( mkV "förlåta" "förlät" "förlåtit" ) noPrep noPrep;
 foerlaata_vb_1_1_VS	= mkVS ( mkV "förlåta" "förlät" "förlåtit" ) ;
 foerlaegga_vb_1_1_V2	= mkV2 ( mkV "förlägga" "förlade" "förlagt" ) noPrep;
 foerlaenga_vb_1_1_V2	= mkV2 ( mkV "förlänger" ) noPrep;
 foerleda_vb_1_1_V2	= mkV2 ( mkV "förleda" "förledde" "förlett" ) noPrep;
 foerlisa_vb_1_1_V	= mkV "förliser" ;
 foerloejliga_vb_1_1_V2	= mkV2 ( mkV "förlöjligar" ) noPrep;
 foerloesa_vb_1_1_V2	= mkV2 ( mkV "förlöser" ) noPrep;
 foerlora_vb_1_1_V2	= mkV2 ( mkV "förlorar" ) noPrep;
 foermaa_vb_1_1_V2	= mkV2 ( mkV "förmår" ) noPrep;
 foermaa_vb_1_1_VV	= mkV "förmår" ** {c2 = mkComplement [ ] ; lock_VV = <>} ;
 foermedla_vb_1_1_V2	= mkV2 ( mkV "förmedlar" ) noPrep;
 foermoda_vb_1_1_VS	= mkVS ( mkV "förmodar" ) ;
 foernedra_vb_1_1_V2	= mkV2 ( mkV "förnedrar" ) noPrep;
 foerneka_vb_1_1_V2	= mkV2 ( mkV "förnekar" ) noPrep;
 foerneka_vb_1_1_VS	= mkVS ( mkV "förnekar" ) ;
 foernimma_vb_1_1_V2	= mkV2 ( mkV "förnimma" "förnam" "förnummit" ) noPrep;
 foernimma_vb_1_1_VS	= mkVS ( mkV "förnimma" "förnam" "förnummit" ) ;
 foernya_vb_1_1_V2	= mkV2 ( mkV "förnyar" ) noPrep;
 foeroedmjuka_vb_1_1_V2	= mkV2 ( mkV "förödmjukar" ) noPrep;
 foeroeka_vb_1_1_V	= reflV ( mkV "förökar" );
 foeroeva_vb_1_1_V2	= mkV2 ( mkV "förövar" ) noPrep;
 foerolyckas_vb_1_1_V	= mkV "förolyckas" ;
 foerorda_vb_1_1_V2	= mkV2 ( mkV "förordar" ) noPrep;
 foerorda_vb_1_1_VS	= mkVS ( mkV "förordar" ) ;
 foerordna_vb_1_1_V2	= mkV2 ( mkV "förordnar" ) noPrep;
 foerorena_vb_1_1_V2	= mkV2 ( mkV "förorenar" ) noPrep;
 foerorsaka_vb_1_1_V2	= mkV2 ( mkV "förorsakar" ) noPrep;
 foerorsaka_vb_1_1_VS	= mkVS ( mkV "förorsakar" ) ;
 foerpacka_vb_1_1_V2	= mkV2 ( mkV "förpackar" ) noPrep;
 foerpassa_vb_1_1_V2	= mkV2 ( mkV "förpassar" ) noPrep;
 foerpesta_vb_1_1_V2	= mkV2 ( mkV "förpestar" ) noPrep;
 foerplikta_vb_1_1_V	= mkV "förpliktar" ;
 foerraada_vb_1_1_V2	= mkV2 ( mkV "förråda" "förrådde" "förrått" ) noPrep;
 foerraetta_vb_1_1_V2	= mkV2 ( mkV "förrättar" ) noPrep;
 foerringa_vb_1_1_V2	= mkV2 ( mkV "förringar" ) noPrep;
 foerrycka_vb_1_1_V2	= mkV2 ( mkV "förrycker" ) noPrep;
 foersaekra_vb_1_1_V2	= mkV2 ( mkV "försäkrar" ) noPrep;
 foersaekra_vb_1_1_VS	= mkVS ( mkV "försäkrar" ) ;
 foersaemra_vb_1_1_V2	= mkV2 ( mkV "försämrar" ) noPrep;
 foersaetta_vb_1_11_V2	= mkV2 ( mkV "försätta" "försätter" "försätt" "försatte" "försatt" "försatt" ) noPrep;
 foersaetta_vb_1_12_V2	= mkV2 (reflV ( mkV "försätta" "försätter" "försätt" "försatte" "försatt" "försatt" )) (mkPrep "i");
 foersaka_vb_1_1_V2	= mkV2 ( mkV "försakar" ) noPrep;
 foerse_vb_1_11_V2	= mkV2 ( mkV "förse" "försåg" "försett" ) noPrep;
 foerse_vb_1_12_V2	= mkV2 (reflV ( mkV "förse" "försåg" "försett" )) (mkPrep "med");
 foersegla_vb_1_1_V2	= mkV2 ( mkV "förseglar" ) noPrep;
 foersena_vb_1_1_V2	= mkV2 ( mkV "försenar" ) noPrep;
 foersiggaa_vb_1_1_V	= mkV "försiggå" "försiggår" "försiggå" "försiggick" "försiggått" "försiggången" ;
 foersitta_vb_1_1_V2	= mkV2 ( mkV "försitta" "försatt" "försuttit" ) noPrep;
 foersjunka_vb_1_1_V2	= mkV2 ( mkV "försjunka" "försjönk" "försjunkit" ) (mkPrep "i");
 foerskingra_vb_1_1_V2	= mkV2 ( mkV "förskingrar" ) noPrep;
 foerskjuta_vb_1_1_V2	= mkV2 ( mkV "förskjuta" "försköt" "förskjutit" ) noPrep;
 foerskoena_vb_1_1_V2	= mkV2 ( mkV "förskönar" ) noPrep;
 foerskona_vb_1_1_V3	= mkV3 ( mkV "förskonar" ) noPrep (mkPrep "från");
 foerskona_vb_1_1_VV	= mkV "förskonar" ** {c2 = mkComplement [ " att" ] ; lock_VV = <>} ;
 foerslaa_vb_1_1_V	= mkV "förslå" "förslog" "förslagit" ;
 foerslummas_vb_1_1_V	= mkV "förslummas" ;
 foersmaa_vb_1_1_V2	= mkV2 ( mkV "försmår" ) noPrep;
 foersmaa_vb_1_1_VV	= mkV "försmår" ** {c2 = mkComplement [ " att" ] ; lock_VV = <>} ;
 foersnilla_vb_1_1_V2	= mkV2 ( mkV "försnillar" ) noPrep;
 foersoeka_vb_1_1_VV	= mkV "försöker" ** {c2 = mkComplement [ ] ; lock_VV = <>} ;
 foersoerja_vb_1_1_V	= reflV ( mkV "försörja" "försörjde" "försörjt" );
 foersoerja_vb_1_1_V2	= mkV2 ( mkV "försörja" "försörjde" "försörjt" ) noPrep;
 foersonas_vb_1_1_V2	= mkV2 ( mkV "försonas" ) (mkPrep "med");
 foerspilla_vb_1_1_V2	= mkV2 ( mkV "förspiller" ) noPrep;
 foerstaa_vb_1_1_V2	= mkV2 ( mkV "förstå" "förstod" "förstått" ) noPrep;
 foerstaa_vb_1_1_VS	= mkVS ( mkV "förstå" "förstod" "förstått" ) ;
 foerstaerka_vb_1_1_V2	= mkV2 ( mkV "förstärker" ) noPrep;
 foerstatliga_vb_1_1_V2	= mkV2 ( mkV "förstatligar" ) noPrep;
 foerstoeras_vb_1_1_V2	= mkV2 ( mkV "förstörs" ) noPrep;
 foerstora_vb_1_1_V2	= mkV2 ( mkV "förstorar" ) noPrep;
 foerstroe_vb_1_1_V2	= mkV2 ( mkV "förströr" ) noPrep;
 foerstumma_vb_1_1_V	= mkV "förstummar" ;
 foersumma_vb_1_1_V2	= mkV2 ( mkV "försummar" ) noPrep;
 foersumma_vb_1_1_VV	= mkV "försummar" ** {c2 = mkComplement [ " att" ] ; lock_VV = <>} ;
 foersvaara_vb_1_1_V2	= mkV2 ( mkV "försvårar" ) noPrep;
 foersvaga_vb_1_1_V2	= mkV2 ( mkV "försvagar" ) noPrep;
 foersvara_vb_1_1_V	= reflV ( mkV "försvarar" );
 foersvara_vb_1_1_V2	= mkV2 ( mkV "försvarar" ) noPrep;
 foersvenska_vb_1_1_V2	= mkV2 ( mkV "försvenskar" ) noPrep;
 foersvinna_vb_1_1_V2	= mkV2 ( mkV "försvinna" "försvann" "försvunnit" ) (mkPrep "från");
 foerta_vb_1_1_V	= reflV ( mkV "förta" "förtar" "förta" "förtog" "förtagit" "förtagen" );
 foertaelja_vb_1_1_VS	= mkVS ( mkV "förtälja" "förtäljde" "förtäljt" ) ;
 foertaera_vb_1_1_V2	= mkV2 ( mkV "förtära" "förtärde" "förtärt" ) noPrep;
 foertala_vb_1_1_V2	= mkV2 ( mkV "förtalar" ) noPrep;
 foertiga_vb_1_1_V2	= mkV2 ( mkV "förtiga" "förteg" "förtigit" ) noPrep;
 foertiga_vb_1_1_VS	= mkVS ( mkV "förtiga" "förteg" "förtigit" ) ;
 foertjaena_vb_1_1_V2	= mkV2 ( mkV "förtjänar" ) noPrep;
 foertoeja_vb_1_1_V2	= mkV2 ( mkV "förtöja" "förtöjde" "förtöjt" ) noPrep;
 foertraenga_vb_1_1_V2	= mkV2 ( mkV "förtränger" ) noPrep;
 foertrycka_vb_1_1_V2	= mkV2 ( mkV "förtrycker" ) noPrep;
 foertulla_vb_1_1_V2	= mkV2 ( mkV "förtullar" ) noPrep;
 foertvina_vb_1_1_V	= mkV "förtvinar" ;
 foertvivla_vb_1_1_V	= mkV "förtvivlar" ;
 foertydliga_vb_1_1_V2	= mkV2 ( mkV "förtydligar" ) noPrep;
 foerutsaega_vb_1_1_V2	= mkV2 ( mkV "förutsäga" "förutsade" "förutsagt" ) noPrep;
 foerutsaega_vb_1_1_VS	= mkVS ( mkV "förutsäga" "förutsade" "förutsagt" ) ;
 foerutsaetta_vb_1_1_V2	= mkV2 ( mkV "förutsätta" "förutsätter" "förutsätt" "förutsatte" "förutsatt" "förutsatt" ) noPrep;
 foerutsaetta_vb_1_1_VS	= mkVS ( mkV "förutsätta" "förutsätter" "förutsätt" "förutsatte" "förutsatt" "förutsatt" ) ;
 foerutse_vb_1_1_V2	= mkV2 ( mkV "förutse" "förutsåg" "förutsett" ) noPrep;
 foervaana_vb_1_1_V2	= mkV2 ( mkV "förvånar" ) noPrep;
 foervaegra_vb_1_1_V3	= mkV3 ( mkV "förvägrar" ) noPrep noPrep;
 foervaegra_vb_1_1_VV	= mkV "förvägrar" ** {c2 = mkComplement [ " att" ] ; lock_VV = <>} ;
 foervaella_vb_1_1_V2	= mkV2 ( mkV "förväller" ) noPrep;
 foervaenta_vb_1_1_V2	= mkV2 (reflV ( mkV "förväntar" )) noPrep;
 foervaenta_vb_1_1_VS	= mkVS (reflV ( mkV "förväntar" )) ;
 foervaerra_vb_1_1_V2	= mkV2 ( mkV "förvärrar" ) noPrep;
 foervaerva_vb_1_1_V2	= mkV2 ( mkV "förvärvar" ) noPrep;
 foervaervsarbeta_vb_1_1_V	= mkV "förvärvsarbetar" ;
 foervaexla_vb_1_1_V2	= mkV2 ( mkV "förväxlar" ) noPrep;
 foervandla_vb_1_1_V2	= mkV2 ( mkV "förvandlar" ) noPrep;
 foervanska_vb_1_1_V2	= mkV2 ( mkV "förvanskar" ) noPrep;
 foervara_vb_1_1_V2	= mkV2 ( mkV "förvarar" ) noPrep;
 foervarna_vb_1_1_V2	= mkV2 ( mkV "förvarnar" ) noPrep;
 foerverka_vb_1_1_V2	= mkV2 ( mkV "förverkar" ) noPrep;
 foerverkliga_vb_1_1_V2	= mkV2 ( mkV "förverkligar" ) noPrep;
 foervilla_vb_1_1_V2	= mkV2 ( mkV "förvillar" ) noPrep;
 foervirra_vb_1_1_V2	= mkV2 ( mkV "förvirrar" ) noPrep;
 foervisa_vb_1_1_V2	= mkV2 ( mkV "förvisar" ) noPrep;
 foervraenga_vb_1_1_V2	= mkV2 ( mkV "förvränger" ) noPrep;
 foeryngra_vb_1_1_V2	= mkV2 ( mkV "föryngrar" ) noPrep;
 foesa_vb_1_1_V2	= mkV2 ( mkV "föser" ) noPrep;
 foga_vb_1_V2	= mkV2 (reflV ( mkV "fogar" )) (mkPrep "i");
 foga_vb_11_V3	= mkV3 ( mkV "fogar" ) noPrep (mkPrep "till");
 foga_vb_12_V3	= mkV3 ( partV ( mkV "fogar" ) "samman" ) noPrep (mkPrep "och");
 foga_vb_1_VV	= reflV ( mkV "fogar" ) ** {c2 = mkComplement [ "i att" ] ; lock_VV = <>} ;
 forcera_vb_1_V2	= mkV2 ( mkV "forcerar" ) noPrep;
 fordras_vb_1_V2	= mkV2 ( mkV "fordras" ) noPrep;
 fordras_vb_1_VS	= mkVS ( mkV "fordras" ) ;
 forma_vb_1_V2	= mkV2 ( mkV "formar" ) noPrep;
 formulera_vb_1_V2	= mkV2 ( mkV "formulerar" ) noPrep;
 forsa_vb_1_V	= mkV "forsar" ;
 forska_vb_1_V	= mkV "forskar" ;
 forska_vb_1_V2	= mkV2 ( mkV "forskar" ) (mkPrep "efter");
 forsla_vb_1_V2	= mkV2 ( mkV "forslar" ) noPrep;
 fortgaa_vb_1_1_V	= mkV "fortgå" "fortgick" "fortgått" ;
 fortsaetta_vb_1_1_V	= mkV "fortsätta" "fortsätter" "fortsätt" "fortsatte" "fortsatt" "fortsatt" ;
 fortsaetta_vb_1_1_V2	= mkV2 (partV ( mkV "fortsätta" "fortsätter" "fortsätt" "fortsatte" "fortsatt" "fortsatt" ) "med") noPrep;
 fortsaetta_vb_1_1_VV	= partV ( mkV "fortsätta" "fortsätter" "fortsätt" "fortsatte" "fortsatt" "fortsatt" ) "med" ** {c2 = mkComplement [ " att" ] ; lock_VV = <>} ;
 fortskrida_vb_1_V	= mkV "fortskrida" "fortskred" "fortskridit" ;
 fostra_vb_1_V2	= mkV2 ( mkV "fostrar" ) noPrep;
 fota_vb_1_V2	= mkV2 ( mkV "fotar" ) noPrep;
 fotografera_vb_1_V2	= mkV2 ( mkV "fotograferar" ) noPrep;
 fraaga_vb_1_1_V2	= mkV2 ( mkV "frågar" ) noPrep;
 fraaga_vb_1_1_VQ	= mkVQ ( mkV "frågar" ) ;
 fraelsa_vb_1_1_V2	= mkV2 ( mkV "frälser" ) noPrep;
 fraemja_vb_1_1_V2	= mkV2 ( mkV "främjar" ) noPrep;
 fraesa_vb_2_1_V	= mkV "fräser" ;
 fraesa_vb_2_11_V2	= mkV2 ( mkV "fräser" ) (mkPrep "åt");
 fraesa_vb_2_12_V2	= mkV2 ( mkV "fräser" ) noPrep;
 fraeta_vb_1_1_V2	= mkV2 ( mkV "fräter" ) (mkPrep "på");
 frakta_vb_1_V2	= mkV2 ( mkV "fraktar" ) noPrep;
 frambringa_vb_1_V2	= mkV2 ( mkV "frambringar" ) noPrep;
 framfoera_vb_1_1_V2	= mkV2 ( mkV "framföra" "framförde" "framfört" ) noPrep;
 framgaa_vb_1_1_V2	= mkV2 ( mkV "framgå" "framgår" "framgå" "framgick" "framgått" "framgången" ) (mkPrep "av");
 framhaalla_vb_1_1_V2	= mkV2 ( mkV "framhålla" "framhöll" "framhållit" ) noPrep;
 framhaalla_vb_1_1_VS	= mkVS ( mkV "framhålla" "framhöll" "framhållit" ) ;
 framhaerda_vb_1_1_V2	= mkV2 ( mkV "framhärdar" ) (mkPrep "i");
 framhaeva_vb_1_1_V2	= mkV2 ( mkV "framhäver" ) noPrep;
 framhaeva_vb_1_1_VS	= mkVS ( mkV "framhäver" ) ;
 framkalla_vb_1_V2	= mkV2 ( mkV "framkallar" ) noPrep;
 framkasta_vb_1_V2	= mkV2 ( mkV "framkastar" ) noPrep;
 framkomma_vb_1_V	= mkV "framkomma" "framkom" "framkommit" ;
 framlaegga_vb_1_1_V2	= mkV2 ( mkV "framlägga" "framlade" "framlagt" ) noPrep;
 framstaa_vb_1_1_V	= mkV "framstå" "framstod" "framstått" ;
 framstaella_vb_1_1_V2	= mkV2 ( mkV "framställer" ) noPrep;
 framtraeda_vb_1_1_V	= mkV "framträda" "framträdde" "framträtt" ;
 framtvinga_vb_1_V2	= mkV2 ( mkV "framtvingar" ) noPrep;
 frankera_vb_1_V2	= mkV2 ( mkV "frankerar" ) noPrep;
 frappera_vb_1_V2	= mkV2 ( mkV "frapperar" ) noPrep;
 frasa_vb_1_V	= mkV "frasar" ;
 fresta_vb_1_V2	= mkV2 ( mkV "frestar" ) noPrep;
 fria_vb_1_V	= mkV "friar" ;
 fria_vb_1_V2	= mkV2 ( mkV "friar" ) noPrep;
 fridlysa_vb_1_V2	= mkV2 ( mkV "fridlyser" ) noPrep;
 frige_vb_1_V2	= mkV2 ( mkV "frige" "friger" "frige" "frigav" "frigett" "frigiven" ) noPrep;
 frigoera_vb_1_1_V2	= mkV2 (reflV ( mkV "frigöra" "frigjorde" "frigjort" )) (mkPrep "från");
 frikaenna_vb_1_1_V2	= mkV2 ( mkV "frikänna" "frikände" "frikänt" ) noPrep;
 frikalla_vb_1_V2	= mkV2 ( mkV "frikallar" ) noPrep;
 frikoepa_vb_1_1_V2	= mkV2 ( mkV "friköper" ) noPrep;
 frislaeppa_vb_1_1_V2	= mkV2 ( mkV "frisläpper" ) noPrep;
 fristaella_vb_1_1_V2	= mkV2 ( mkV "friställer" ) noPrep;
 frita_vb_11_V2	= mkV2 ( mkV "frita" "fritar" "frita" "fritog" "fritagit" "fritagen" ) noPrep;
 frita_vb_12_V2	= mkV2 (reflV ( mkV "frita" "fritar" "frita" "fritog" "fritagit" "fritagen" )) (mkPrep "från");
 fritera_vb_1_V2	= mkV2 ( mkV "friterar" ) noPrep;
 frodas_vb_1_V	= mkV "frodas" ;
 frossa_vb_1_V2	= mkV2 ( mkV "frossar" ) (mkPrep "i");
 frukta_vb_1_V2	= mkV2 ( mkV "fruktar" ) noPrep;
 frukta_vb_1_VS	= mkVS ( mkV "fruktar" ) ;
 frusta_vb_1_V	= mkV "frustar" ;
 fukta_vb_1_V2	= mkV2 ( mkV "fuktar" ) noPrep;
 fullborda_vb_1_V2	= mkV2 ( mkV "fullbordar" ) noPrep;
 fullfoelja_vb_1_1_V2	= mkV2 ( mkV "fullfölja" "fullföljde" "fullföljt" ) noPrep;
 fullgoera_vb_1_1_V2	= mkV2 ( mkV "fullgöra" "fullgjorde" "fullgjort" ) noPrep;
 fumla_vb_1_V2	= mkV2 ( mkV "fumlar" ) (mkPrep "med");
 fundera_vb_1_V2	= mkV2 ( mkV "funderar" ) (mkPrep "på");
 fungera_vb_1_V	= mkV "fungerar" ;
 funka_vb_1_V	= mkV "funkar" ;
 fuska_vb_1_V	= mkV "fuskar" ;
 fuska_vb_1_V2	= mkV2 ( mkV "fuskar" ) (mkPrep "med");
 fylla_vb_1_V2	= mkV2 ( mkV "fyller" ) noPrep;
 fynda_vb_1_V	= mkV "fyndar" ;
 gaa_vb_1_11_V	= mkV "gå" "går" "gå" "gick" "gått" "gången" ;
 gaa_vb_1_12_V	= partV ( mkV "gå" "går" "gå" "gick" "gått" "gången" ) "an";
 gaa_vb_1_13_V	= partV ( mkV "gå" "går" "gå" "gick" "gått" "gången" ) "ned";
 gaa_vb_1_14_V	= partV ( mkV "gå" "går" "gå" "gick" "gått" "gången" ) "på";
 gaa_vb_1_15_V	= partV ( mkV "gå" "går" "gå" "gick" "gått" "gången" ) "upp";
 gaa_vb_1_16_V	= partV ( mkV "gå" "går" "gå" "gick" "gått" "gången" ) "åt";
 gaa_vb_1_17_V	= partV ( mkV "gå" "går" "gå" "gick" "gått" "gången" ) "över";
 gaa_vb_1_11_V2	= mkV2 (partV ( mkV "gå" "går" "gå" "gick" "gått" "gången" ) "igenom") noPrep;
 gaa_vb_1_12_V2	= mkV2 (partV (partV ( mkV "gå" "går" "gå" "gick" "gått" "gången" ) "in") "för") noPrep;
 gaa_vb_1_13_V2	= mkV2 (partV (partV ( mkV "gå" "går" "gå" "gick" "gått" "gången" ) "med") "på") noPrep;
 gaa_vb_1_14_V2	= mkV2 (partV (partV ( mkV "gå" "går" "gå" "gick" "gått" "gången" ) "ut") "över") noPrep;
 gaella_vb_2_1_V	= mkV "gäller" ;
 gaenga_vb_1_1_V2	= mkV2 ( mkV "gängar" ) noPrep;
 gaespa_vb_1_1_V	= mkV "gäspar" ;
 gaesta_vb_1_1_V2	= mkV2 ( mkV "gästar" ) noPrep;
 gallra_vb_1_V2	= mkV2 ( mkV "gallrar" ) noPrep;
 gallskrika_vb_1_V	= mkV "gallskrika" "gallskrek" "gallskrikit" ;
 galoppera_vb_1_V	= mkV "galopperar" ;
 galvanisera_vb_1_V2	= mkV2 ( mkV "galvaniserar" ) noPrep;
 gapa_vb_1_V	= mkV "gapar" ;
 garantera_vb_1_V2	= mkV2 ( mkV "garanterar" ) noPrep;
 garantera_vb_1_VS	= mkVS ( mkV "garanterar" ) ;
 gardera_vb_11_V2	= mkV2 ( mkV "garderar" ) (mkPrep "med");
 gardera_vb_12_V2	= mkV2 (reflV ( mkV "garderar" )) (mkPrep "emot");
 garnera_vb_1_V2	= mkV2 ( mkV "garnerar" ) noPrep;
 garva_vb_1_V	= mkV "garvar" ;
 gassa_vb_1_V	= mkV "gassar" ;
 gastkrama_vb_1_V2	= mkV2 ( mkV "gastkramar" ) noPrep;
 ge_vb_11_V	= partV ( mkV "ge" "ger" "ge" "gav" "gett" "given" ) "efter";
 ge_vb_12_V	= partV ( mkV "ge" "ger" "ge" "gav" "gett" "given" ) "igen";
 ge_vb_13_V	= partV (reflV ( mkV "ge" "ger" "ge" "gav" "gett" "given" )) "av";
 ge_vb_14_V	= reflV ( mkV "ge" "ger" "ge" "gav" "gett" "given" );
 ge_vb_15_V	= reflV (partV ( mkV "ge" "ger" "ge" "gav" "gett" "given" ) "med");
 ge_vb_11_V2	= mkV2 (partV ( mkV "ge" "ger" "ge" "gav" "gett" "given" ) "efter") (mkPrep "för");
 ge_vb_12_V2	= mkV2 (partV ( mkV "ge" "ger" "ge" "gav" "gett" "given" ) "upp") noPrep;
 ge_vb_13_V2	= mkV2 (partV ( mkV "ge" "ger" "ge" "gav" "gett" "given" ) "ut") noPrep;
 ge_vb_14_V2	= mkV2 (partV (reflV ( mkV "ge" "ger" "ge" "gav" "gett" "given" )) "på") noPrep;
 ge_vb_11_V3	= mkV3 ( mkV "ge" "ger" "ge" "gav" "gett" "given" ) noPrep (mkPrep "för");
 ge_vb_12_V3	= mkV3 ( mkV "ge" "ger" "ge" "gav" "gett" "given" ) noPrep (mkPrep "till");
 ge_vb_13_V3	= mkV3 ( mkV "ge" "ger" "ge" "gav" "gett" "given" ) noPrep noPrep;
 ge_vb_1_VV	= partV (reflV ( mkV "ge" "ger" "ge" "gav" "gett" "given" )) "till" ** {c2 = mkComplement [ " att" ] ; lock_VV = <>} ;
 genera_vb_1_V2	= mkV2 ( mkV "generar" ) noPrep;
 generalisera_vb_1_V	= mkV "generaliserar" ;
 genomarbeta_vb_1_V2	= mkV2 ( mkV "genomarbetar" ) noPrep;
 genomdriva_vb_1_V2	= mkV2 ( mkV "genomdriva" "genomdrev" "genomdrivit" ) noPrep;
 genomfoera_vb_1_1_V2	= mkV2 ( mkV "genomföra" "genomförde" "genomfört" ) noPrep;
 genomgaa_vb_1_1_V2	= mkV2 ( mkV "genomgå" "genomgår" "genomgå" "genomgick" "genomgått" "genomgången" ) noPrep;
 genomskaada_vb_1_1_V2	= mkV2 ( mkV "genomskådar" ) noPrep;
 genomsoeka_vb_1_1_V2	= mkV2 ( mkV "genomsöker" ) noPrep;
 genomsyra_vb_1_V2	= mkV2 ( mkV "genomsyrar" ) noPrep;
 genskjuta_vb_1_V2	= mkV2 ( mkV "genskjuta" "gensköt" "genskjutit" ) noPrep;
 gestalta_vb_1_V	= reflV ( mkV "gestaltar" );
 gestalta_vb_1_V2	= mkV2 ( mkV "gestaltar" ) noPrep;
 gestikulera_vb_1_V	= mkV "gestikulerar" ;
 gillas_vb_1_V2	= mkV2 ( mkV "gillas" ) noPrep;
 gillra_vb_1_V2	= mkV2 ( mkV "gillrar" ) noPrep;
 gipsa_vb_1_V2	= mkV2 ( mkV "gipsar" ) noPrep;
 gipsa_vb_1_V3	= mkV3 ( mkV "gipsar" ) noPrep (mkPrep "på");
 gira_vb_1_V	= mkV "girar" ;
 girera_vb_1_V2	= mkV2 ( mkV "girerar" ) noPrep;
 gissa_vb_11_V2	= mkV2 ( mkV "gissar" ) noPrep;
 gissa_vb_12_V2	= mkV2 (reflV ( mkV "gissar" )) (mkPrep "till");
 gissa_vb_1_VS	= mkVS ( mkV "gissar" ) ;
 gitta_vb_1_VV	= mkV "gitta" "gitte" "gittat" ** {c2 = mkComplement [ "inte" ] ; lock_VV = <>} ;
 gjuta_vb_1_V2	= mkV2 ( mkV "gjuta" "göt" "gjutit" ) noPrep;
 glaefsa_vb_1_1_V	= mkV "gläfser" ;
 glaensa_vb_1_1_V	= mkV "glänser" ;
 glaenta_vb_1_1_V2	= mkV2 ( mkV "gläntar" ) (mkPrep "på");
 glappa_vb_1_V	= mkV "glappar" ;
 glida_vb_1_V	= mkV "glida" "gled" "glidit" ;
 glimma_vb_1_V	= mkV "glimmar" ;
 glittra_vb_1_V	= mkV "glittrar" ;
 gloeda_vb_1_1_V	= mkV "glöda" "glödde" "glött" ;
 gloedga_vb_1_1_V2	= mkV2 ( mkV "glödgar" ) noPrep;
 gloemma_vb_1_11_V2	= mkV2 (partV ( mkV "glömmer" ) "bort") noPrep;
 gloemma_vb_1_12_V2	= mkV2 (partV ( mkV "glömmer" ) "kvar") noPrep;
 gloemma_vb_1_1_VS	= mkVS (partV ( mkV "glömmer" ) "bort") ;
 gloemma_vb_1_1_VV	= partV ( mkV "glömmer" ) "bort" ** {c2 = mkComplement [ " att" ] ; lock_VV = <>} ;
 gnaegga_vb_1_1_V	= mkV "gnäggar" ;
 gnaella_vb_1_1_V2	= mkV2 ( mkV "gnäller" ) (mkPrep "över");
 gnaella_vb_1_1_VS	= mkVS ( mkV "gnäller" ) ;
 gnaga_vb_1_V2	= mkV2 ( mkV "gnager" ) (mkPrep "på");
 gnida_vb_1_V	= mkV "gnida" "gned" "gnidit" ;
 gnida_vb_1_V2	= mkV2 ( mkV "gnida" "gned" "gnidit" ) noPrep;
 gnissla_vb_1_V	= mkV "gnisslar" ;
 gnistra_vb_1_V	= mkV "gnistrar" ;
 gno_vb_1_V	= mkV "gnor" ;
 gno_vb_1_V2	= mkV2 ( mkV "gnor" ) noPrep;
 gnola_vb_1_V	= mkV "gnolar" ;
 gnugga_vb_1_V2	= mkV2 ( mkV "gnuggar" ) noPrep;
 gny_vb_1_V2	= mkV2 ( mkV "gnyr" ) (mkPrep "över");
 gny_vb_1_VS	= mkVS ( mkV "gnyr" ) ;
 godkaenna_vb_1_1_V2	= mkV2 ( mkV "godkänna" "godkände" "godkänt" ) noPrep;
 godta_vb_1_V2	= mkV2 ( mkV "godta" "godtar" "godta" "godtog" "godtagit" "godtagen" ) noPrep;
 godta_vb_1_VS	= mkVS ( mkV "godta" "godtar" "godta" "godtog" "godtagit" "godtagen" ) ;
 goeda_vb_1_1_V2	= mkV2 ( mkV "göda" "gödde" "gött" ) noPrep;
 goedsla_vb_1_1_V	= mkV "gödslar" ;
 goemma_vb_1_1_V2	= mkV2 ( mkV "gömmer" ) noPrep;
 goera_vb_1_11_V	= partV (reflV ( mkV "göra" "gjorde" "gjort" )) "till";
 goera_vb_1_12_V	= reflV ( mkV "göra" "gjorde" "gjort" );
 goera_vb_1_13_V	= reflV (partV ( mkV "göra" "gjorde" "gjort" ) "bort");
 goera_vb_1_11_V2	= mkV2 ( mkV "göra" "gjorde" "gjort" ) noPrep;
 goera_vb_1_12_V2	= mkV2 (partV ( mkV "göra" "gjorde" "gjort" ) "av") noPrep;
 goera_vb_1_13_V2	= mkV2 (partV ( mkV "göra" "gjorde" "gjort" ) "om") noPrep;
 goera_vb_1_14_V2	= mkV2 (partV ( mkV "göra" "gjorde" "gjort" ) "upp") noPrep;
 goera_vb_1_1_V2A	= mkV2A ( mkV "göra" "gjorde" "gjort" ) noPrep;
 goera_vb_1_1_VS	= mkVS ( mkV "göra" "gjorde" "gjort" ) ;
 golva_vb_1_V2	= mkV2 ( mkV "golvar" ) noPrep;
 gorma_vb_1_V	= mkV "gormar" ;
 gottgoera_vb_1_1_V2	= mkV2 ( mkV "gottgöra" "gottgjorde" "gottgjort" ) noPrep;
 graana_vb_1_1_V	= mkV "grånar" ;
 graata_vb_1_1_V	= mkV "gråta" "grät" "gråtit" ;
 graedda_vb_1_1_V2	= mkV2 ( mkV "gräddar" ) noPrep;
 graela_vb_1_11_V2	= mkV2 ( mkV "grälar" ) (mkPrep "med");
 graela_vb_1_12_V2	= mkV2 ( mkV "grälar" ) (mkPrep "på");
 graema_vb_1_1_V2	= mkV2 (reflV ( mkV "grämer" )) (mkPrep "över");
 graensa_vb_1_1_V2	= mkV2 ( mkV "gränsar" ) (mkPrep "till");
 graeva_vb_2_1_V2	= mkV2 ( mkV "gräver" ) (mkPrep "upp");
 granska_vb_1_V2	= mkV2 ( mkV "granskar" ) noPrep;
 gratta_vb_1_V2	= mkV2 ( mkV "grattar" ) noPrep;
 gratulera_vb_1_V2	= mkV2 ( mkV "gratulerar" ) noPrep;
 grava_vb_1_V2	= mkV2 ( mkV "gravar" ) noPrep;
 gravera_vb_1_V2	= mkV2 (partV ( mkV "graverar" ) "in") noPrep;
 greja_vb_11_V2	= mkV2 ( mkV "grejar" ) (mkPrep "med");
 greja_vb_12_V2	= mkV2 ( mkV "grejar" ) noPrep;
 grensla_vb_1_V2	= mkV2 ( mkV "grenslar" ) noPrep;
 greppa_vb_1_V	= mkV "greppar" ;
 grilla_vb_1_V2	= mkV2 ( mkV "grillar" ) noPrep;
 grimasera_vb_1_V	= mkV "grimaserar" ;
 grina_vb_1_V	= mkV "grinar" ;
 grina_vb_1_V2	= mkV2 ( mkV "grinar" ) (mkPrep "åt");
 grina_vb_1_VS	= mkVS ( mkV "grinar" ) ;
 gripa_vb_1_V2	= mkV2 ( mkV "gripa" "grep" "gripit" ) noPrep;
 gro_vb_1_V	= mkV "gror" ;
 groenska_vb_1_1_V	= mkV "grönskar" ;
 grubbla_vb_1_V2	= mkV2 ( mkV "grubblar" ) (mkPrep "på");
 grunda_vb_21_V2	= mkV2 ( mkV "grundar" ) noPrep;
 grunda_vb_22_V2	= mkV2 (reflV ( mkV "grundar" )) (mkPrep "på");
 grunda_vb_2_V3	= mkV3 ( mkV "grundar" ) noPrep (mkPrep "på");
 grundlaegga_vb_1_1_V2	= mkV2 ( mkV "grundlägga" "grundlade" "grundlagt" ) noPrep;
 grunna_vb_1_V2	= mkV2 ( mkV "grunnar" ) (mkPrep "på");
 grunna_vb_1_VQ	= mkVQ ( mkV "grunnar" ) ;
 gruppera_vb_1_V2	= mkV2 ( mkV "grupperar" ) noPrep;
 grusa_vb_1_V2	= mkV2 ( mkV "grusar" ) noPrep;
 gry_vb_1_V	= mkV "gryr" ;
 grymta_vb_1_V	= mkV "grymtar" ;
 gulna_vb_1_V	= mkV "gulnar" ;
 gunga_vb_2_V	= mkV "gungar" ;
 guppa_vb_1_V2	= mkV2 ( mkV "guppar" ) (mkPrep "på");
 gurgla_vb_2_V	= reflV ( mkV "gurglar" );
 gymnastisera_vb_1_V	= mkV "gymnastiserar" ;
 haalla_vb_1_11_V	= mkV "hålla" "höll" "hållit" ;
 haalla_vb_1_12_V	= partV ( mkV "hålla" "höll" "hållit" ) "med";
 haalla_vb_1_13_V	= partV ( mkV "hålla" "höll" "hållit" ) "till";
 haalla_vb_1_14_V	= reflV ( mkV "hålla" "höll" "hållit" );
 haalla_vb_1_11_V2	= mkV2 ( mkV "hålla" "höll" "hållit" ) noPrep;
 haalla_vb_1_12_V2	= mkV2 (partV ( mkV "hålla" "höll" "hållit" ) "av") noPrep;
 haalla_vb_1_13_V2	= mkV2 (partV ( mkV "hålla" "höll" "hållit" ) "i") noPrep;
 haalla_vb_1_14_V2	= mkV2 (partV ( mkV "hålla" "höll" "hållit" ) "igen") (mkPrep "på");
 haalla_vb_1_15_V2	= mkV2 (partV ( mkV "hålla" "höll" "hållit" ) "med") noPrep;
 haalla_vb_1_16_V2	= mkV2 (partV ( mkV "hålla" "höll" "hållit" ) "på") (mkPrep "med");
 haalla_vb_1_17_V2	= mkV2 (partV ( mkV "hålla" "höll" "hållit" ) "ut") (mkPrep "med");
 haalla_vb_1_11_VV	= partV ( mkV "hålla" "höll" "hållit" ) "på" ** {c2 = mkComplement [ " att" ] ; lock_VV = <>} ;
 haalla_vb_1_12_VV	= partV (partV ( mkV "hålla" "höll" "hållit" ) "på") "med" ** {c2 = mkComplement [ " att" ] ; lock_VV = <>} ;
 haana_vb_1_1_V2	= mkV2 ( mkV "hånar" ) noPrep;
 haangla_vb_1_1_V2	= mkV2 ( mkV "hånglar" ) (mkPrep "med");
 haardna_vb_1_1_V	= mkV "hårdnar" ;
 haava_vb_1_1_V2	= mkV2 (partV ( mkV "håvar" ) "in") noPrep;
 hacka_vb_1_V2	= mkV2 ( mkV "hackar" ) noPrep;
 haecka_vb_1_1_V	= mkV "häckar" ;
 haefta_vb_1_1_V3	= mkV3 ( mkV "häftar" ) (mkPrep "ihop") (mkPrep "med");
 haegra_vb_1_1_V	= mkV "hägrar" ;
 haekta_vb_1_1_V2	= mkV2 ( mkV "häktar" ) noPrep;
 haella_vb_1_1_V3	= mkV3 ( mkV "häller" ) noPrep (mkPrep "i");
 haelsa_vb_1_1_V2	= mkV2 ( mkV "hälsar" ) (mkPrep "på");
 haelsa_vb_1_1_V2S	= mkV2S ( mkV "hälsar" ) noPrep;
 haemma_vb_1_1_V2	= mkV2 ( mkV "hämmar" ) noPrep;
 haemnas_vb_1_11_V2	= mkV2 ( mkV "hämnas" ) (mkPrep "på");
 haemnas_vb_1_12_V2	= mkV2 ( mkV "hämnas" ) noPrep;
 haemta_vb_1_11_V2	= mkV2 ( mkV "hämtar" ) noPrep;
 haemta_vb_1_12_V2	= mkV2 (reflV ( mkV "hämtar" )) (mkPrep "från");
 haenda_vb_1_1_V	= mkV "händer" ;
 haenfoera_vb_1_11_V2	= mkV2 ( mkV "hänföra" "hänförde" "hänfört" ) noPrep;
 haenfoera_vb_1_12_V2	= mkV2 (reflV ( mkV "hänföra" "hänförde" "hänfört" )) (mkPrep "till");
 haenfoera_vb_1_1_V3	= mkV3 ( mkV "hänföra" "hänförde" "hänfört" ) noPrep (mkPrep "till");
 haenga_vb_2_11_V	= mkV "hänger" ;
 haenga_vb_2_12_V	= partV ( mkV "hänger" ) "med";
 haenga_vb_2_11_V2	= mkV2 ( mkV "hänger" ) noPrep;
 haenga_vb_2_12_V2	= mkV2 (partV ( mkV "hänger" ) "efter") (mkPrep "med");
 haenga_vb_2_13_V2	= mkV2 (partV ( mkV "hänger" ) "efter") noPrep;
 haenga_vb_2_14_V2	= mkV2 (partV ( mkV "hänger" ) "på") noPrep;
 haenga_vb_2_15_V2	= mkV2 (reflV ( mkV "hänger" )) (mkPrep "åt");
 haenvisa_vb_1_11_V2	= mkV2 ( mkV "hänvisar" ) (mkPrep "till");
 haenvisa_vb_1_12_V2	= mkV2 ( mkV "hänvisar" ) noPrep;
 haepna_vb_1_1_V2	= mkV2 ( mkV "häpnar" ) (mkPrep "över");
 haepna_vb_1_1_VS	= mkVS ( mkV "häpnar" ) ;
 haerbaergera_vb_1_1_V2	= mkV2 ( mkV "härbärgerar" ) noPrep;
 haerja_vb_1_1_V2	= mkV2 ( mkV "härjar" ) noPrep;
 haerma_vb_1_1_V2	= mkV2 ( mkV "härmar" ) noPrep;
 haerska_vb_1_1_V	= mkV "härskar" ;
 haerska_vb_1_1_V2	= mkV2 ( mkV "härskar" ) (mkPrep "över");
 haerskna_vb_1_1_V	= mkV "härsknar" ;
 haerstamma_vb_1_1_V2	= mkV2 ( mkV "härstammar" ) (mkPrep "från");
 haeva_vb_1_1_V2	= mkV2 ( mkV "häver" ) noPrep;
 haevda_vb_1_1_V	= reflV ( mkV "hävdar" );
 haevda_vb_1_1_V2	= mkV2 ( mkV "hävdar" ) noPrep;
 haevda_vb_1_1_VS	= mkVS ( mkV "hävdar" ) ;
 haffa_vb_1_V2	= mkV2 ( mkV "haffar" ) noPrep;
 haja_vb_1_V	= partV ( mkV "hajar" ) "till";
 haja_vb_1_V2	= mkV2 ( mkV "hajar" ) noPrep;
 haja_vb_1_VS	= mkVS ( mkV "hajar" ) ;
 haka_vb_1_V	= reflV (partV ( mkV "hakar" ) "upp");
 haka_vb_1_V2	= mkV2 (reflV (partV ( mkV "hakar" ) "upp")) (mkPrep "på");
 hala_vb_1_V2	= mkV2 (partV ( mkV "halar" ) "upp") noPrep;
 halka_vb_1_V	= mkV "halkar" ;
 halsa_vb_1_V2	= mkV2 ( mkV "halsar" ) noPrep;
 halshugga_vb_1_V2	= mkV2 ( mkV "halshugga" "halshögg" "halshuggit" ) noPrep;
 halstra_vb_1_V2	= mkV2 ( mkV "halstrar" ) noPrep;
 halta_vb_1_V	= mkV "haltar" ;
 halvera_vb_1_V2	= mkV2 ( mkV "halverar" ) noPrep;
 halvsula_vb_1_V2	= mkV2 ( mkV "halvsular" ) noPrep;
 hamna_vb_1_V2	= mkV2 ( mkV "hamnar" ) (mkPrep "i");
 hamra_vb_1_V	= mkV "hamrar" ;
 hamstra_vb_1_V2	= mkV2 ( mkV "hamstrar" ) noPrep;
 handla_vb_2_V	= mkV "handlar" ;
 handla_vb_21_V2	= mkV2 ( mkV "handlar" ) (mkPrep "med");
 handla_vb_22_V2	= mkV2 ( mkV "handlar" ) (mkPrep "om");
 handla_vb_23_V2	= mkV2 ( mkV "handlar" ) noPrep;
 handplocka_vb_1_V2	= mkV2 ( mkV "handplockar" ) noPrep;
 handskas_vb_1_V2	= mkV2 (partV ( mkV "handskas" ) "med") noPrep;
 hanka_vb_1_V	= partV (reflV ( mkV "hankar" )) "fram";
 hantera_vb_1_V2	= mkV2 ( mkV "hanterar" ) noPrep;
 harkla_vb_1_V	= reflV ( mkV "harklar" );
 hasa_vb_2_V	= reflV ( mkV "hasar" );
 hata_vb_1_V2	= mkV2 ( mkV "hatar" ) noPrep;
 hata_vb_1_VV	= mkV "hatar" ** {c2 = mkComplement [ " att" ] ; lock_VV = <>} ;
 haverera_vb_1_V	= mkV "havererar" ;
 hedra_vb_1_V2	= mkV2 ( mkV "hedrar" ) noPrep;
 heja_vb_1_V2	= mkV2 ( mkV "hejar" ) (mkPrep "på");
 hejda_vb_1_V	= reflV ( mkV "hejdar" );
 hejda_vb_1_V2	= mkV2 ( mkV "hejdar" ) noPrep;
 hemfalla_vb_1_V2	= mkV2 ( mkV "hemfalla" "hemföll" "hemfallit" ) (mkPrep "åt");
 hemlighaalla_vb_1_1_V2	= mkV2 ( mkV "hemlighålla" "hemlighöll" "hemlighållit" ) noPrep;
 hemligstaempla_vb_1_1_V2	= mkV2 ( mkV "hemligstämplar" ) noPrep;
 hemsoeka_vb_1_1_V2	= mkV2 ( mkV "hemsöker" ) noPrep;
 hemstaella_vb_1_1_V2	= mkV2 ( mkV "hemställer" ) (mkPrep "om");
 hemstaella_vb_1_1_VS	= mkVS ( mkV "hemställer" ) ;
 heta_vb_1_VA	= mkVA ( mkV "heta" "hette" "hetat" ) ;
 hetsa_vb_1_V2	= mkV2 ( mkV "hetsar" ) noPrep;
 hetsa_vb_1_V3	= mkV3 ( mkV "hetsar" ) noPrep (mkPrep "mot");
 hicka_vb_1_V	= mkV "hickar" ;
 hindra_vb_1_V2	= mkV2 ( mkV "hindrar" ) noPrep;
 hindra_vb_1_VS	= mkVS ( mkV "hindrar" ) ;
 hinna_vb_1_V	= mkV "hinna" "hann" "hunnit" ;
 hinna_vb_1_V2	= mkV2 ( mkV "hinna" "hann" "hunnit" ) (mkPrep "till");
 hinna_vb_1_VV	= mkV "hinna" "hann" "hunnit" ** {c2 = mkComplement [ ] ; lock_VV = <>} ;
 hissna_vb_1_V	= mkV "hissnar" ;
 hitta_vb_11_V2	= mkV2 ( mkV "hittar" ) noPrep;
 hitta_vb_12_V2	= mkV2 (partV ( mkV "hittar" ) "på") noPrep;
 hjaelpe_vb_1_11_V2	= mkV2 ( mkV "hjälpe" ) (mkPrep "mot");
 hjaelpe_vb_1_12_V2	= mkV2 ( mkV "hjälpe" ) noPrep;
 hjaelpe_vb_1_13_V2	= mkV2 (partV ( mkV "hjälpe" ) "till") (mkPrep "med");
 hjaelpe_vb_1_1_V3	= mkV3 ( mkV "hjälpe" ) noPrep (mkPrep "med");
 hjaelpe_vb_1_11_VV	= mkV "hjälpe" ** {c2 = mkComplement [ " att" ] ; lock_VV = <>} ;
 hjaelpe_vb_1_12_VV	= partV (partV ( mkV "hjälpe" ) "till") "med" ** {c2 = mkComplement [ " att" ] ; lock_VV = <>} ;
 hoeja_vb_1_1_V2	= mkV2 ( mkV "höja" "höjde" "höjt" ) noPrep;
 hoelja_vb_1_1_V2	= mkV2 ( mkV "hölja" "höljde" "höljt" ) noPrep;
 hoera_vb_1_1_V	= mkV "höra" "hörde" "hört" ;
 hoera_vb_1_1_V2	= mkV2 ( mkV "höra" "hörde" "hört" ) (mkPrep "till");
 hoera_vb_1_11_VQ	= mkVQ ( mkV "höra" "hörde" "hört" ) ;
 hoera_vb_1_12_VQ	= mkVQ (partV ( mkV "höra" "hörde" "hört" ) "efter") ;
 hoera_vb_1_1_VS	= mkVS ( mkV "höra" "hörde" "hört" ) ;
 hoersamma_vb_1_1_V2	= mkV2 ( mkV "hörsammar" ) noPrep;
 hojta_vb_1_V	= mkV "hojtar" ;
 hoppas_vb_11_V	= mkV "hoppas" ;
 hoppas_vb_12_V	= partV ( mkV "hoppas" ) "av";
 hoppas_vb_11_V2	= mkV2 ( mkV "hoppas" ) (mkPrep "på");
 hoppas_vb_12_V2	= mkV2 (partV ( mkV "hoppas" ) "över") noPrep;
 hoppas_vb_1_VS	= mkVS ( mkV "hoppas" ) ;
 hoppas_vb_1_VV	= mkV "hoppas" ** {c2 = mkComplement [ ] ; lock_VV = <>} ;
 hosta_vb_2_V	= mkV "hostar" ;
 hota_vb_1_V2	= mkV2 ( mkV "hotar" ) noPrep;
 hota_vb_1_V3	= mkV3 ( mkV "hotar" ) noPrep (mkPrep "med");
 hota_vb_1_VV	= mkV "hotar" ** {c2 = mkComplement [ " att" ] ; lock_VV = <>} ;
 hudflaenga_vb_1_1_V2	= mkV2 ( mkV "hudflänger" ) noPrep;
 hugga_vb_2_V	= mkV "hugga" "högg" "huggit" ;
 hungra_vb_1_V2	= mkV2 ( mkV "hungrar" ) (mkPrep "efter");
 hunsa_vb_1_V2	= mkV2 ( mkV "hunsar" ) noPrep;
 hurra_vb_1_V2	= mkV2 ( mkV "hurrar" ) (mkPrep "för");
 hushaalla_vb_1_11_V2	= mkV2 ( mkV "hushållar" ) (mkPrep "med");
 hushaalla_vb_1_12_V2	= mkV2 ( mkV "hushållar" ) (mkPrep "åt");
 huttra_vb_1_V	= mkV "huttrar" ;
 hyckla_vb_1_V2	= mkV2 ( mkV "hycklar" ) noPrep;
 hylla_vb_1_V2	= mkV2 ( mkV "hyllar" ) noPrep;
 hyra_vb_1_V2	= mkV2 ( mkV "hyra" "hyrde" "hyrt" ) noPrep;
 hysa_vb_1_V2	= mkV2 ( mkV "hyser" ) noPrep;
 hyssja_vb_1_V2	= mkV2 ( mkV "hyssjar" ) (mkPrep "på");
 hytta_vb_1_V2	= mkV2 ( mkV "hytta" "hytter" "hytt" "hyttade" "hytt" "hyttad" ) (mkPrep "med");
 hyvla_vb_1_V2	= mkV2 ( mkV "hyvlar" ) noPrep;
 iaktta_vb_1_V2	= mkV2 ( mkV "iaktta" "iakttar" "iaktta" "iakttog" "iakttagit" "iakttagen" ) noPrep;
 identifiera_vb_11_V2	= mkV2 ( mkV "identifierar" ) noPrep;
 identifiera_vb_12_V2	= mkV2 (reflV ( mkV "identifierar" )) (mkPrep "med");
 idissla_vb_1_V	= mkV "idisslar" ;
 idka_vb_1_V2	= mkV2 ( mkV "idkar" ) noPrep;
 idrotta_vb_1_V	= mkV "idrottar" ;
 ifraagasaetta_vb_1_1_V	= mkV "ifrågasätta" "ifrågasätter" "ifrågasätt" "ifrågasatte" "ifrågasatt" "ifrågasatt" ;
 ifraagasaetta_vb_1_1_V2	= mkV2 ( mkV "ifrågasätta" "ifrågasätter" "ifrågasätt" "ifrågasatte" "ifrågasatt" "ifrågasatt" ) noPrep;
 ignorera_vb_1_V2	= mkV2 ( mkV "ignorerar" ) noPrep;
 ila_vb_1_V	= mkV "ilar" ;
 illustrera_vb_1_V2	= mkV2 ( mkV "illustrerar" ) noPrep;
 imitera_vb_1_V2	= mkV2 ( mkV "imiterar" ) noPrep;
 immigrera_vb_1_V	= mkV "immigrerar" ;
 imponera_vb_1_V2	= mkV2 ( mkV "imponerar" ) (mkPrep "på");
 importera_vb_1_V2	= mkV2 ( mkV "importerar" ) noPrep;
 impregnera_vb_1_V2	= mkV2 ( mkV "impregnerar" ) noPrep;
 improvisera_vb_1_V2	= mkV2 ( mkV "improviserar" ) noPrep;
 inbegripa_vb_1_V2	= mkV2 ( mkV "inbegripa" "inbegrep" "inbegripit" ) noPrep;
 inbilla_vb_1_VS	= mkVS (reflV ( mkV "inbillar" )) ;
 inbjuda_vb_1_V2	= mkV2 ( mkV "inbjuda" "inbjöd" "inbjudit" ) (mkPrep "till");
 inbjuda_vb_1_V3	= mkV3 ( mkV "inbjuda" "inbjöd" "inbjudit" ) noPrep (mkPrep "till");
 indela_vb_1_V2	= mkV2 ( mkV "indelar" ) noPrep;
 indikera_vb_1_V2	= mkV2 ( mkV "indikerar" ) noPrep;
 indikera_vb_1_VS	= mkVS ( mkV "indikerar" ) ;
 infiltrera_vb_1_V2	= mkV2 ( mkV "infiltrerar" ) noPrep;
 influera_vb_1_V2	= mkV2 ( mkV "influerar" ) noPrep;
 infoera_vb_1_1_V2	= mkV2 ( mkV "införa" "införde" "infört" ) noPrep;
 infoerliva_vb_1_1_V3	= mkV3 ( mkV "införlivar" ) noPrep (mkPrep "med");
 informera_vb_1_V2	= mkV2 ( mkV "informerar" ) noPrep;
 infria_vb_1_V2	= mkV2 ( mkV "infriar" ) noPrep;
 ingaa_vb_2_1_V2	= mkV2 ( mkV "ingå" "ingår" "ingå" "ingick" "ingått" "ingången" ) (mkPrep "i");
 ingaa_vb_2_1_V3	= mkV3 ( mkV "ingå" "ingår" "ingå" "ingick" "ingått" "ingången" ) noPrep (mkPrep "med");
 inge_vb_1_V3	= mkV3 ( mkV "inge" "inger" "inge" "ingav" "ingett" "ingiven" ) noPrep noPrep;
 ingjuta_vb_1_V2	= mkV2 ( mkV "ingjuta" "ingöt" "ingjutit" ) noPrep;
 ingripa_vb_1_V2	= mkV2 ( mkV "ingripa" "ingrep" "ingripit" ) (mkPrep "mot");
 inhaegna_vb_1_1_V2	= mkV2 ( mkV "inhägnar" ) noPrep;
 inhaemta_vb_1_1_V2	= mkV2 ( mkV "inhämtar" ) noPrep;
 injaga_vb_1_V2	= mkV2 ( mkV "injagar" ) noPrep;
 injicera_vb_1_V2	= mkV2 ( mkV "injicerar" ) noPrep;
 inkassera_vb_1_V2	= mkV2 ( mkV "inkasserar" ) noPrep;
 inkludera_vb_1_V2	= mkV2 ( mkV "inkluderar" ) noPrep;
 inkorporera_vb_1_V3	= mkV3 ( mkV "inkorporerar" ) noPrep (mkPrep "med");
 inkraekta_vb_1_1_V2	= mkV2 ( mkV "inkräktar" ) (mkPrep "på");
 inkvartera_vb_1_V2	= mkV2 ( mkV "inkvarterar" ) noPrep;
 inleda_vb_1_V2	= mkV2 ( mkV "inleda" "inledde" "inlett" ) noPrep;
 inlemma_vb_1_V3	= mkV3 ( mkV "inlemmar" ) noPrep (mkPrep "i");
 innebaera_vb_1_1_V2	= mkV2 ( mkV "innebära" "innebar" "inneburit" ) noPrep;
 innebaera_vb_1_1_VS	= mkVS ( mkV "innebära" "innebar" "inneburit" ) ;
 innefatta_vb_1_V2	= mkV2 ( mkV "innefattar" ) noPrep;
 innehaalla_vb_1_1_V2	= mkV2 ( mkV "innehålla" "innehöll" "innehållit" ) noPrep;
 inordna_vb_1_V2	= mkV2 (reflV ( mkV "inordnar" )) (mkPrep "i");
 inpraenta_vb_1_1_V2	= mkV2 ( mkV "inpräntar" ) noPrep;
 inraetta_vb_1_1_V2	= mkV2 ( mkV "inrättar" ) noPrep;
 inreda_vb_1_V2	= mkV2 ( mkV "inreda" "inredde" "inrett" ) noPrep;
 inregistrera_vb_1_V2	= mkV2 ( mkV "inregistrerar" ) noPrep;
 inrikta_vb_1_V2	= mkV2 (reflV ( mkV "inriktar" )) (mkPrep "på");
 inrikta_vb_1_VV	= reflV ( mkV "inriktar" ) ** {c2 = mkComplement [ "på att" ] ; lock_VV = <>} ;
 inse_vb_1_V2	= mkV2 ( mkV "inse" "insåg" "insett" ) noPrep;
 inse_vb_1_VS	= mkVS ( mkV "inse" "insåg" "insett" ) ;
 insinuera_vb_1_V2	= mkV2 ( mkV "insinuerar" ) noPrep;
 insinuera_vb_1_VS	= mkVS ( mkV "insinuerar" ) ;
 insistera_vb_1_VS	= mkVS ( mkV "insisterar" ) ;
 insistera_vb_1_VV	= mkV "insisterar" ** {c2 = mkComplement [ "på att" ] ; lock_VV = <>} ;
 insjukna_vb_1_V	= mkV "insjuknar" ;
 inskjuta_vb_1_VS	= mkVS ( mkV "inskjuta" "insköt" "inskjutit" ) ;
 inskraenka_vb_1_11_V2	= mkV2 (partV ( mkV "inskränker" ) "på") noPrep;
 inskraenka_vb_1_12_V2	= mkV2 (reflV ( mkV "inskränker" )) (mkPrep "till");
 inskraenka_vb_1_1_VV	= reflV ( mkV "inskränker" ) ** {c2 = mkComplement [ "till att" ] ; lock_VV = <>} ;
 inspektera_vb_1_V2	= mkV2 ( mkV "inspekterar" ) noPrep;
 inspirera_vb_1_V2	= mkV2 ( mkV "inspirerar" ) noPrep;
 instaella_vb_1_1_V	= reflV ( mkV "inställer" );
 instaella_vb_1_11_V2	= mkV2 ( mkV "inställer" ) noPrep;
 instaella_vb_1_12_V2	= mkV2 (reflV ( mkV "inställer" )) (mkPrep "på");
 instaella_vb_1_1_VV	= reflV ( mkV "inställer" ) ** {c2 = mkComplement [ "på att" ] ; lock_VV = <>} ;
 instaemma_vb_2_1_V2	= mkV2 ( mkV "instämmer" ) (mkPrep "med");
 installera_vb_1_V	= reflV ( mkV "installerar" );
 installera_vb_1_V2	= mkV2 ( mkV "installerar" ) noPrep;
 instruera_vb_1_V2	= mkV2 ( mkV "instruerar" ) noPrep;
 inta_vb_1_V2	= mkV2 ( mkV "inta" "intar" "inta" "intog" "intagit" "intagen" ) noPrep;
 inteckna_vb_1_V2	= mkV2 ( mkV "intecknar" ) noPrep;
 integrera_vb_1_V3	= mkV3 ( mkV "integrerar" ) noPrep (mkPrep "med");
 intensifiera_vb_1_V2	= mkV2 ( mkV "intensifierar" ) noPrep;
 interpellera_vb_1_V2	= mkV2 ( mkV "interpellerar" ) (mkPrep "om");
 intervjua_vb_1_V2	= mkV2 ( mkV "intervjuar" ) noPrep;
 intraeda_vb_1_1_V	= mkV "inträda" "inträdde" "inträtt" ;
 intraeffa_vb_1_1_V	= mkV "inträffar" ;
 intressera_vb_11_V2	= mkV2 ( mkV "intresserar" ) noPrep;
 intressera_vb_12_V2	= mkV2 (reflV ( mkV "intresserar" )) (mkPrep "för");
 introducera_vb_1_V2	= mkV2 ( mkV "introducerar" ) noPrep;
 intyga_vb_1_VS	= mkVS ( mkV "intygar" ) ;
 invadera_vb_1_V2	= mkV2 ( mkV "invaderar" ) noPrep;
 invaenda_vb_1_1_V3	= mkV3 ( mkV "invänder" ) noPrep (mkPrep "mot");
 invaenda_vb_1_1_VS	= mkVS ( mkV "invänder" ) ;
 invaenta_vb_1_1_V2	= mkV2 ( mkV "inväntar" ) noPrep;
 invagga_vb_1_V3	= mkV3 ( mkV "invaggar" ) noPrep (mkPrep "i");
 invandra_vb_1_V	= mkV "invandrar" ;
 inverka_vb_1_V2	= mkV2 ( mkV "inverkar" ) (mkPrep "på");
 investera_vb_1_V2	= mkV2 ( mkV "investerar" ) (mkPrep "i");
 inviga_vb_1_V2	= mkV2 ( mkV "inviger" ) noPrep;
 irra_vb_1_V	= mkV "irrar" ;
 irritera_vb_1_V2	= mkV2 ( mkV "irriterar" ) noPrep;
 iscensaetta_vb_1_1_V2	= mkV2 ( mkV "iscensätta" "iscensätter" "iscensätt" "iscensatte" "iscensatt" "iscensatt" ) noPrep;
 isolera_vb_1_V	= reflV ( mkV "isolerar" );
 isolera_vb_1_V2	= mkV2 ( mkV "isolerar" ) noPrep;
 jaekta_vb_1_1_V	= mkV "jäktar" ;
 jaekta_vb_1_1_V2	= mkV2 ( mkV "jäktar" ) noPrep;
 jaemfoera_vb_1_1_V	= mkV "jämföra" "jämförde" "jämfört" ;
 jaemfoera_vb_1_1_V2	= mkV2 ( mkV "jämföra" "jämförde" "jämfört" ) noPrep;
 jaemfoera_vb_1_1_V3	= mkV3 ( mkV "jämföra" "jämförde" "jämfört" ) noPrep (mkPrep "med");
 jaemka_vb_1_1_V2	= mkV2 ( mkV "jämkar" ) (mkPrep "på");
 jaemka_vb_1_1_V3	= mkV3 ( mkV "jämkar" ) (mkPrep "samman") (mkPrep "och");
 jaemna_vb_1_1_V	= reflV (partV ( mkV "jämnar" ) "ut");
 jaemna_vb_1_11_V2	= mkV2 (partV ( mkV "jämnar" ) "av") noPrep;
 jaemna_vb_1_12_V2	= mkV2 (partV ( mkV "jämnar" ) "till") noPrep;
 jaemstaella_vb_1_1_V2	= mkV2 ( mkV "jämställer" ) noPrep;
 jaesa_vb_1_1_V	= mkV "jäser" ;
 jaga_vb_11_V2	= mkV2 ( mkV "jagar" ) (mkPrep "bort");
 jaga_vb_12_V2	= mkV2 ( mkV "jagar" ) noPrep;
 jaka_vb_1_V2	= mkV2 ( mkV "jakar" ) (mkPrep "till");
 jama_vb_1_V	= mkV "jamar" ;
 jobba_vb_11_V	= mkV "jobbar" ;
 jobba_vb_12_V	= partV ( mkV "jobbar" ) "över";
 jogga_vb_1_V	= mkV "joggar" ;
 jollra_vb_1_V	= mkV "jollrar" ;
 jonglera_vb_1_V2	= mkV2 ( mkV "jonglerar" ) (mkPrep "med");
 jordfaesta_vb_1_1_V2	= mkV2 ( mkV "jordfästa" "jordfäster" "jordfäst" "jordfäste" "jordfäst" "jordfäst" ) noPrep;
 joxa_vb_11_V2	= mkV2 ( mkV "joxar" ) (mkPrep "ihop");
 joxa_vb_12_V2	= mkV2 ( mkV "joxar" ) (mkPrep "med");
 jubla_vb_1_V2	= mkV2 ( mkV "jublar" ) (mkPrep "över");
 jubla_vb_1_VS	= mkVS ( mkV "jublar" ) ;
 jumpa_vb_1_V	= mkV "jumpar" ;
 justera_vb_1_V2	= mkV2 ( mkV "justerar" ) noPrep;
 kaanka_vb_1_1_V2	= mkV2 ( mkV "kånkar" ) (mkPrep "på");
 kackla_vb_1_V	= mkV "kacklar" ;
 kaefta_vb_1_1_V	= partV ( mkV "käftar" ) "emot";
 kaeka_vb_1_1_V2	= mkV2 ( mkV "käkar" ) noPrep;
 kaempa_vb_1_1_V2	= mkV2 ( mkV "kämpar" ) (mkPrep "för");
 kaenna_vb_2_11_V2	= mkV2 ( mkV "känna" "känne" "känt" ) (mkPrep "på");
 kaenna_vb_2_12_V2	= mkV2 ( mkV "känna" "känne" "känt" ) (mkPrep "till");
 kaenna_vb_2_13_V2	= mkV2 ( mkV "känna" "känne" "känt" ) noPrep;
 kaenna_vb_2_14_V2	= mkV2 (partV ( mkV "känna" "känne" "känt" ) "igen") noPrep;
 kaenna_vb_2_1_VS	= mkVS ( mkV "känna" "känne" "känt" ) ;
 kaenneteckna_vb_1_1_V	= mkV "kännetecknar" ;
 kaenneteckna_vb_1_1_V2	= mkV2 ( mkV "kännetecknar" ) noPrep;
 kalasa_vb_1_V2	= mkV2 ( mkV "kalasar" ) (mkPrep "på");
 kalhugga_vb_1_V2	= mkV2 ( mkV "kalhugga" "kalhögg" "kalhuggit" ) noPrep;
 kalka_vb_1_V2	= mkV2 ( mkV "kalkar" ) noPrep;
 kalkera_vb_1_V2	= mkV2 ( mkV "kalkerar" ) noPrep;
 kalkylera_vb_1_V2	= mkV2 ( mkV "kalkylerar" ) (mkPrep "med");
 kalla_vb_11_V2	= mkV2 ( mkV "kallar" ) (mkPrep "på");
 kalla_vb_12_V2	= mkV2 ( mkV "kallar" ) (mkPrep "till");
 kalla_vb_13_V2	= mkV2 ( mkV "kallar" ) noPrep;
 kallna_vb_1_V	= mkV "kallnar" ;
 kamma_vb_1_V	= reflV ( mkV "kammar" );
 kamma_vb_1_V2	= mkV2 ( mkV "kammar" ) noPrep;
 kana_vb_1_V	= mkV "kanar" ;
 kanalisera_vb_1_V2	= mkV2 ( mkV "kanaliserar" ) noPrep;
 kandidera_vb_1_V	= mkV "kandiderar" ;
 kanta_vb_1_V2	= mkV2 ( mkV "kantar" ) noPrep;
 kantra_vb_1_V	= mkV "kantrar" ;
 kapa_vb_1_V2	= mkV2 ( mkV "kapar" ) noPrep;
 kapitulera_vb_1_V	= mkV "kapitulerar" ;
 kapsejsa_vb_1_V	= mkV "kapsejsar" ;
 kartlaegga_vb_1_1_V2	= mkV2 ( mkV "kartlägga" "kartlade" "kartlagt" ) noPrep;
 karva_vb_1_V2	= mkV2 ( mkV "karvar" ) (mkPrep "i");
 kassera_vb_1_V2	= mkV2 ( mkV "kasserar" ) noPrep;
 kasta_vb_1_V	= reflV ( mkV "kastar" );
 kasta_vb_11_V2	= mkV2 ( mkV "kastar" ) noPrep;
 kasta_vb_12_V2	= mkV2 (reflV ( mkV "kastar" )) (mkPrep "över");
 kastrera_vb_1_V2	= mkV2 ( mkV "kastrerar" ) noPrep;
 kavla_vb_1_V2	= mkV2 (partV ( mkV "kavlar" ) "ut") noPrep;
 kedja_vb_1_V2	= mkV2 (partV ( mkV "kedjar" ) "fast") noPrep;
 kela_vb_1_V2	= mkV2 ( mkV "kelar" ) (mkPrep "med");
 kidnappa_vb_1_V2	= mkV2 ( mkV "kidnappar" ) noPrep;
 kika_vb_1_V2	= mkV2 ( mkV "kikar" ) (mkPrep "på");
 kikna_vb_1_V2	= mkV2 ( mkV "kiknar" ) (mkPrep "av");
 kila_vb_2_V	= mkV "kilar" ;
 kila_vb_2_V2	= mkV2 (partV ( mkV "kilar" ) "fast") noPrep;
 kinesa_vb_1_V2	= mkV2 ( mkV "kinesar" ) (mkPrep "hos");
 kisa_vb_1_V2	= mkV2 ( mkV "kisar" ) (mkPrep "mot");
 kissa_vb_1_V	= mkV "kissar" ;
 kittlas_vb_1_V2	= mkV2 ( mkV "kittlas" ) noPrep;
 kivas_vb_1_V2	= mkV2 ( mkV "kivas" ) (mkPrep "med");
 klaa_vb_1_1_V2	= mkV2 ( mkV "klår" ) noPrep;
 klacka_vb_1_V2	= mkV2 ( mkV "klackar" ) noPrep;
 kladda_vb_1_V	= mkV "kladdar" ;
 kladda_vb_1_V2	= mkV2 ( mkV "kladdar" ) (mkPrep "på");
 klae_vb_1_1_V	= reflV ( mkV "klär" );
 klae_vb_1_11_V2	= mkV2 ( mkV "klär" ) (mkPrep "i");
 klae_vb_1_12_V2	= mkV2 ( mkV "klär" ) noPrep;
 klaecka_vb_1_1_V2	= mkV2 ( mkV "kläcker" ) noPrep;
 klaemma_vb_1_11_V2	= mkV2 ( mkV "klämmer" ) (mkPrep "på");
 klaemma_vb_1_12_V2	= mkV2 ( mkV "klämmer" ) noPrep;
 klaemma_vb_1_13_V2	= mkV2 (partV ( mkV "klämmer" ) "i") (mkPrep "med");
 klaemma_vb_1_14_V2	= mkV2 (partV ( mkV "klämmer" ) "till") noPrep;
 klaemma_vb_1_15_V2	= mkV2 (partV ( mkV "klämmer" ) "åt") noPrep;
 klaemta_vb_1_1_V	= mkV "klämtar" ;
 klaenga_vb_2_1_V	= mkV "klänger" ;
 klaettra_vb_1_1_V	= mkV "klättrar" ;
 klaffa_vb_1_V	= mkV "klaffar" ;
 klaga_vb_11_V2	= mkV2 ( mkV "klagar" ) (mkPrep "hos");
 klaga_vb_12_V2	= mkV2 ( mkV "klagar" ) (mkPrep "på");
 klampa_vb_2_V	= mkV "klampar" ;
 klamra_vb_1_V2	= mkV2 (partV (reflV ( mkV "klamrar" )) "fast") (mkPrep "vid");
 klandra_vb_1_V2	= mkV2 ( mkV "klandrar" ) noPrep;
 klappa_vb_21_V	= mkV "klappar" ;
 klappa_vb_22_V	= partV ( mkV "klappar" ) "ihop";
 klappa_vb_2_V2	= mkV2 ( mkV "klappar" ) noPrep;
 klara_vb_2_V2	= mkV2 (partV ( mkV "klarar" ) "av") noPrep;
 klargoera_vb_1_1_V2	= mkV2 ( mkV "klargöra" "klargjorde" "klargjort" ) noPrep;
 klarlaegga_vb_1_1_V2	= mkV2 ( mkV "klarlägga" "klarlade" "klarlagt" ) noPrep;
 klarlaegga_vb_1_1_VS	= mkVS ( mkV "klarlägga" "klarlade" "klarlagt" ) ;
 klassa_vb_1_V3	= mkV3 ( mkV "klassar" ) noPrep (mkPrep "som");
 klassificera_vb_1_V2	= mkV2 ( mkV "klassificerar" ) noPrep;
 kleta_vb_1_V	= reflV ( mkV "kletar" );
 kleta_vb_1_V2	= mkV2 (partV ( mkV "kletar" ) "fast") noPrep;
 klia_vb_21_V	= mkV "kliar" ;
 klia_vb_22_V	= reflV ( mkV "kliar" );
 klia_vb_2_V2	= mkV2 ( mkV "kliar" ) noPrep;
 klibba_vb_1_V	= mkV "klibbar" ;
 klicka_vb_2_V	= mkV "klickar" ;
 klicka_vb_2_V3	= mkV3 ( mkV "klickar" ) noPrep (mkPrep "på");
 klimpa_vb_1_V	= reflV ( mkV "klimpar" );
 klinga_vb_1_V	= mkV "klingar" ;
 klinka_vb_1_V2	= mkV2 ( mkV "klinkar" ) (mkPrep "på");
 klippa_vb_1_V2	= mkV2 ( mkV "klipper" ) noPrep;
 klirra_vb_1_V	= mkV "klirrar" ;
 klistra_vb_1_V2	= mkV2 (partV ( mkV "klistrar" ) "fast") noPrep;
 kliva_vb_1_V	= mkV "kliva" "klev" "klivit" ;
 kloesa_vb_1_1_V2	= mkV2 ( mkV "klöser" ) noPrep;
 klottra_vb_1_V2	= mkV2 ( mkV "klottrar" ) (mkPrep "på");
 klubba_vb_1_V2	= mkV2 ( mkV "klubbar" ) noPrep;
 klucka_vb_1_V	= mkV "kluckar" ;
 klyva_vb_1_V2	= mkV2 ( mkV "klyva" "klöv" "kluvit" ) noPrep;
 knaada_vb_1_1_V2	= mkV2 ( mkV "knådar" ) noPrep;
 knaapa_vb_1_1_V2	= mkV2 ( mkV "knåpar" ) (mkPrep "ihop");
 knacka_vb_1_V	= mkV "knackar" ;
 knacka_vb_1_V2	= mkV2 ( mkV "knackar" ) (mkPrep "på");
 knaea_vb_2_1_V	= mkV "knäar" ;
 knaecka_vb_1_1_V2	= mkV2 ( mkV "knäcker" ) noPrep;
 knaeppa_vb_2_1_V	= mkV "knäpper" ;
 knaeppa_vb_2_11_V2	= mkV2 ( mkV "knäpper" ) noPrep;
 knaeppa_vb_2_12_V2	= mkV2 (partV ( mkV "knäpper" ) "på") noPrep;
 knaka_vb_1_V	= mkV "knakar" ;
 knalla_vb_1_V	= mkV "knallar" ;
 knapra_vb_1_V2	= mkV2 ( mkV "knaprar" ) (mkPrep "på");
 knarka_vb_1_V	= mkV "knarkar" ;
 knarra_vb_1_V	= mkV "knarrar" ;
 knastra_vb_1_V	= mkV "knastrar" ;
 knattra_vb_1_V	= mkV "knattrar" ;
 knega_vb_1_V	= mkV "knegar" ;
 knipa_vb_1_V	= mkV "knipa" "knep" "knipit" ;
 knipa_vb_1_V2	= mkV2 ( mkV "knipa" "knep" "knipit" ) noPrep;
 knipsa_vb_1_V2	= mkV2 (partV ( mkV "knipsar" ) "av") noPrep;
 knixa_vb_1_V	= mkV "knixar" ;
 knocka_vb_1_V2	= mkV2 ( mkV "knockar" ) noPrep;
 knoga_vb_1_V	= mkV "knogar" ;
 knorra_vb_2_V	= mkV "knorrar" ;
 knota_vb_1_V	= mkV "knotar" ;
 knuffas_vb_1_V2	= mkV2 ( mkV "knuffas" ) noPrep;
 knulla_vb_1_V2	= mkV2 (partV ( mkV "knullar" ) "med") noPrep;
 knussla_vb_1_V2	= mkV2 ( mkV "knusslar" ) (mkPrep "med");
 knycka_vb_1_V	= partV ( mkV "knycker" ) "till";
 knycka_vb_1_V2	= mkV2 ( mkV "knycker" ) noPrep;
 knyckla_vb_1_V2	= mkV2 (partV ( mkV "knycklar" ) "ihop") noPrep;
 knyppla_vb_1_V2	= mkV2 ( mkV "knypplar" ) noPrep;
 knysta_vb_1_V	= mkV "knystar" ;
 knyta_vb_1_V2	= mkV2 ( mkV "knyta" "knöt" "knutit" ) noPrep;
 koagulera_vb_1_V	= mkV "koagulerar" ;
 koda_vb_1_V2	= mkV2 (partV ( mkV "kodar" ) "in") noPrep;
 koea_vb_1_1_V	= mkV "köar" ;
 koepa_vb_1_1_V2	= mkV2 (partV ( mkV "köper" ) "in") noPrep;
 koepslaa_vb_1_1_V2	= mkV2 ( mkV "köpslå" "köpslog" "köpslagit" ) (mkPrep "om");
 koera_vb_1_1_V2	= mkV2 ( mkV "köra" "körde" "kört" ) noPrep;
 koka_vb_2_V	= mkV "kokar" ;
 koka_vb_21_V2	= mkV2 ( mkV "kokar" ) (mkPrep "av");
 koka_vb_22_V2	= mkV2 ( mkV "kokar" ) noPrep;
 kola_vb_1_V	= partV ( mkV "kolar" ) "av";
 kolla_vb_11_V2	= mkV2 ( mkV "kollar" ) (mkPrep "på");
 kolla_vb_12_V2	= mkV2 ( mkV "kollar" ) noPrep;
 kollidera_vb_1_V2	= mkV2 ( mkV "kolliderar" ) (mkPrep "med");
 kombinera_vb_1_V3	= mkV3 ( mkV "kombinerar" ) noPrep (mkPrep "med");
 komma_vb_11_V	= mkV "komma" "kom" "kommit" ;
 komma_vb_12_V	= partV ( mkV "komma" "kom" "kommit" ) "bort";
 komma_vb_13_V	= partV ( mkV "komma" "kom" "kommit" ) "upp";
 komma_vb_14_V	= partV ( mkV "komma" "kom" "kommit" ) "ut";
 komma_vb_11_V2	= mkV2 (partV ( mkV "komma" "kom" "kommit" ) "på") noPrep;
 komma_vb_12_V2	= mkV2 (partV ( mkV "komma" "kom" "kommit" ) "åt") noPrep;
 komma_vb_13_V2	= mkV2 (partV ( mkV "komma" "kom" "kommit" ) "över") noPrep;
 komma_vb_1_VV	= mkV "komma" "kom" "kommit" ** {c2 = mkComplement [ " att" ] ; lock_VV = <>} ;
 kommendera_vb_1_V2	= mkV2 ( mkV "kommenderar" ) noPrep;
 kommendera_vb_1_V2S	= mkV2S ( mkV "kommenderar" ) noPrep;
 kommentera_vb_1_V2	= mkV2 ( mkV "kommenterar" ) noPrep;
 kommunicera_vb_2_V2	= mkV2 ( mkV "kommunicerar" ) (mkPrep "med");
 kompensera_vb_1_V3	= mkV3 ( mkV "kompenserar" ) noPrep (mkPrep "för");
 komplettera_vb_1_V2	= mkV2 ( mkV "kompletterar" ) noPrep;
 komplicera_vb_1_V2	= mkV2 ( mkV "komplicerar" ) noPrep;
 komprimera_vb_1_V2	= mkV2 ( mkV "komprimerar" ) noPrep;
 koncentrera_vb_11_V2	= mkV2 ( mkV "koncentrerar" ) noPrep;
 koncentrera_vb_12_V2	= mkV2 (reflV ( mkV "koncentrerar" )) (mkPrep "på");
 koncentrera_vb_1_VV	= reflV ( mkV "koncentrerar" ) ** {c2 = mkComplement [ "på att" ] ; lock_VV = <>} ;
 kondensera_vb_1_V2	= mkV2 ( mkV "kondenserar" ) noPrep;
 konfirmera_vb_1_V2	= mkV2 ( mkV "konfirmerar" ) noPrep;
 konfiskera_vb_1_V2	= mkV2 ( mkV "konfiskerar" ) noPrep;
 konfrontera_vb_1_V2	= mkV2 ( mkV "konfronterar" ) (mkPrep "med");
 konkurrera_vb_1_V2	= mkV2 ( mkV "konkurrerar" ) (mkPrep "med");
 konservera_vb_1_V2	= mkV2 ( mkV "konserverar" ) noPrep;
 konspirera_vb_1_V2	= mkV2 ( mkV "konspirerar" ) (mkPrep "mot");
 konstatera_vb_1_V2	= mkV2 ( mkV "konstaterar" ) noPrep;
 konstatera_vb_1_VS	= mkVS ( mkV "konstaterar" ) ;
 konstra_vb_1_V	= mkV "konstrar" ;
 konstruera_vb_1_V2	= mkV2 ( mkV "konstruerar" ) noPrep;
 konsultera_vb_1_V2	= mkV2 ( mkV "konsulterar" ) noPrep;
 kontakta_vb_1_V2	= mkV2 ( mkV "kontaktar" ) noPrep;
 kontra_vb_1_V	= mkV "kontrar" ;
 kontrollera_vb_1_V2	= mkV2 ( mkV "kontrollerar" ) noPrep;
 kontrollera_vb_1_VS	= mkVS ( mkV "kontrollerar" ) ;
 konvertera_vb_2_V2	= mkV2 ( mkV "konverterar" ) (mkPrep "till");
 koordinera_vb_1_V2	= mkV2 ( mkV "koordinerar" ) noPrep;
 kopiera_vb_1_V2	= mkV2 ( mkV "kopierar" ) noPrep;
 koppla_vb_1_V	= partV ( mkV "kopplar" ) "av";
 koppla_vb_11_V2	= mkV2 ( mkV "kopplar" ) (mkPrep "bort");
 koppla_vb_12_V2	= mkV2 ( mkV "kopplar" ) noPrep;
 kora_vb_1_V3	= mkV3 ( mkV "korar" ) noPrep (mkPrep "till");
 korrigera_vb_1_V2	= mkV2 ( mkV "korrigerar" ) noPrep;
 korsa_vb_1_V2	= mkV2 ( mkV "korsar" ) noPrep;
 korsfaesta_vb_1_1_V2	= mkV2 ( mkV "korsfästa" "korsfäster" "korsfäst" "korsfäste" "korsfäst" "korsfäst" ) noPrep;
 kosta_vb_1_V	= mkV "kostar" ;
 kraama_vb_2_1_V	= reflV ( mkV "kråmar" );
 kraangla_vb_1_1_V	= mkV "krånglar" ;
 kraela_vb_1_1_V	= mkV "krälar" ;
 kraenga_vb_2_1_V	= mkV "kränger" ;
 kraenga_vb_2_1_V2	= mkV2 ( mkV "kränger" ) noPrep;
 kraenga_vb_2_1_V3	= mkV3 ( mkV "kränger" ) noPrep (mkPrep "över");
 kraenka_vb_1_1_V2	= mkV2 ( mkV "kränker" ) noPrep;
 kraevas_vb_1_1_V2	= mkV2 ( mkV "krävs" ) noPrep;
 kraevas_vb_1_1_V3	= mkV3 ( mkV "krävs" ) noPrep (mkPrep "på");
 kraevas_vb_1_1_VS	= mkVS ( mkV "krävs" ) ;
 krafsa_vb_11_V2	= mkV2 ( mkV "krafsar" ) (mkPrep "på");
 krafsa_vb_12_V2	= mkV2 ( mkV "krafsar" ) noPrep;
 krama_vb_11_V2	= mkV2 ( mkV "kramar" ) noPrep;
 krama_vb_12_V2	= mkV2 (partV ( mkV "kramar" ) "ur") noPrep;
 krascha_vb_1_V	= mkV "kraschar" ;
 kratta_vb_1_V2	= mkV2 ( mkV "krattar" ) noPrep;
 kravla_vb_1_V	= mkV "kravlar" ;
 kraxa_vb_1_V	= mkV "kraxar" ;
 kretsa_vb_1_V2	= mkV2 ( mkV "kretsar" ) (mkPrep "kring");
 kriga_vb_1_V2	= mkV2 ( mkV "krigar" ) (mkPrep "med");
 kriminalisera_vb_1_V2	= mkV2 ( mkV "kriminaliserar" ) noPrep;
 kringgaa_vb_1_1_V2	= mkV2 ( mkV "kringgå" "kringgår" "kringgå" "kringgick" "kringgått" "kringgången" ) noPrep;
 kringgaerda_vb_1_1_V2	= mkV2 ( mkV "kringgärdar" ) noPrep;
 krocka_vb_1_V2	= mkV2 ( mkV "krockar" ) (mkPrep "med");
 kroeka_vb_1_11_V	= mkV "kröker" ;
 kroeka_vb_1_12_V	= reflV ( mkV "kröker" );
 kroeka_vb_1_1_V2	= mkV2 ( mkV "kröker" ) noPrep;
 kroeka_vb_2_1_V	= mkV "krökar" ;
 kroena_vb_1_1_V2	= mkV2 ( mkV "kröna" "kröner" "krön" "krönte" "krönt" "krönt" ) noPrep;
 krokna_vb_1_V	= mkV "kroknar" ;
 krossa_vb_1_V2	= mkV2 ( mkV "krossar" ) noPrep;
 krusa_vb_11_V2	= mkV2 ( mkV "krusar" ) noPrep;
 krusa_vb_12_V2	= mkV2 (partV ( mkV "krusar" ) "för") noPrep;
 krydda_vb_11_V2	= mkV2 ( mkV "kryddar" ) (mkPrep "med");
 krydda_vb_12_V2	= mkV2 ( mkV "kryddar" ) noPrep;
 krylla_vb_1_V	= mkV "kryllar" ;
 krympa_vb_1_V	= mkV "krymper" ;
 krypa_vb_1_V	= mkV "krypa" "kröp" "krupit" ;
 kryssa_vb_2_V	= mkV "kryssar" ;
 kryssa_vb_2_V2	= mkV2 (partV ( mkV "kryssar" ) "för") noPrep;
 krysta_vb_1_V	= mkV "krystar" ;
 kugga_vb_1_V2	= mkV2 ( mkV "kuggar" ) noPrep;
 kullkasta_vb_1_V2	= mkV2 ( mkV "kullkastar" ) noPrep;
 kulminera_vb_1_V	= mkV "kulminerar" ;
 kulturminnesmaerka_vb_1_1_V2	= mkV2 ( mkV "kulturminnesmärker" ) noPrep;
 kungoera_vb_1_1_V2	= mkV2 ( mkV "kungöra" "kungjorde" "kungjort" ) noPrep;
 kungoera_vb_1_1_VS	= mkVS ( mkV "kungöra" "kungjorde" "kungjort" ) ;
 kura_vb_1_V	= reflV (partV ( mkV "kurar" ) "ihop");
 kurera_vb_1_V2	= mkV2 ( mkV "kurerar" ) noPrep;
 kurra_vb_1_V	= mkV "kurrar" ;
 kuta_vb_1_V	= mkV "kutar" ;
 kuttra_vb_1_V2	= mkV2 ( mkV "kuttrar" ) (mkPrep "med");
 kuva_vb_1_V2	= mkV2 ( mkV "kuvar" ) noPrep;
 kvacka_vb_1_V	= mkV "kvackar" ;
 kvadda_vb_1_V2	= mkV2 ( mkV "kvaddar" ) noPrep;
 kvaeka_vb_1_1_V	= mkV "kväker" ;
 kvaelja_vb_1_1_V2	= mkV2 ( mkV "kvälja" "kvalde" "kvalt" ) noPrep;
 kvaesa_vb_1_1_V2	= mkV2 ( mkV "kväser" ) noPrep;
 kvaeva_vb_1_1_V	= mkV "kväver" ;
 kvaeva_vb_1_1_V2	= mkV2 ( mkV "kväver" ) noPrep;
 kvala_vb_1_V2	= mkV2 ( mkV "kvalar" ) (mkPrep "till");
 kvalificera_vb_1_V2	= mkV2 (reflV ( mkV "kvalificerar" )) (mkPrep "för");
 kvarstaa_vb_1_1_V	= mkV "kvarstå" "kvarstod" "kvarstått" ;
 kverulera_vb_1_V	= mkV "kverulerar" ;
 kvicka_vb_1_V	= reflV ( mkV "kvickar" );
 kvida_vb_1_V	= mkV "kvida" "kved" "kvidit" ;
 kvitta_vb_2_V3	= mkV3 ( mkV "kvittar" ) noPrep (mkPrep "mot");
 kvittera_vb_1_V	= mkV "kvitterar" ;
 kvittera_vb_1_V2	= mkV2 ( mkV "kvitterar" ) noPrep;
 kvittra_vb_1_V	= mkV "kvittrar" ;
 kvotera_vb_1_V2	= mkV2 ( mkV "kvoterar" ) noPrep;
 kyla_vb_1_V2	= mkV2 (partV ( mkV "kyler" ) "ner") noPrep;
 kyssa_vb_1_V2	= mkV2 ( mkV "kysser" ) noPrep;
 laana_vb_1_1_V2	= mkV2 ( mkV "lånar" ) noPrep;
 laana_vb_1_1_V3	= mkV3 ( mkV "lånar" ) noPrep noPrep;
 laasa_vb_1_1_V2	= mkV2 ( mkV "låser" ) noPrep;
 laata_vb_1_1_V	= mkV "låta" "lät" "låtit" ;
 laata_vb_1_1_V2	= mkV2 ( mkV "låta" "lät" "låtit" ) noPrep;
 laata_vb_1_1_VA	= mkVA ( mkV "låta" "lät" "låtit" ) ;
 laata_vb_1_1_VV	= mkV "låta" "lät" "låtit" ** {c2 = mkComplement [ ] ; lock_VV = <>} ;
 laatsas_vb_1_1_V	= mkV "låtsas" ;
 laatsas_vb_1_1_VS	= mkVS ( mkV "låtsas" ) ;
 laatsas_vb_1_1_VV	= mkV "låtsas" ** {c2 = mkComplement [ ] ; lock_VV = <>} ;
 laborera_vb_1_V2	= mkV2 ( mkV "laborerar" ) (mkPrep "med");
 laborera_vb_1_VV	= mkV "laborerar" ** {c2 = mkComplement [ "med att" ] ; lock_VV = <>} ;
 lacka_vb_1_V2	= mkV2 ( mkV "lackar" ) noPrep;
 lackera_vb_1_V2	= mkV2 ( mkV "lackerar" ) noPrep;
 ladda_vb_1_V	= partV ( mkV "laddar" ) "upp";
 ladda_vb_1_V2	= mkV2 ( mkV "laddar" ) noPrep;
 laecka_vb_1_1_V2	= mkV2 ( mkV "läcker" ) noPrep;
 laegga_vb_1_11_V	= partV ( mkV "lägga" "lade" "lagt" ) "ut";
 laegga_vb_1_12_V	= reflV ( mkV "lägga" "lade" "lagt" );
 laegga_vb_1_11_V2	= mkV2 ( mkV "lägga" "lade" "lagt" ) noPrep;
 laegga_vb_1_12_V2	= mkV2 (partV ( mkV "lägga" "lade" "lagt" ) "av") (mkPrep "med");
 laegga_vb_1_13_V2	= mkV2 (partV ( mkV "lägga" "lade" "lagt" ) "fram") noPrep;
 laegga_vb_1_14_V2	= mkV2 (partV ( mkV "lägga" "lade" "lagt" ) "in") noPrep;
 laegga_vb_1_15_V2	= mkV2 (partV ( mkV "lägga" "lade" "lagt" ) "ner") noPrep;
 laegga_vb_1_16_V2	= mkV2 (partV ( mkV "lägga" "lade" "lagt" ) "om") noPrep;
 laegga_vb_1_17_V2	= mkV2 (partV (reflV ( mkV "lägga" "lade" "lagt" )) "i") noPrep;
 laegga_vb_1_1_VV	= partV ( mkV "lägga" "lade" "lagt" ) "av" ** {c2 = mkComplement [ "med att" ] ; lock_VV = <>} ;
 laeka_vb_1_1_V	= mkV "läker" ;
 laeka_vb_1_1_V2	= mkV2 ( mkV "läker" ) noPrep;
 laemna_vb_1_1_V2	= mkV2 ( mkV "lämnar" ) noPrep;
 laemna_vb_1_1_V2A	= mkV2A ( mkV "lämnar" ) noPrep;
 laemna_vb_1_1_V3	= mkV3 ( mkV "lämnar" ) noPrep (mkPrep "till");
 laempa_vb_1_1_V2	= mkV2 (reflV ( mkV "lämpar" )) (mkPrep "för");
 laengta_vb_1_1_V	= mkV "längtar" ;
 laengta_vb_1_1_V2	= mkV2 ( mkV "längtar" ) (mkPrep "efter");
 laengta_vb_1_1_VS	= mkVS ( mkV "längtar" ) ;
 laensa_vb_1_1_V2	= mkV2 ( mkV "länsar" ) noPrep;
 laeppja_vb_1_1_V2	= mkV2 ( mkV "läppjar" ) (mkPrep "på");
 laera_vb_1_1_V2	= mkV2 (reflV ( mkV "lära" "lärde" "lärt" )) noPrep;
 laera_vb_1_1_V3	= mkV3 ( mkV "lära" "lärde" "lärt" ) noPrep noPrep;
 laera_vb_1_11_VV	= mkV "lära" "lärde" "lärt" ** {c2 = mkComplement [ " att" ] ; lock_VV = <>} ;
 laera_vb_1_12_VV	= mkV "lära" "lärde" "lärt" ** {c2 = mkComplement [ ] ; lock_VV = <>} ;
 laera_vb_1_13_VV	= reflV ( mkV "lära" "lärde" "lärt" ) ** {c2 = mkComplement [ " att" ] ; lock_VV = <>} ;
 laesa_vb_1_1_V2	= mkV2 ( mkV "läser" ) noPrep;
 laeska_vb_1_1_V	= reflV ( mkV "läskar" );
 laeska_vb_1_1_V3	= mkV3 ( reflV ( mkV "läskar" ) ) noPrep (mkPrep "med");
 laespa_vb_1_1_V	= mkV "läspar" ;
 laetta_vb_2_1_V	= mkV "lättar" ;
 laetta_vb_2_11_V2	= mkV2 ( mkV "lättar" ) (mkPrep "upp");
 laetta_vb_2_12_V2	= mkV2 (partV ( mkV "lättar" ) "på") noPrep;
 laettna_vb_1_1_V	= mkV "lättnar" ;
 laga_vb_1_V2	= mkV2 ( mkV "lagar" ) noPrep;
 lagfaesta_vb_1_1_V2	= mkV2 ( mkV "lagfästa" "lagfäster" "lagfäst" "lagfäste" "lagfäst" "lagfäst" ) noPrep;
 lagra_vb_1_V2	= mkV2 ( mkV "lagrar" ) noPrep;
 lagstifta_vb_1_V2	= mkV2 ( mkV "lagstiftar" ) (mkPrep "om");
 lamslaa_vb_1_1_V2	= mkV2 ( mkV "lamslå" "lamslog" "lamslagit" ) noPrep;
 landa_vb_2_V	= mkV "landar" ;
 landsaetta_vb_1_1_V2	= mkV2 ( mkV "landsätta" "landsätter" "landsätt" "landsatte" "landsatt" "landsatt" ) noPrep;
 landstiga_vb_1_V	= mkV "landstiga" "landsteg" "landstigit" ;
 langa_vb_1_V2	= mkV2 ( mkV "langar" ) noPrep;
 lansera_vb_1_V2	= mkV2 ( mkV "lanserar" ) noPrep;
 lapa_vb_1_V2	= mkV2 ( mkV "lapar" ) noPrep;
 lappa_vb_1_V2	= mkV2 (partV ( mkV "lappar" ) "ihop") noPrep;
 larma_vb_2_V	= mkV "larmar" ;
 larma_vb_2_V2	= mkV2 ( mkV "larmar" ) noPrep;
 lassa_vb_1_V2	= mkV2 ( mkV "lassar" ) noPrep;
 lasta_vb_1_V2	= mkV2 ( mkV "lastar" ) noPrep;
 lasta_vb_1_V3	= mkV3 ( mkV "lastar" ) noPrep (mkPrep "för");
 le_vb_11_V2	= mkV2 ( mkV "le" "log" "lett" ) (mkPrep "mot");
 le_vb_12_V2	= mkV2 ( mkV "le" "log" "lett" ) (mkPrep "åt");
 leda_vb_1_V	= mkV "leda" "ledde" "lett" ;
 leda_vb_11_V2	= mkV2 ( mkV "leda" "ledde" "lett" ) (mkPrep "över");
 leda_vb_12_V2	= mkV2 ( mkV "leda" "ledde" "lett" ) noPrep;
 leda_vb_13_V2	= mkV2 (partV ( mkV "leda" "ledde" "lett" ) "till") noPrep;
 legitimera_vb_1_V	= reflV ( mkV "legitimerar" );
 leja_vb_1_V2	= mkV2 ( mkV "leja" "lejde" "lejt" ) noPrep;
 leka_vb_1_V2	= mkV2 ( mkV "leker" ) noPrep;
 lemlaesta_vb_1_1_V2	= mkV2 ( mkV "lemlästar" ) noPrep;
 leta_vb_11_V2	= mkV2 ( mkV "letar" ) (mkPrep "efter");
 leta_vb_12_V2	= mkV2 ( mkV "letar" ) (mkPrep "rätt på");
 leta_vb_13_V2	= mkV2 ( mkV "letar" ) (mkPrep "rätt");
 leva_vb_11_V	= mkV "lever" ;
 leva_vb_12_V	= partV ( mkV "lever" ) "ut";
 leverera_vb_1_V2	= mkV2 ( mkV "levererar" ) noPrep;
 levras_vb_1_V	= reflV ( mkV "levras" );
 lida_vb_1_V	= mkV "lida" "led" "lidit" ;
 liera_vb_1_V2	= mkV2 (reflV ( mkV "lierar" )) (mkPrep "med");
 lifta_vb_1_V2	= mkV2 ( mkV "liftar" ) (mkPrep "med");
 ligga_vb_11_V	= mkV "ligga" "låg" "legat" ;
 ligga_vb_12_V	= partV ( mkV "ligga" "låg" "legat" ) "i";
 ligga_vb_13_V	= partV ( mkV "ligga" "låg" "legat" ) "över";
 likna_vb_1_V2	= mkV2 ( mkV "liknar" ) noPrep;
 likvidera_vb_1_V2	= mkV2 ( mkV "likviderar" ) noPrep;
 limma_vb_1_V2	= mkV2 ( mkV "limmar" ) noPrep;
 linda_vb_1_V2	= mkV2 ( mkV "lindar" ) noPrep;
 linda_vb_1_V3	= mkV3 ( mkV "lindar" ) noPrep (mkPrep "kring");
 lindra_vb_1_V2	= mkV2 ( mkV "lindrar" ) noPrep;
 linjera_vb_1_V2	= mkV2 ( mkV "linjerar" ) noPrep;
 lipa_vb_1_V	= mkV "lipar" ;
 lira_vb_1_V2	= mkV2 ( mkV "lirar" ) noPrep;
 lirka_vb_1_V2	= mkV2 ( mkV "lirkar" ) (mkPrep "med");
 lisma_vb_1_V	= mkV "lismar" ;
 lista_vb_1_V2	= mkV2 (partV ( mkV "listar" ) "ut") noPrep;
 lita_vb_1_V2	= mkV2 (partV ( mkV "litar" ) "på") noPrep;
 lita_vb_1_VS	= mkVS (partV ( mkV "litar" ) "på") ;
 ljuda_vb_1_V	= mkV "ljuda" "ljöd" "ljudit" ;
 ljuga_vb_1_V	= mkV "ljuga" "ljög" "ljugit" ;
 ljusna_vb_1_V	= mkV "ljusnar" ;
 locka_vb_1_V	= mkV "lockar" ;
 locka_vb_1_V2	= mkV2 ( mkV "lockar" ) (mkPrep "på");
 loeddra_vb_1_1_V	= mkV "löddrar" ;
 loena_vb_1_1_V	= reflV ( mkV "lönar" );
 loepa_vb_2_1_V	= mkV "löper" ;
 loesa_vb_1_11_V2	= mkV2 ( mkV "löser" ) (mkPrep "upp");
 loesa_vb_1_12_V2	= mkV2 ( mkV "löser" ) (mkPrep "ut");
 loesa_vb_1_13_V2	= mkV2 ( mkV "löser" ) noPrep;
 lokalisera_vb_1_V2	= mkV2 ( mkV "lokaliserar" ) noPrep;
 lossa_vb_11_V2	= mkV2 ( mkV "lossar" ) noPrep;
 lossa_vb_12_V2	= mkV2 (partV ( mkV "lossar" ) "på") noPrep;
 lossna_vb_1_V	= mkV "lossnar" ;
 lotsa_vb_1_V2	= mkV2 ( mkV "lotsar" ) noPrep;
 lotta_vb_1_V2	= mkV2 ( mkV "lottar" ) (mkPrep "om");
 lova_vb_2_V	= mkV "lovar" ;
 lova_vb_2_V2	= mkV2 ( mkV "lovar" ) noPrep;
 lova_vb_2_VV	= mkV "lovar" ** {c2 = mkComplement [ " att" ] ; lock_VV = <>} ;
 lovorda_vb_1_V2	= mkV2 ( mkV "lovordar" ) noPrep;
 luckra_vb_1_V2	= mkV2 ( mkV "luckrar" ) noPrep;
 lufsa_vb_1_V	= mkV "lufsar" ;
 lufta_vb_1_V2	= mkV2 ( mkV "luftar" ) noPrep;
 luggas_vb_1_V2	= mkV2 ( mkV "luggas" ) noPrep;
 lugna_vb_1_V	= reflV ( mkV "lugnar" );
 lugna_vb_1_V2	= mkV2 ( mkV "lugnar" ) noPrep;
 lukta_vb_2_V	= mkV "luktar" ;
 lukta_vb_21_V2	= mkV2 ( mkV "luktar" ) (mkPrep "på");
 lukta_vb_22_V2	= mkV2 ( mkV "luktar" ) noPrep;
 lunka_vb_1_V	= mkV "lunkar" ;
 luras_vb_11_V	= mkV "luras" ;
 luras_vb_12_V	= reflV ( mkV "luras" );
 luras_vb_1_V2	= mkV2 ( mkV "luras" ) noPrep;
 luska_vb_1_V2	= mkV2 (partV ( mkV "luskar" ) "ut") noPrep;
 lussa_vb_1_V2	= mkV2 (partV ( mkV "lussar" ) "för") noPrep;
 luta_vb_2_V	= mkV "lutar" ;
 luta_vb_21_V2	= mkV2 ( mkV "lutar" ) noPrep;
 luta_vb_22_V2	= mkV2 (reflV ( mkV "lutar" )) (mkPrep "mot");
 lyckas_vb_1_V	= mkV "lyckas" ;
 lyckas_vb_1_V2	= mkV2 ( mkV "lyckas" ) (mkPrep "med");
 lyckas_vb_11_VV	= mkV "lyckas" ** {c2 = mkComplement [ " att" ] ; lock_VV = <>} ;
 lyckas_vb_12_VV	= mkV "lyckas" ** {c2 = mkComplement [ "med att" ] ; lock_VV = <>} ;
 lyda_vb_1_V	= mkV "lyda" "lydde" "lytt" ;
 lyda_vb_1_V2	= mkV2 ( mkV "lyda" "lydde" "lytt" ) noPrep;
 lyfta_vb_1_V	= mkV "lyfta" "lyfter" "lyft" "lyfte" "lyft" "lyft" ;
 lyfta_vb_11_V2	= mkV2 ( mkV "lyfta" "lyfter" "lyft" "lyfte" "lyft" "lyft" ) noPrep;
 lyfta_vb_12_V2	= mkV2 (partV ( mkV "lyfta" "lyfter" "lyft" "lyfte" "lyft" "lyft" ) "på") noPrep;
 lyncha_vb_1_V2	= mkV2 ( mkV "lynchar" ) noPrep;
 lysa_vb_2_V	= mkV "lyser" ;
 lysa_vb_2_V2	= mkV2 ( mkV "lyser" ) (mkPrep "på");
 lyssna_vb_11_V2	= mkV2 ( mkV "lyssnar" ) (mkPrep "på");
 lyssna_vb_12_V2	= mkV2 ( mkV "lyssnar" ) (mkPrep "till");
 lystra_vb_1_V2	= mkV2 ( mkV "lystrar" ) (mkPrep "till");
 maa_vb_1_1_V	= mkV "mår" ;
 maa_vb_1_1_VV	= mkV "mår" ** {c2 = mkComplement [ ] ; lock_VV = <>} ;
 maala_vb_1_1_V2A	= mkV2A ( mkV "målar" ) noPrep;
 maana_vb_1_1_V2	= mkV2 (partV ( mkV "månar" ) "om") noPrep;
 maekta_vb_1_1_VV	= partV ( mkV "mäktar" ) "inte" ** {c2 = mkComplement [ ] ; lock_VV = <>} ;
 maerka_vb_1_1_V2	= mkV2 ( mkV "märker" ) noPrep;
 maerka_vb_1_1_VQ	= mkVQ ( mkV "märker" ) ;
 maerka_vb_1_1_VS	= mkVS ( mkV "märker" ) ;
 maestra_vb_1_1_V2	= mkV2 ( mkV "mästrar" ) noPrep;
 maeta_vb_1_1_V	= mkV "mäter" ;
 maeta_vb_1_1_V2	= mkV2 ( mkV "mäter" ) noPrep;
 maetta_vb_1_1_V2	= mkV2 ( mkV "mättar" ) noPrep;
 magnetisera_vb_1_V2	= mkV2 ( mkV "magnetiserar" ) noPrep;
 magra_vb_1_V	= mkV "magrar" ;
 maka_vb_1_V	= reflV ( mkV "makar" );
 maka_vb_11_V2	= mkV2 ( mkV "makar" ) (mkPrep "på");
 maka_vb_12_V2	= mkV2 ( mkV "makar" ) (mkPrep "undan");
 makulera_vb_1_V2	= mkV2 ( mkV "makulerar" ) noPrep;
 mala_vb_1_V2	= mkV2 ( mkV "maler" ) noPrep;
 mana_vb_1_V2	= mkV2 ( mkV "manar" ) (mkPrep "till");
 mangla_vb_1_V2	= mkV2 ( mkV "manglar" ) noPrep;
 mankera_vb_1_V	= mkV "mankerar" ;
 manoevrera_vb_1_1_V	= mkV "manövrerar" ;
 manoevrera_vb_1_1_V2	= mkV2 ( mkV "manövrerar" ) noPrep;
 markera_vb_1_V2	= mkV2 ( mkV "markerar" ) noPrep;
 markera_vb_1_VS	= mkVS ( mkV "markerar" ) ;
 marschera_vb_1_V	= mkV "marscherar" ;
 masa_vb_1_V	= reflV ( mkV "masar" );
 maska_vb_2_V	= mkV "maskar" ;
 maskera_vb_1_V	= reflV ( mkV "maskerar" );
 maskera_vb_1_V2	= mkV2 (reflV ( mkV "maskerar" )) noPrep;
 massakrera_vb_1_V2	= mkV2 ( mkV "massakrerar" ) noPrep;
 massera_vb_1_V2	= mkV2 ( mkV "masserar" ) noPrep;
 masturbera_vb_1_V	= mkV "masturberar" ;
 mata_vb_11_V2	= mkV2 ( mkV "matar" ) (mkPrep "fram");
 mata_vb_12_V2	= mkV2 ( mkV "matar" ) (mkPrep "in");
 mata_vb_13_V2	= mkV2 ( mkV "matar" ) noPrep;
 matcha_vb_1_V2	= mkV2 ( mkV "matchar" ) noPrep;
 mattas_vb_1_V	= mkV "mattas" ;
 meddela_vb_1_V2	= mkV2 ( mkV "meddelar" ) noPrep;
 meddela_vb_1_V2S	= mkV2S ( mkV "meddelar" ) noPrep;
 medfoelja_vb_1_1_V2	= mkV2 ( mkV "medfölja" "medföljde" "medföljt" ) noPrep;
 medfoera_vb_1_1_V2	= mkV2 ( mkV "medföra" "medförde" "medfört" ) noPrep;
 medge_vb_1_V2	= mkV2 ( mkV "medge" "medger" "medge" "medgav" "medgett" "medgiven" ) noPrep;
 medge_vb_1_VS	= mkVS ( mkV "medge" "medger" "medge" "medgav" "medgett" "medgiven" ) ;
 meditera_vb_1_V	= mkV "mediterar" ;
 medla_vb_1_V2	= mkV2 ( mkV "medlar" ) (mkPrep "mellan");
 medverka_vb_11_V2	= mkV2 ( mkV "medverkar" ) (mkPrep "i");
 medverka_vb_12_V2	= mkV2 ( mkV "medverkar" ) (mkPrep "till");
 medverka_vb_1_VS	= mkVS ( mkV "medverkar" ) ;
 meja_vb_1_V2	= mkV2 ( mkV "mejar" ) noPrep;
 mejsla_vb_1_V2	= mkV2 ( mkV "mejslar" ) noPrep;
 mellanlanda_vb_1_V	= mkV "mellanlandar" ;
 mena_vb_1_V2	= mkV2 ( mkV "menar" ) noPrep;
 mena_vb_1_VS	= mkVS ( mkV "menar" ) ;
 meritera_vb_1_V2	= mkV2 (reflV ( mkV "meriterar" )) (mkPrep "för");
 meta_vb_1_V2	= mkV2 ( mkV "metar" ) noPrep;
 mildra_vb_1_V2	= mkV2 ( mkV "mildrar" ) noPrep;
 minna_vb_1_V2	= mkV2 ( mkV "minna" "minde" "mint" ) noPrep;
 minna_vb_1_VS	= mkVS ( mkV "minna" "minde" "mint" ) ;
 minska_vb_1_V	= mkV "minskar" ;
 minska_vb_1_V2	= mkV2 (partV ( mkV "minskar" ) "på") noPrep;
 missbruka_vb_1_V2	= mkV2 ( mkV "missbrukar" ) noPrep;
 missfoerstaa_vb_1_1_V2	= mkV2 ( mkV "missförstå" "missförstod" "missförstådd" ) noPrep;
 missgynna_vb_1_V2	= mkV2 ( mkV "missgynnar" ) noPrep;
 misshandla_vb_1_V2	= mkV2 ( mkV "misshandlar" ) noPrep;
 misskoeta_vb_1_1_V2	= mkV2 ( mkV "missköter" ) noPrep;
 missleda_vb_1_V2	= mkV2 ( mkV "missleda" "missledde" "misslett" ) noPrep;
 misslyckas_vb_1_V2	= mkV2 ( mkV "misslyckas" ) (mkPrep "med");
 misslyckas_vb_1_VV	= mkV "misslyckas" ** {c2 = mkComplement [ "med att" ] ; lock_VV = <>} ;
 missta_vb_1_V	= reflV ( mkV "missta" "misstar" "missta" "misstog" "misstagit" "misstagen" );
 misstaenka_vb_1_1_V2	= mkV2 ( mkV "misstänker" ) noPrep;
 misstaenka_vb_1_1_VS	= mkVS ( mkV "misstänker" ) ;
 misstro_vb_1_V2	= mkV2 ( mkV "misstror" ) noPrep;
 misstroesta_vb_1_1_V2	= mkV2 ( mkV "misströstar" ) (mkPrep "om");
 misstroesta_vb_1_1_VV	= mkV "misströstar" ** {c2 = mkComplement [ "om att" ] ; lock_VV = <>} ;
 missunna_vb_1_V3	= mkV3 ( mkV "missunnar" ) noPrep noPrep;
 missuppfatta_vb_1_V2	= mkV2 ( mkV "missuppfattar" ) noPrep;
 mista_vb_1_V2	= mkV2 ( mkV "mista" "mister" "mist" "mistade" "mist" "mistad" ) noPrep;
 mjuka_vb_1_V	= reflV (partV ( mkV "mjukar" ) "upp");
 mjuka_vb_1_V2	= mkV2 (partV ( mkV "mjukar" ) "upp") noPrep;
 mjuklanda_vb_1_V	= mkV "mjuklandar" ;
 mjukna_vb_1_V	= mkV "mjuknar" ;
 mobilisera_vb_1_V2	= mkV2 ( mkV "mobiliserar" ) noPrep;
 mocka_vb_1_V2	= mkV2 ( mkV "mockar" ) noPrep;
 modernisera_vb_1_V2	= mkV2 ( mkV "moderniserar" ) noPrep;
 modifiera_vb_1_V2	= mkV2 ( mkV "modifierar" ) noPrep;
 moeblera_vb_1_1_V	= partV ( mkV "möblerar" ) "om";
 moeblera_vb_1_11_V2	= mkV2 ( mkV "möblerar" ) noPrep;
 moeblera_vb_1_12_V2	= mkV2 (partV ( mkV "möblerar" ) "om") (mkPrep "i");
 moegla_vb_1_1_V	= mkV "möglar" ;
 moejliggoera_vb_1_1_V2	= mkV2 ( mkV "möjliggöra" "möjliggjorde" "möjliggjort" ) noPrep;
 moejliggoera_vb_1_1_VS	= mkVS ( mkV "möjliggöra" "möjliggjorde" "möjliggjort" ) ;
 moenstra_vb_1_1_V	= mkV "mönstrar" ;
 moenstra_vb_1_1_V2	= mkV2 ( mkV "mönstrar" ) noPrep;
 moerda_vb_1_1_V2	= mkV2 ( mkV "mördar" ) noPrep;
 moeta_vb_1_1_V2	= mkV2 ( mkV "möter" ) noPrep;
 mogna_vb_1_V	= mkV "mognar" ;
 mojna_vb_1_V	= mkV "mojnar" ;
 mola_vb_1_V	= mkV "molar" ;
 moralisera_vb_1_V	= mkV "moraliserar" ;
 morra_vb_1_V	= mkV "morrar" ;
 mosa_vb_1_V2	= mkV2 ( mkV "mosar" ) noPrep;
 mota_vb_1_V2	= mkV2 ( mkV "motar" ) noPrep;
 motarbeta_vb_1_V2	= mkV2 ( mkV "motarbetar" ) noPrep;
 motivera_vb_1_V2	= mkV2 ( mkV "motiverar" ) noPrep;
 motivera_vb_1_VS	= mkVS ( mkV "motiverar" ) ;
 motsaega_vb_1_1_V2	= mkV2 ( mkV "motsäga" "motsade" "motsagt" ) noPrep;
 motstaa_vb_1_1_V2	= mkV2 ( mkV "motstå" "motstod" "motstått" ) noPrep;
 motsvara_vb_1_V2	= mkV2 ( mkV "motsvarar" ) noPrep;
 motta_vb_1_V2	= mkV2 ( mkV "motta" "mottar" "motta" "mottog" "mottagit" "mottagen" ) noPrep;
 motverka_vb_1_V2	= mkV2 ( mkV "motverkar" ) noPrep;
 mucka_vb_1_V	= mkV "muckar" ;
 muddra_vb_1_V2	= mkV2 ( mkV "muddrar" ) noPrep;
 mulna_vb_1_V	= mkV "mulnar" ;
 multiplicera_vb_1_V3	= mkV3 ( mkV "multiplicerar" ) noPrep (mkPrep "med");
 multna_vb_1_V	= mkV "multnar" ;
 mumla_vb_1_V	= mkV "mumlar" ;
 mumsa_vb_1_V	= mkV "mumsar" ;
 mura_vb_1_V2	= mkV2 ( mkV "murar" ) noPrep;
 muta_vb_1_V2	= mkV2 ( mkV "mutar" ) noPrep;
 muttra_vb_1_V	= mkV "muttrar" ;
 mygla_vb_1_V	= mkV "myglar" ;
 mynna_vb_1_V2	= mkV2 (partV ( mkV "mynnar" ) "ut") (mkPrep "i");
 mynta_vb_1_V2	= mkV2 ( mkV "myntar" ) noPrep;
 mysa_vb_1_V	= mkV "myser" ;
 naa_vb_1_1_V	= mkV "når" ;
 naa_vb_1_11_V2	= mkV2 ( mkV "når" ) noPrep;
 naa_vb_1_12_V2	= mkV2 (partV ( mkV "når" ) "till") noPrep;
 nacka_vb_1_V2	= mkV2 ( mkV "nackar" ) noPrep;
 naemna_vb_1_1_V2	= mkV2 ( mkV "nämner" ) noPrep;
 naemna_vb_1_1_V2S	= mkV2S ( mkV "nämner" ) (mkPrep "för");
 naerma_vb_1_1_V2	= mkV2 (reflV ( mkV "närmar" )) noPrep;
 nagelfara_vb_1_V2	= mkV2 ( mkV "nagelfara" "nagelfor" "nagelfarit" ) noPrep;
 nalkas_vb_1_V	= mkV "nalkas" ;
 nalla_vb_1_V2	= mkV2 ( mkV "nallar" ) noPrep;
 namna_vb_1_V2	= mkV2 ( mkV "namnar" ) noPrep;
 nationalisera_vb_1_V2	= mkV2 ( mkV "nationaliserar" ) noPrep;
 nattas_vb_1_V2	= mkV2 ( mkV "nattas" ) noPrep;
 negligera_vb_1_V2	= mkV2 ( mkV "negligerar" ) noPrep;
 negligera_vb_1_VS	= mkVS ( mkV "negligerar" ) ;
 neka_vb_1_V2	= mkV2 ( mkV "nekar" ) (mkPrep "till");
 nia_vb_1_V2	= mkV2 ( mkV "niar" ) noPrep;
 nicka_vb_21_V2	= mkV2 ( mkV "nickar" ) (mkPrep "åt");
 nicka_vb_22_V2	= mkV2 ( mkV "nickar" ) noPrep;
 niga_vb_1_V2	= mkV2 ( mkV "niga" "neg" "nigit" ) (mkPrep "för");
 njuta_vb_1_V2	= mkV2 ( mkV "njuta" "njöt" "njutit" ) (mkPrep "av");
 nobba_vb_1_V2	= mkV2 ( mkV "nobbar" ) noPrep;
 noedgas_vb_1_1_V2	= mkV2 ( mkV "nödgas" ) noPrep;
 noedgas_vb_1_1_VV	= mkV "nödgas" ** {c2 = mkComplement [ ] ; lock_VV = <>} ;
 noedlanda_vb_1_1_V	= mkV "nödlandar" ;
 nojsa_vb_1_V2	= mkV2 ( mkV "nojsar" ) (mkPrep "med");
 nolltaxera_vb_1_V	= mkV "nolltaxerar" ;
 nominera_vb_1_V3	= mkV3 ( mkV "nominerar" ) noPrep (mkPrep "till");
 nonchalera_vb_1_V2	= mkV2 ( mkV "nonchalerar" ) noPrep;
 normalisera_vb_1_V2	= mkV2 ( mkV "normaliserar" ) noPrep;
 norpa_vb_1_V2	= mkV2 ( mkV "norpar" ) (mkPrep "från");
 nosa_vb_1_V	= mkV "nosar" ;
 notera_vb_1_V2	= mkV2 ( mkV "noterar" ) noPrep;
 notera_vb_1_VS	= mkVS ( mkV "noterar" ) ;
 nudda_vb_1_V2	= mkV2 (partV ( mkV "nuddar" ) "vid") noPrep;
 numrera_vb_1_V2	= mkV2 ( mkV "numrerar" ) noPrep;
 nyansera_vb_1_V2	= mkV2 ( mkV "nyanserar" ) noPrep;
 nydana_vb_1_V2	= mkV2 ( mkV "nydanar" ) noPrep;
 nynna_vb_1_V2	= mkV2 (partV ( mkV "nynnar" ) "på") noPrep;
 nypa_vb_1_V2	= mkV2 ( mkV "nypa" "nyper" "nyp" "nöp" "nypt" "nypt" ) noPrep;
 nysa_vb_1_V	= mkV "nyser" ;
 nysta_vb_1_V2	= mkV2 (partV ( mkV "nystar" ) "upp") noPrep;
 nyttja_vb_1_V2	= mkV2 ( mkV "nyttjar" ) noPrep;
 obducera_vb_1_V2	= mkV2 ( mkV "obducerar" ) noPrep;
 observera_vb_1_V2	= mkV2 ( mkV "observerar" ) noPrep;
 observera_vb_1_VQ	= mkVQ ( mkV "observerar" ) ;
 observera_vb_1_VS	= mkVS ( mkV "observerar" ) ;
 ockra_vb_1_V	= mkV "ockrar" ;
 ockupera_vb_1_V2	= mkV2 ( mkV "ockuperar" ) noPrep;
 oedelaegga_vb_1_1_V2	= mkV2 ( mkV "ödelägga" "ödelade" "ödelagt" ) noPrep;
 oedsla_vb_1_1_V2	= mkV2 ( mkV "ödslar" ) noPrep;
 oegna_vb_1_1_V2	= mkV2 (partV ( mkV "ögnar" ) "igenom") noPrep;
 oeka_vb_2_1_V	= mkV "ökar" ;
 oeka_vb_2_1_V2	= mkV2 ( mkV "ökar" ) noPrep;
 oemka_vb_1_1_V2	= mkV2 ( mkV "ömkar" ) noPrep;
 oemma_vb_1_1_V	= mkV "ömmar" ;
 oemma_vb_1_1_V2	= mkV2 (partV ( mkV "ömmar" ) "för") noPrep;
 oemsa_vb_1_1_V2	= mkV2 ( mkV "ömsar" ) noPrep;
 oenska_vb_1_11_V2	= mkV2 ( mkV "önskar" ) noPrep;
 oenska_vb_1_12_V2	= mkV2 (reflV ( mkV "önskar" )) noPrep;
 oenska_vb_1_1_VS	= mkVS ( mkV "önskar" ) ;
 oenska_vb_1_1_VV	= mkV "önskar" ** {c2 = mkComplement [ ] ; lock_VV = <>} ;
 oeppna_vb_1_1_V	= reflV ( mkV "öppnar" );
 oeppna_vb_1_1_V2	= mkV2 ( mkV "öppnar" ) noPrep;
 oesa_vb_1_1_V	= mkV "öser" ;
 oesa_vb_1_1_V2	= mkV2 ( mkV "öser" ) noPrep;
 oeva_vb_1_1_V	= reflV ( mkV "övar" );
 oeva_vb_1_1_V2	= mkV2 ( mkV "övar" ) noPrep;
 oeveranstraenga_vb_1_1_V	= reflV ( mkV "överanstränger" );
 oeveranstraenga_vb_1_1_V2	= mkV2 ( mkV "överanstränger" ) noPrep;
 oeverbeskydda_vb_1_1_V2	= mkV2 ( mkV "överbeskyddar" ) noPrep;
 oeverblicka_vb_1_1_V2	= mkV2 ( mkV "överblickar" ) noPrep;
 oeverbringa_vb_1_1_V2	= mkV2 ( mkV "överbringar" ) noPrep;
 oeverbrygga_vb_1_1_V2	= mkV2 ( mkV "överbryggar" ) noPrep;
 oeverdriva_vb_1_1_V2	= mkV2 ( mkV "överdriva" "överdrev" "överdrivit" ) noPrep;
 oeverensstaemma_vb_1_1_V2	= mkV2 ( mkV "överensstämmer" ) (mkPrep "med");
 oeverfalla_vb_1_1_V2	= mkV2 ( mkV "överfalla" "överföll" "överfallit" ) noPrep;
 oeverfoera_vb_1_1_V2	= mkV2 ( mkV "överföra" "överförde" "överfört" ) noPrep;
 oeverge_vb_1_1_V2	= mkV2 ( mkV "överge" "överger" "överge" "övergav" "övergett" "övergiven" ) noPrep;
 oeverglaensa_vb_1_1_V2	= mkV2 ( mkV "överglänser" ) noPrep;
 oeverhopa_vb_1_1_V3	= mkV3 ( mkV "överhopar" ) noPrep (mkPrep "med");
 oeverklaga_vb_1_1_V2	= mkV2 ( mkV "överklagar" ) noPrep;
 oeverlaata_vb_1_1_V2	= mkV2 ( mkV "överlåta" "överlät" "överlåtit" ) (mkPrep "till");
 oeverlaata_vb_1_1_V3	= mkV3 ( mkV "överlåta" "överlät" "överlåtit" ) noPrep (mkPrep "på");
 oeverlaegga_vb_1_1_V2	= mkV2 ( mkV "överlägga" "överlade" "överlagt" ) (mkPrep "med");
 oeverlaemna_vb_1_1_V2	= mkV2 ( mkV "överlämnar" ) noPrep;
 oeverleva_vb_1_1_V2	= mkV2 ( mkV "överlever" ) noPrep;
 oevermanna_vb_1_1_V2	= mkV2 ( mkV "övermannar" ) noPrep;
 oevernatta_vb_1_1_V	= mkV "övernattar" ;
 oeveroesa_vb_1_1_V3	= mkV3 ( mkV "överöser" ) noPrep (mkPrep "med");
 oeverraska_vb_1_1_V2	= mkV2 ( mkV "överraskar" ) noPrep;
 oeverroesta_vb_1_1_V2	= mkV2 ( mkV "överröstar" ) noPrep;
 oeverrumpla_vb_1_1_V2	= mkV2 ( mkV "överrumplar" ) noPrep;
 oeversaetta_vb_1_1_V2	= mkV2 ( mkV "översätta" "översätter" "översätt" "översatte" "översatt" "översatt" ) noPrep;
 oeverse_vb_1_1_V2	= mkV2 ( mkV "överse" "översåg" "översett" ) (mkPrep "med");
 oeverskatta_vb_1_1_V2	= mkV2 ( mkV "överskattar" ) noPrep;
 oeverskrida_vb_1_1_V2	= mkV2 ( mkV "överskrida" "överskred" "överskridit" ) noPrep;
 oeverskugga_vb_1_1_V2	= mkV2 ( mkV "överskuggar" ) noPrep;
 oeverstiga_vb_1_1_V2	= mkV2 ( mkV "överstiga" "översteg" "överstigit" ) noPrep;
 oeversvaemma_vb_1_1_V2	= mkV2 ( mkV "översvämmar" ) noPrep;
 oeverta_vb_1_1_V2	= mkV2 ( mkV "överta" "övertar" "överta" "övertog" "övertagit" "övertagen" ) noPrep;
 oevertala_vb_1_1_V2	= mkV2 ( mkV "övertalar" ) noPrep;
 oevertraeda_vb_1_1_V2	= mkV2 ( mkV "överträda" "överträdde" "överträtt" ) noPrep;
 oevertraeffa_vb_1_1_V	= reflV ( mkV "överträffar" );
 oevertraeffa_vb_1_1_V2	= mkV2 ( mkV "överträffar" ) noPrep;
 oevertrassera_vb_1_1_V2	= mkV2 ( mkV "övertrasserar" ) noPrep;
 oevertyga_vb_1_1_V2	= mkV2 ( mkV "övertygar" ) noPrep;
 oevervaega_vb_2_1_V	= mkV "överväger" ;
 oevervaega_vb_2_1_V2	= mkV2 ( mkV "överväger" ) noPrep;
 oevervaega_vb_2_1_VV	= mkV "överväger" ** {c2 = mkComplement [ " att" ] ; lock_VV = <>} ;
 oevervaeldiga_vb_1_1_V2	= mkV2 ( mkV "överväldigar" ) noPrep;
 oevervaka_vb_1_1_V2	= mkV2 ( mkV "övervakar" ) noPrep;
 oevervaka_vb_1_1_VS	= mkVS ( mkV "övervakar" ) ;
 oevervara_vb_1_1_V2	= mkV2 ( mkV "övervarar" ) noPrep;
 oevervinna_vb_1_1_V2	= mkV2 ( mkV "övervinna" "övervann" "övervunnit" ) noPrep;
 oevervintra_vb_1_1_V	= mkV "övervintrar" ;
 offentliggoera_vb_1_1_V2	= mkV2 ( mkV "offentliggöra" "offentliggjorde" "offentliggjort" ) noPrep;
 offra_vb_11_V2	= mkV2 ( mkV "offrar" ) noPrep;
 offra_vb_12_V2	= mkV2 (reflV ( mkV "offrar" )) (mkPrep "för");
 ofreda_vb_1_V2	= mkV2 ( mkV "ofredar" ) noPrep;
 ogilla_vb_1_V2	= mkV2 ( mkV "ogillar" ) noPrep;
 ogilla_vb_1_VS	= mkVS ( mkV "ogillar" ) ;
 olja_vb_1_V2	= mkV2 (partV ( mkV "oljar" ) "in") noPrep;
 ombilda_vb_1_V2	= mkV2 ( mkV "ombildar" ) noPrep;
 omdana_vb_1_V2	= mkV2 ( mkV "omdanar" ) noPrep;
 omfamna_vb_1_V2	= mkV2 ( mkV "omfamnar" ) noPrep;
 omfatta_vb_1_V2	= mkV2 ( mkV "omfattar" ) noPrep;
 omge_vb_1_V2	= mkV2 ( mkV "omge" "omger" "omge" "omgav" "omgett" "omgiven" ) noPrep;
 omhaenderta_vb_1_1_V2	= mkV2 ( mkV "omhänderta" "omhändertar" "omhänderta" "omhändertog" "omhändertagit" "omhändertagen" ) noPrep;
 omhulda_vb_1_V2	= mkV2 ( mkV "omhuldar" ) noPrep;
 omintetgoera_vb_1_1_V2	= mkV2 ( mkV "omintetgöra" "omintetgjorde" "omintetgjort" ) noPrep;
 omkomma_vb_1_V	= mkV "omkomma" "omkom" "omkommit" ;
 omnaemna_vb_1_1_V2	= mkV2 ( mkV "omnämner" ) noPrep;
 omoejliggoera_vb_1_1_V2	= mkV2 ( mkV "omöjliggöra" "omöjliggjorde" "omöjliggjort" ) noPrep;
 omorganisera_vb_1_V2	= mkV2 ( mkV "omorganiserar" ) noPrep;
 omproeva_vb_1_1_V2	= mkV2 ( mkV "omprövar" ) noPrep;
 omringa_vb_1_V2	= mkV2 ( mkV "omringar" ) noPrep;
 omsaetta_vb_1_1_V2	= mkV2 ( mkV "omsätta" "omsätter" "omsätt" "omsatte" "omsatt" "omsatt" ) noPrep;
 omskaera_vb_1_1_V2	= mkV2 ( mkV "omskära" "omskar" "omskurit" ) noPrep;
 omskola_vb_1_V	= reflV ( mkV "omskolar" );
 omskola_vb_1_V2	= mkV2 ( mkV "omskolar" ) noPrep;
 omstoerta_vb_1_1_V2	= mkV2 ( mkV "omstörtar" ) noPrep;
 omtala_vb_1_VS	= mkVS ( mkV "omtalar" ) ;
 omvaelva_vb_1_1_V2	= mkV2 ( mkV "omvälver" ) noPrep;
 omvaenda_vb_1_1_V2	= mkV2 (reflV ( mkV "omvänder" )) (mkPrep "till");
 omvaerdera_vb_1_1_V2	= mkV2 ( mkV "omvärderar" ) noPrep;
 omvandla_vb_1_V3	= mkV3 ( mkV "omvandlar" ) noPrep (mkPrep "till");
 onanera_vb_1_V	= mkV "onanerar" ;
 operera_vb_1_V	= mkV "opererar" ;
 operera_vb_1_V2	= mkV2 ( mkV "opererar" ) noPrep;
 opponera_vb_1_V2	= mkV2 (reflV ( mkV "opponerar" )) (mkPrep "mot");
 opponera_vb_1_VS	= mkVS (reflV ( mkV "opponerar" )) ;
 optimera_vb_1_V2	= mkV2 ( mkV "optimerar" ) noPrep;
 orda_vb_1_V2	= mkV2 ( mkV "ordar" ) (mkPrep "om");
 ordinera_vb_1_V2	= mkV2 ( mkV "ordinerar" ) noPrep;
 ordna_vb_1_V	= mkV "ordnar" ;
 ordna_vb_1_V2	= mkV2 ( mkV "ordnar" ) noPrep;
 organisera_vb_1_V2	= mkV2 ( mkV "organiserar" ) noPrep;
 orientera_vb_2_V	= mkV "orienterar" ;
 orientera_vb_2_V2	= mkV2 ( mkV "orienterar" ) (mkPrep "om");
 orka_vb_1_V2	= mkV2 ( mkV "orkar" ) (mkPrep "med");
 orka_vb_11_VV	= mkV "orkar" ** {c2 = mkComplement [ " att" ] ; lock_VV = <>} ;
 orka_vb_12_VV	= mkV "orkar" ** {c2 = mkComplement [ "med att" ] ; lock_VV = <>} ;
 oroa_vb_11_V2	= mkV2 ( mkV "oroar" ) noPrep;
 oroa_vb_12_V2	= mkV2 (reflV ( mkV "oroar" )) (mkPrep "för");
 oroa_vb_1_VS	= mkVS (reflV ( mkV "oroar" )) ;
 orsaka_vb_1_V2	= mkV2 ( mkV "orsakar" ) noPrep;
 osa_vb_1_V	= mkV "osar" ;
 oskadliggoera_vb_1_1_V2	= mkV2 ( mkV "oskadliggöra" "oskadliggjorde" "oskadliggjort" ) noPrep;
 paabjuda_vb_1_1_V2	= mkV2 ( mkV "påbjuda" "påbjöd" "påbjudit" ) noPrep;
 paabjuda_vb_1_1_VS	= mkVS ( mkV "påbjuda" "påbjöd" "påbjudit" ) ;
 paaboerja_vb_1_1_V2	= mkV2 ( mkV "påbörjar" ) noPrep;
 paadyvla_vb_1_1_V3	= mkV3 ( mkV "pådyvlar" ) noPrep noPrep;
 paafoera_vb_1_1_V3	= mkV3 ( mkV "påföra" "påförde" "påfört" ) noPrep noPrep;
 paagaa_vb_1_1_V	= mkV "pågå" "pågick" "pågått" ;
 paakalla_vb_1_1_V2	= mkV2 ( mkV "påkallar" ) noPrep;
 paala_vb_1_1_V2	= mkV2 ( mkV "pålar" ) noPrep;
 paaminna_vb_1_1_V2	= mkV2 ( mkV "påminna" "påminde" "påmint" ) (mkPrep "om");
 paaminna_vb_1_1_V3	= mkV3 ( mkV "påminna" "påminde" "påmint" ) noPrep (mkPrep "om");
 paaminna_vb_1_1_VS	= mkVS ( mkV "påminna" "påminde" "påmint" ) ;
 paapeka_vb_1_1_V2S	= mkV2S ( mkV "påpekar" ) (mkPrep "för");
 paaskynda_vb_1_1_V2	= mkV2 ( mkV "påskyndar" ) noPrep;
 paastaa_vb_1_1_VS	= mkVS ( mkV "påstå" "påstod" "påstådd" ) ;
 paastaa_vb_1_1_VV	= reflV ( mkV "påstå" "påstod" "påstådd" ) ** {c2 = mkComplement [ ] ; lock_VV = <>} ;
 paata_vb_2_1_V2	= mkV2 ( mkV "påtar" ) (mkPrep "i");
 paatala_vb_1_1_V2	= mkV2 ( mkV "påtalar" ) noPrep;
 paaverka_vb_1_1_V2	= mkV2 ( mkV "påverkar" ) noPrep;
 packa_vb_1_V2	= mkV2 ( mkV "packar" ) noPrep;
 paddla_vb_1_V2	= mkV2 ( mkV "paddlar" ) noPrep;
 paja_vb_1_V	= mkV "pajar" ;
 paja_vb_1_V2	= mkV2 ( mkV "pajar" ) noPrep;
 paketera_vb_1_V2	= mkV2 ( mkV "paketerar" ) noPrep;
 palla_vb_2_V2	= mkV2 ( mkV "pallar" ) (mkPrep "för");
 panera_vb_1_V2	= mkV2 ( mkV "panerar" ) noPrep;
 panga_vb_2_V	= mkV "pangar" ;
 panga_vb_2_V2	= mkV2 ( mkV "pangar" ) noPrep;
 panta_vb_1_V2	= mkV2 ( mkV "pantar" ) noPrep;
 pantsaetta_vb_1_1_V2	= mkV2 ( mkV "pantsätta" "pantsätter" "pantsätt" "pantsatte" "pantsatt" "pantsatt" ) noPrep;
 para_vb_1_V3	= mkV3 ( mkV "parar" ) (mkPrep "ihop") (mkPrep "och");
 paralysera_vb_1_V2	= mkV2 ( mkV "paralyserar" ) noPrep;
 parera_vb_1_V2	= mkV2 ( mkV "parerar" ) noPrep;
 parkera_vb_1_V2	= mkV2 ( mkV "parkerar" ) noPrep;
 passa_vb_2_V	= partV ( mkV "passar" ) "på";
 passa_vb_21_V2	= mkV2 ( mkV "passar" ) (mkPrep "till");
 passa_vb_22_V2	= mkV2 ( mkV "passar" ) noPrep;
 passa_vb_2_V3	= mkV3 ( mkV "passar" ) noPrep (mkPrep "till");
 passera_vb_1_V2	= mkV2 ( mkV "passerar" ) noPrep;
 passivera_vb_1_V2	= mkV2 ( mkV "passiverar" ) noPrep;
 passivisera_vb_1_V2	= mkV2 ( mkV "passiviserar" ) noPrep;
 patrullera_vb_1_V2	= mkV2 ( mkV "patrullerar" ) noPrep;
 pejla_vb_1_V2	= mkV2 ( mkV "pejlar" ) noPrep;
 peka_vb_1_V2	= mkV2 ( mkV "pekar" ) (mkPrep "på");
 peka_vb_1_VS	= mkVS ( mkV "pekar" ) ;
 pendla_vb_1_V2	= mkV2 ( mkV "pendlar" ) (mkPrep "mellan");
 penetrera_vb_1_V2	= mkV2 ( mkV "penetrerar" ) noPrep;
 pensionera_vb_1_V2	= mkV2 ( mkV "pensionerar" ) noPrep;
 pensla_vb_1_V2	= mkV2 ( mkV "penslar" ) noPrep;
 peppa_vb_1_V2	= mkV2 (partV ( mkV "peppar" ) "upp") noPrep;
 perforera_vb_1_V2	= mkV2 ( mkV "perforerar" ) noPrep;
 permanenta_vb_1_V2	= mkV2 ( mkV "permanentar" ) noPrep;
 permittera_vb_1_V2	= mkV2 ( mkV "permitterar" ) noPrep;
 peta_vb_21_V2	= mkV2 ( mkV "petar" ) (mkPrep "på");
 peta_vb_22_V2	= mkV2 ( mkV "petar" ) noPrep;
 picka_vb_1_V	= mkV "pickar" ;
 pika_vb_1_V2	= mkV2 ( mkV "pikar" ) noPrep;
 pilla_vb_11_V2	= mkV2 ( mkV "pillar" ) (mkPrep "med");
 pilla_vb_12_V2	= mkV2 ( mkV "pillar" ) (mkPrep "på");
 pimpla_vb_1_V2	= mkV2 ( mkV "pimplar" ) noPrep;
 pina_vb_1_V2	= mkV2 ( mkV "pinar" ) noPrep;
 pingla_vb_1_V	= mkV "pinglar" ;
 pinka_vb_1_V	= mkV "pinkar" ;
 pipa_vb_1_V	= mkV "pipa" "pep" "pipit" ;
 pippa_vb_1_V2	= mkV2 (partV ( mkV "pippar" ) "med") noPrep;
 piska_vb_1_V2	= mkV2 ( mkV "piskar" ) noPrep;
 pjoska_vb_1_V2	= mkV2 ( mkV "pjoskar" ) (mkPrep "med");
 plaaga_vb_1_1_V2	= mkV2 ( mkV "plågar" ) noPrep;
 plaastra_vb_1_1_V2	= mkV2 (partV ( mkV "plåstrar" ) "om") noPrep;
 plaata_vb_1_1_V2	= mkV2 ( mkV "plåtar" ) noPrep;
 placera_vb_1_V2	= mkV2 ( mkV "placerar" ) noPrep;
 pladdra_vb_1_V	= mkV "pladdrar" ;
 plaedera_vb_1_1_V2	= mkV2 ( mkV "pläderar" ) (mkPrep "för");
 planera_vb_1_V2	= mkV2 (partV ( mkV "planerar" ) "för") noPrep;
 planera_vb_1_VV	= mkV "planerar" ** {c2 = mkComplement [ " att" ] ; lock_VV = <>} ;
 planlaegga_vb_1_1_V2	= mkV2 ( mkV "planlägga" "planlade" "planlagt" ) noPrep;
 plantera_vb_1_V2	= mkV2 ( mkV "planterar" ) noPrep;
 plaska_vb_1_V	= mkV "plaskar" ;
 platsa_vb_1_V	= mkV "platsar" ;
 plikta_vb_1_V3	= mkV3 ( mkV "pliktar" ) noPrep (mkPrep "med");
 plocka_vb_11_V2	= mkV2 ( mkV "plockar" ) (mkPrep "upp");
 plocka_vb_12_V2	= mkV2 ( mkV "plockar" ) noPrep;
 ploeja_vb_1_1_V2	= mkV2 ( mkV "plöja" "plöjde" "plöjt" ) noPrep;
 ploga_vb_1_V	= mkV "plogar" ;
 plugga_vb_21_V2	= mkV2 ( mkV "pluggar" ) noPrep;
 plugga_vb_22_V2	= mkV2 (partV ( mkV "pluggar" ) "igen") noPrep;
 plumsa_vb_1_V2	= mkV2 ( mkV "plumsar" ) (mkPrep "i");
 plundra_vb_1_V2	= mkV2 ( mkV "plundrar" ) noPrep;
 poaengtera_vb_1_1_V2	= mkV2 ( mkV "poängterar" ) noPrep;
 poaengtera_vb_1_1_VS	= mkVS ( mkV "poängterar" ) ;
 pocka_vb_1_V2	= mkV2 ( mkV "pockar" ) (mkPrep "på");
 pocka_vb_1_VV	= mkV "pockar" ** {c2 = mkComplement [ "på att" ] ; lock_VV = <>} ;
 poesa_vb_1_1_V	= mkV "pöser" ;
 polarisera_vb_1_V3	= mkV3 ( mkV "polariserar" ) noPrep (mkPrep "och");
 polemisera_vb_1_V2	= mkV2 ( mkV "polemiserar" ) (mkPrep "mot");
 polera_vb_1_V2	= mkV2 ( mkV "polerar" ) noPrep;
 pollettera_vb_1_V2	= mkV2 ( mkV "polletterar" ) noPrep;
 porla_vb_1_V	= mkV "porlar" ;
 portionera_vb_1_V2	= mkV2 (partV ( mkV "portionerar" ) "ut") noPrep;
 posera_vb_1_V	= mkV "poserar" ;
 posta_vb_1_V2	= mkV2 ( mkV "postar" ) noPrep;
 praala_vb_1_1_V2	= mkV2 ( mkV "prålar" ) (mkPrep "med");
 praangla_vb_1_1_V2	= mkV2 (partV ( mkV "prånglar" ) "ut") noPrep;
 praegla_vb_1_1_V2	= mkV2 ( mkV "präglar" ) noPrep;
 praenta_vb_1_1_V	= mkV "präntar" ;
 praestviga_vb_1_1_V2	= mkV2 ( mkV "prästviger" ) noPrep;
 praktisera_vb_1_V	= mkV "praktiserar" ;
 praktisera_vb_1_V2	= mkV2 ( mkV "praktiserar" ) noPrep;
 prassla_vb_1_V	= mkV "prasslar" ;
 prata_vb_1_V2	= mkV2 ( mkV "pratar" ) (mkPrep "med");
 precisera_vb_1_V2	= mkV2 ( mkV "preciserar" ) noPrep;
 predika_vb_1_V2	= mkV2 ( mkV "predikar" ) (mkPrep "om");
 premiera_vb_1_V2	= mkV2 ( mkV "premierar" ) noPrep;
 prenumerera_vb_1_V2	= mkV2 ( mkV "prenumererar" ) (mkPrep "på");
 preparera_vb_1_V	= reflV ( mkV "preparerar" );
 preparera_vb_1_V2	= mkV2 ( mkV "preparerar" ) noPrep;
 presentera_vb_1_V2	= mkV2 ( mkV "presenterar" ) noPrep;
 pressa_vb_1_V2	= mkV2 ( mkV "pressar" ) noPrep;
 prestera_vb_1_V2	= mkV2 ( mkV "presterar" ) noPrep;
 pricka_vb_11_V2	= mkV2 ( mkV "prickar" ) noPrep;
 pricka_vb_12_V2	= mkV2 (partV ( mkV "prickar" ) "av") noPrep;
 prioritera_vb_1_V2	= mkV2 ( mkV "prioriterar" ) noPrep;
 prisa_vb_1_V2	= mkV2 ( mkV "prisar" ) noPrep;
 privatisera_vb_1_V2	= mkV2 ( mkV "privatiserar" ) noPrep;
 processa_vb_2_V2	= mkV2 ( mkV "processar" ) (mkPrep "mot");
 producera_vb_1_V2	= mkV2 ( mkV "producerar" ) noPrep;
 proejsa_vb_1_1_V2	= mkV2 ( mkV "pröjsar" ) noPrep;
 proeva_vb_1_1_V2	= mkV2 ( mkV "prövar" ) noPrep;
 proeva_vb_1_1_VV	= mkV "prövar" ** {c2 = mkComplement [ " att" ] ; lock_VV = <>} ;
 profitera_vb_1_V2	= mkV2 ( mkV "profiterar" ) (mkPrep "på");
 programmera_vb_1_V2	= mkV2 ( mkV "programmerar" ) noPrep;
 projektera_vb_1_V2	= mkV2 ( mkV "projekterar" ) noPrep;
 projicera_vb_1_V2	= mkV2 ( mkV "projicerar" ) noPrep;
 proklamera_vb_1_V2	= mkV2 ( mkV "proklamerar" ) noPrep;
 proklamera_vb_1_VS	= mkVS ( mkV "proklamerar" ) ;
 promenera_vb_1_V	= mkV "promenerar" ;
 promovera_vb_1_V2	= mkV2 ( mkV "promoverar" ) noPrep;
 propagera_vb_1_V2	= mkV2 ( mkV "propagerar" ) (mkPrep "för");
 propagera_vb_1_VS	= mkVS ( mkV "propagerar" ) ;
 proppa_vb_11_V2	= mkV2 ( mkV "proppar" ) (mkPrep "till");
 proppa_vb_12_V2	= mkV2 (reflV ( mkV "proppar" )) (mkPrep "i");
 proppa_vb_1_V3	= mkV3 ( mkV "proppar" ) noPrep (mkPrep "i");
 propsa_vb_1_V	= mkV "propsar" ;
 propsa_vb_1_V2	= mkV2 ( mkV "propsar" ) (mkPrep "på");
 propsa_vb_1_VS	= mkVS ( mkV "propsar" ) ;
 prospektera_vb_1_V2	= mkV2 ( mkV "prospekterar" ) noPrep;
 prostituera_vb_1_V	= reflV ( mkV "prostituerar" );
 protestera_vb_1_V2	= mkV2 ( mkV "protesterar" ) (mkPrep "mot");
 protestera_vb_1_VS	= mkVS ( mkV "protesterar" ) ;
 prova_vb_1_V2	= mkV2 ( mkV "provar" ) noPrep;
 provocera_vb_1_V2	= mkV2 ( mkV "provocerar" ) noPrep;
 prunka_vb_1_V	= mkV "prunkar" ;
 pruta_vb_1_V2	= mkV2 ( mkV "prutar" ) (mkPrep "på");
 prutta_vb_1_V	= mkV "pruttar" ;
 prya_vb_1_V	= mkV "pryar" ;
 pryda_vb_1_V2	= mkV2 ( mkV "pryda" "prydde" "prytt" ) noPrep;
 pryda_vb_1_V3	= mkV3 ( mkV "pryda" "prydde" "prytt" ) noPrep (mkPrep "med");
 prygla_vb_1_V2	= mkV2 ( mkV "pryglar" ) noPrep;
 psyka_vb_1_V2	= mkV2 ( mkV "psykar" ) noPrep;
 publicera_vb_1_V2	= mkV2 ( mkV "publicerar" ) noPrep;
 pudra_vb_1_V	= reflV ( mkV "pudrar" );
 pudra_vb_1_V2	= mkV2 ( mkV "pudrar" ) noPrep;
 puffa_vb_2_V	= mkV "puffar" ;
 puffa_vb_2_V2	= mkV2 ( mkV "puffar" ) noPrep;
 pulsa_vb_1_V2	= mkV2 ( mkV "pulsar" ) (mkPrep "i");
 pulsera_vb_1_V	= mkV "pulserar" ;
 pulvrisera_vb_1_V2	= mkV2 ( mkV "pulvriserar" ) noPrep;
 pumpa_vb_1_V2	= mkV2 ( mkV "pumpar" ) noPrep;
 punktera_vb_1_V2	= mkV2 ( mkV "punkterar" ) noPrep;
 pussas_vb_1_V2	= mkV2 ( mkV "pussas" ) noPrep;
 pussla_vb_1_V	= mkV "pusslar" ;
 pusta_vb_1_V	= mkV "pustar" ;
 puta_vb_1_V	= partV ( mkV "putar" ) "ut";
 putsa_vb_1_V2	= mkV2 ( mkV "putsar" ) noPrep;
 putta_vb_1_V2	= mkV2 ( mkV "puttar" ) noPrep;
 puttra_vb_1_V	= mkV "puttrar" ;
 pynta_vb_1_V2	= mkV2 ( mkV "pyntar" ) noPrep;
 pyra_vb_1_V	= mkV "pyra" "pyrde" "pyrt" ;
 pysa_vb_1_V	= mkV "pyser" ;
 pyssla_vb_1_V2	= mkV2 ( mkV "pysslar" ) (mkPrep "med");
 raa_vb_2_11_V2	= mkV2 (partV ( mkV "rår" ) "för") noPrep;
 raa_vb_2_12_V2	= mkV2 (partV ( mkV "rår" ) "om") noPrep;
 raa_vb_2_13_V2	= mkV2 (partV ( mkV "rår" ) "på") noPrep;
 raa_vb_2_1_VS	= mkVS (partV ( mkV "rår" ) "för") ;
 raada_vb_1_1_V2	= mkV2 ( mkV "råda" "rådde" "rått" ) noPrep;
 raadgoera_vb_1_1_V2	= mkV2 ( mkV "rådgöra" "rådgjorde" "rådgjort" ) (mkPrep "med");
 raadslaa_vb_1_1_V2	= mkV2 ( mkV "rådslå" "rådslog" "rådslagit" ) (mkPrep "med");
 raakas_vb_1_11_V2	= mkV2 ( mkV "råkas" ) (mkPrep "ut för");
 raakas_vb_1_12_V2	= mkV2 ( mkV "råkas" ) noPrep;
 raakas_vb_1_1_VV	= mkV "råkas" ** {c2 = mkComplement [ ] ; lock_VV = <>} ;
 raama_vb_1_1_V	= mkV "råmar" ;
 raana_vb_1_1_V2	= mkV2 ( mkV "rånar" ) noPrep;
 raaplugga_vb_1_1_V	= mkV "råpluggar" ;
 rabbla_vb_1_V2	= mkV2 ( mkV "rabblar" ) noPrep;
 racka_vb_1_V2	= mkV2 (partV ( mkV "rackar" ) "ner") (mkPrep "på");
 radera_vb_1_V2	= mkV2 (partV ( mkV "raderar" ) "ut") noPrep;
 raecka_vb_2_11_V	= mkV "räcker" ;
 raecka_vb_2_12_V	= partV ( mkV "räcker" ) "upp";
 raecka_vb_2_1_V3	= mkV3 ( mkV "räcker" ) noPrep noPrep;
 raedda_vb_1_1_V2	= mkV2 ( mkV "räddar" ) noPrep;
 raeffla_vb_1_1_V2	= mkV2 ( mkV "räfflar" ) noPrep;
 raefsa_vb_1_1_V2	= mkV2 ( mkV "räfsar" ) noPrep;
 raekna_vb_1_1_V	= mkV "räknar" ;
 raekna_vb_1_11_V2	= mkV2 ( mkV "räknar" ) (mkPrep "med");
 raekna_vb_1_12_V2	= mkV2 ( mkV "räknar" ) (mkPrep "ut");
 raekna_vb_1_13_V2	= mkV2 ( mkV "räknar" ) noPrep;
 raekna_vb_1_1_VS	= mkVS ( mkV "räknar" ) ;
 raemna_vb_1_1_V	= mkV "rämnar" ;
 raenna_vb_1_1_V	= mkV "ränna" "rände" "ränt" ;
 raeta_vb_1_1_V	= reflV (partV ( mkV "rätar" ) "på");
 raeta_vb_1_11_V2	= mkV2 ( mkV "rätar" ) (mkPrep "upp");
 raeta_vb_1_12_V2	= mkV2 (partV ( mkV "rätar" ) "på") noPrep;
 raetta_vb_1_11_V2	= mkV2 ( mkV "rättar" ) (mkPrep "till");
 raetta_vb_1_12_V2	= mkV2 ( mkV "rättar" ) noPrep;
 raettfaerdiga_vb_1_1_V3	= mkV3 ( mkV "rättfärdigar" ) noPrep (mkPrep "med");
 raffinera_vb_1_V2	= mkV2 ( mkV "raffinerar" ) noPrep;
 rafsa_vb_1_V2	= mkV2 ( mkV "rafsar" ) (mkPrep "ihop");
 ragga_vb_1_V2	= mkV2 ( mkV "raggar" ) noPrep;
 ragla_vb_1_V	= mkV "raglar" ;
 raljera_vb_11_V2	= mkV2 ( mkV "raljerar" ) (mkPrep "med");
 raljera_vb_12_V2	= mkV2 ( mkV "raljerar" ) (mkPrep "om");
 rama_vb_1_V2	= mkV2 (partV ( mkV "ramar" ) "in") noPrep;
 ramla_vb_1_V	= mkV "ramlar" ;
 ramma_vb_1_V2	= mkV2 ( mkV "rammar" ) noPrep;
 ramponera_vb_1_V2	= mkV2 ( mkV "ramponerar" ) noPrep;
 randas_vb_1_V	= mkV "randas" ;
 rangordna_vb_1_V2	= mkV2 ( mkV "rangordnar" ) noPrep;
 ranka_vb_1_V2	= mkV2 ( mkV "rankar" ) noPrep;
 rannsaka_vb_1_V2	= mkV2 ( mkV "rannsakar" ) noPrep;
 ransonera_vb_1_V2	= mkV2 ( mkV "ransonerar" ) noPrep;
 rapa_vb_1_V	= mkV "rapar" ;
 rappa_vb_1_V	= partV ( mkV "rappar" ) "på";
 rappa_vb_11_V2	= mkV2 ( mkV "rappar" ) noPrep;
 rappa_vb_12_V2	= mkV2 (partV ( mkV "rappar" ) "till") noPrep;
 rapportera_vb_1_V2	= mkV2 (partV ( mkV "rapporterar" ) "om") noPrep;
 rapportera_vb_1_VS	= mkVS (partV ( mkV "rapporterar" ) "om") ;
 rasa_vb_1_V	= mkV "rasar" ;
 rasera_vb_1_V2	= mkV2 ( mkV "raserar" ) noPrep;
 raspa_vb_1_V	= mkV "raspar" ;
 rassla_vb_1_V	= mkV "rasslar" ;
 rasta_vb_2_V	= mkV "rastar" ;
 rasta_vb_2_V2	= mkV2 ( mkV "rastar" ) noPrep;
 rata_vb_1_V2	= mkV2 ( mkV "ratar" ) noPrep;
 ratificera_vb_1_V2	= mkV2 ( mkV "ratificerar" ) noPrep;
 rationalisera_vb_1_V2	= mkV2 ( mkV "rationaliserar" ) noPrep;
 ratta_vb_1_V2	= mkV2 ( mkV "rattar" ) noPrep;
 rea_vb_1_V	= mkV "rear" ;
 reagera_vb_1_V2	= mkV2 ( mkV "reagerar" ) (mkPrep "på");
 realisera_vb_1_V2	= mkV2 ( mkV "realiserar" ) noPrep;
 recensera_vb_1_V2	= mkV2 ( mkV "recenserar" ) noPrep;
 recitera_vb_1_V2	= mkV2 ( mkV "reciterar" ) noPrep;
 reda_vb_1_V	= reflV ( mkV "reda" "redde" "rett" );
 reda_vb_1_V2	= mkV2 ( mkV "reda" "redde" "rett" ) (mkPrep "upp");
 redigera_vb_1_V2	= mkV2 ( mkV "redigerar" ) noPrep;
 redogoera_vb_1_1_V2	= mkV2 ( mkV "redogöra" "redogjorde" "redogjort" ) (mkPrep "för");
 redogoera_vb_1_1_VS	= mkVS ( mkV "redogöra" "redogjorde" "redogjort" ) ;
 redovisa_vb_1_V2	= mkV2 ( mkV "redovisar" ) noPrep;
 reducera_vb_1_V2	= mkV2 ( mkV "reducerar" ) noPrep;
 referera_vb_1_V2	= mkV2 ( mkV "refererar" ) noPrep;
 reflektera_vb_11_V2	= mkV2 ( mkV "reflekterar" ) (mkPrep "över");
 reflektera_vb_12_V2	= mkV2 ( mkV "reflekterar" ) noPrep;
 reformera_vb_1_V2	= mkV2 ( mkV "reformerar" ) noPrep;
 refusera_vb_1_V2	= mkV2 ( mkV "refuserar" ) noPrep;
 regera_vb_1_V2	= mkV2 ( mkV "regerar" ) (mkPrep "över");
 regissera_vb_1_V2	= mkV2 ( mkV "regisserar" ) noPrep;
 registrera_vb_1_V2	= mkV2 ( mkV "registrerar" ) noPrep;
 registrera_vb_1_VS	= mkVS ( mkV "registrerar" ) ;
 regla_vb_1_V2	= mkV2 ( mkV "reglar" ) noPrep;
 reglera_vb_2_V2	= mkV2 ( mkV "reglerar" ) noPrep;
 rehabilitera_vb_1_V	= reflV ( mkV "rehabiliterar" );
 rehabilitera_vb_1_V2	= mkV2 ( mkV "rehabiliterar" ) noPrep;
 reklamera_vb_1_V	= mkV "reklamerar" ;
 reklamera_vb_1_V2	= mkV2 ( mkV "reklamerar" ) noPrep;
 rekommendera_vb_1_V2	= mkV2 ( mkV "rekommenderar" ) noPrep;
 rekommendera_vb_1_VS	= mkVS ( mkV "rekommenderar" ) ;
 rekonstruera_vb_1_V2	= mkV2 ( mkV "rekonstruerar" ) noPrep;
 rekrytera_vb_1_V2	= mkV2 ( mkV "rekryterar" ) noPrep;
 rekvirera_vb_1_V2	= mkV2 ( mkV "rekvirerar" ) noPrep;
 relatera_vb_11_V2	= mkV2 ( mkV "relaterar" ) (mkPrep "till");
 relatera_vb_12_V2	= mkV2 ( mkV "relaterar" ) noPrep;
 relatera_vb_1_V3	= mkV3 ( mkV "relaterar" ) noPrep (mkPrep "till");
 relegera_vb_1_V2	= mkV2 ( mkV "relegerar" ) noPrep;
 remittera_vb_1_V2	= mkV2 ( mkV "remitterar" ) noPrep;
 rena_vb_1_V2	= mkV2 ( mkV "renar" ) noPrep;
 rendera_vb_1_V3	= mkV3 ( mkV "renderar" ) noPrep noPrep;
 rengoera_vb_1_1_V2	= mkV2 ( mkV "rengöra" "rengjorde" "rengjort" ) noPrep;
 renodla_vb_1_V2	= mkV2 ( mkV "renodlar" ) noPrep;
 renovera_vb_1_V2	= mkV2 ( mkV "renoverar" ) noPrep;
 rensa_vb_1_V2	= mkV2 ( mkV "rensar" ) noPrep;
 rentvaa_vb_1_1_V	= reflV ( mkV "rentvår" );
 rentvaa_vb_1_1_V2	= mkV2 ( mkV "rentvår" ) noPrep;
 repa_vb_1_V	= reflV ( mkV "repar" );
 repa_vb_1_V2	= mkV2 ( mkV "repar" ) noPrep;
 reparera_vb_1_V2	= mkV2 ( mkV "reparerar" ) noPrep;
 repetera_vb_1_V2	= mkV2 ( mkV "repeterar" ) noPrep;
 repetera_vb_1_VS	= mkVS ( mkV "repeterar" ) ;
 replikera_vb_1_V	= mkV "replikerar" ;
 representera_vb_1_V2	= mkV2 ( mkV "representerar" ) noPrep;
 resa_vb_21_V	= mkV "reser" ;
 resa_vb_22_V	= reflV ( mkV "reser" );
 resa_vb_2_V2	= mkV2 ( mkV "reser" ) noPrep;
 reservera_vb_11_V2	= mkV2 ( mkV "reserverar" ) noPrep;
 reservera_vb_12_V2	= mkV2 (reflV ( mkV "reserverar" )) (mkPrep "mot");
 reservera_vb_1_VS	= mkVS (reflV ( mkV "reserverar" )) ;
 residera_vb_1_V	= mkV "residerar" ;
 resignera_vb_1_V	= mkV "resignerar" ;
 resonera_vb_1_V	= mkV "resonerar" ;
 resonera_vb_1_V2	= mkV2 ( mkV "resonerar" ) (mkPrep "med");
 respektera_vb_1_V2	= mkV2 ( mkV "respekterar" ) noPrep;
 restaurera_vb_1_V2	= mkV2 ( mkV "restaurerar" ) noPrep;
 restera_vb_1_V	= mkV "resterar" ;
 restituera_vb_1_V2	= mkV2 ( mkV "restituerar" ) noPrep;
 resultera_vb_1_V2	= mkV2 ( mkV "resulterar" ) (mkPrep "i");
 resultera_vb_1_VS	= mkVS ( mkV "resulterar" ) ;
 retas_vb_11_V2	= mkV2 ( mkV "retas" ) noPrep;
 retas_vb_12_V2	= mkV2 (reflV ( mkV "retas" )) (mkPrep "på");
 retas_vb_1_VS	= mkVS (reflV ( mkV "retas" )) ;
 retirera_vb_1_V2	= mkV2 ( mkV "retirerar" ) (mkPrep "från");
 returnera_vb_1_V2	= mkV2 ( mkV "returnerar" ) noPrep;
 retuschera_vb_1_V2	= mkV2 ( mkV "retuscherar" ) noPrep;
 revalvera_vb_1_V2	= mkV2 ( mkV "revalverar" ) noPrep;
 revidera_vb_1_V2	= mkV2 ( mkV "reviderar" ) noPrep;
 revolutionera_vb_1_V2	= mkV2 ( mkV "revolutionerar" ) noPrep;
 rida_vb_1_V2	= mkV2 (partV ( mkV "rida" "red" "ridit" ) "på") noPrep;
 rikta_vb_11_V2	= mkV2 ( mkV "riktar" ) noPrep;
 rikta_vb_12_V2	= mkV2 (reflV ( mkV "riktar" )) (mkPrep "mot");
 rikta_vb_1_V3	= mkV3 ( mkV "riktar" ) noPrep (mkPrep "mot");
 rimma_vb_11_V2	= mkV2 ( mkV "rimmar" ) (mkPrep "med");
 rimma_vb_12_V2	= mkV2 ( mkV "rimmar" ) noPrep;
 ringa_vb_11_V	= mkV "ringer" ;
 ringa_vb_12_V	= partV ( mkV "ringer" ) "på";
 ringa_vb_11_V2	= mkV2 ( mkV "ringer" ) (mkPrep "upp");
 ringa_vb_12_V2	= mkV2 (partV ( mkV "ringer" ) "till") noPrep;
 ringakta_vb_1_V2	= mkV2 ( mkV "ringaktar" ) noPrep;
 ringla_vb_1_V	= mkV "ringlar" ;
 rinna_vb_1_V	= mkV "rinna" "rann" "runnit" ;
 riskera_vb_1_V	= mkV "riskerar" ;
 riskera_vb_1_V2	= mkV2 ( mkV "riskerar" ) noPrep;
 riskera_vb_1_VV	= mkV "riskerar" ** {c2 = mkComplement [ " att" ] ; lock_VV = <>} ;
 rispa_vb_1_V2	= mkV2 ( mkV "rispar" ) noPrep;
 rista_vb_1_V2	= mkV2 ( mkV "ristar" ) noPrep;
 rita_vb_1_V2	= mkV2 ( mkV "ritar" ) noPrep;
 riva_vb_1_V	= mkV "riva" "rev" "rivit" ;
 riva_vb_1_V2	= mkV2 ( mkV "riva" "rev" "rivit" ) noPrep;
 rivalisera_vb_1_V2	= mkV2 ( mkV "rivaliserar" ) (mkPrep "med");
 ro_vb_1_V	= mkV "ror" ;
 roa_vb_11_V2	= mkV2 ( mkV "roar" ) noPrep;
 roa_vb_12_V2	= mkV2 (reflV ( mkV "roar" )) (mkPrep "med");
 roa_vb_1_VV	= reflV ( mkV "roar" ) ** {c2 = mkComplement [ "med att" ] ; lock_VV = <>} ;
 rodna_vb_1_V	= mkV "rodnar" ;
 roeja_vb_2_1_V	= mkV "röja" "röjde" "röjt" ;
 roeja_vb_2_1_V2	= mkV2 ( mkV "röja" "röjde" "röjt" ) noPrep;
 roeka_vb_1_1_V2	= mkV2 ( mkV "röker" ) noPrep;
 roena_vb_1_1_V2	= mkV2 ( mkV "röna" "röner" "rön" "rönte" "rönt" "rönt" ) noPrep;
 roentga_vb_1_1_V2	= mkV2 ( mkV "röntgar" ) noPrep;
 roera_vb_1_11_V	= mkV "röra" "rörde" "rört" ;
 roera_vb_1_12_V	= reflV ( mkV "röra" "rörde" "rört" );
 roera_vb_1_1_V2	= mkV2 ( mkV "röra" "rörde" "rört" ) noPrep;
 roesta_vb_1_1_V2	= mkV2 ( mkV "röstar" ) (mkPrep "på");
 roeva_vb_1_1_V2	= mkV2 (partV ( mkV "rövar" ) "bort") noPrep;
 ropa_vb_1_V2	= mkV2 ( mkV "ropar" ) (mkPrep "på");
 rosa_vb_1_V2	= mkV2 ( mkV "rosar" ) noPrep;
 rossla_vb_1_V	= mkV "rosslar" ;
 rosta_vb_2_V	= mkV "rostar" ;
 rosta_vb_2_V2	= mkV2 ( mkV "rostar" ) noPrep;
 rota_vb_1_V	= reflV ( mkV "rotar" );
 rota_vb_1_V2	= mkV2 ( mkV "rotar" ) (mkPrep "i");
 rotera_vb_1_V	= mkV "roterar" ;
 rubba_vb_1_V2	= mkV2 ( mkV "rubbar" ) noPrep;
 rubricera_vb_1_V2	= mkV2 ( mkV "rubricerar" ) noPrep;
 rucka_vb_1_V2	= mkV2 ( mkV "ruckar" ) (mkPrep "på");
 rufsa_vb_1_V2	= mkV2 ( mkV "rufsar" ) noPrep;
 ruinera_vb_1_V	= reflV ( mkV "ruinerar" );
 ruinera_vb_1_V2	= mkV2 ( mkV "ruinerar" ) noPrep;
 rulla_vb_2_V	= mkV "rullar" ;
 rulla_vb_2_V2	= mkV2 ( mkV "rullar" ) noPrep;
 rumla_vb_1_V	= mkV "rumlar" ;
 rumstera_vb_1_V	= partV ( mkV "rumsterar" ) "om";
 runda_vb_1_V2	= mkV2 ( mkV "rundar" ) noPrep;
 runka_vb_1_V	= mkV "runkar" ;
 runka_vb_1_V2	= mkV2 ( mkV "runkar" ) (mkPrep "på");
 rusa_vb_2_V	= mkV "rusar" ;
 ruska_vb_2_V	= reflV ( mkV "ruskar" );
 ruska_vb_2_V2	= mkV2 (partV ( mkV "ruskar" ) "på") noPrep;
 rusta_vb_11_V2	= mkV2 ( mkV "rustar" ) (mkPrep "till");
 rusta_vb_12_V2	= mkV2 (partV ( mkV "rustar" ) "upp") noPrep;
 rutscha_vb_1_V	= mkV "rutschar" ;
 ruttna_vb_1_V	= mkV "ruttnar" ;
 ruva_vb_2_V	= mkV "ruvar" ;
 ruva_vb_2_V2	= mkV2 ( mkV "ruvar" ) (mkPrep "på");
 rycka_vb_1_V	= partV ( mkV "rycker" ) "in";
 rycka_vb_1_V2	= mkV2 ( mkV "rycker" ) (mkPrep "ner");
 rygga_vb_1_V2	= mkV2 ( mkV "ryggar" ) (mkPrep "för");
 ryka_vb_1_V	= mkV "ryker" ;
 ryktas_vb_1_V2	= mkV2 ( mkV "ryktas" ) noPrep;
 rymma_vb_2_V	= mkV "rymmer" ;
 rymma_vb_21_V2	= mkV2 ( mkV "rymmer" ) noPrep;
 rymma_vb_22_V2	= mkV2 (partV ( mkV "rymmer" ) "ut") noPrep;
 rynka_vb_1_V2	= mkV2 ( mkV "rynkar" ) noPrep;
 ryta_vb_1_V	= mkV "ryta" "röt" "rutit" ;
 saa_vb_1_1_V2	= mkV2 ( mkV "sår" ) noPrep;
 saaga_vb_2_11_V2	= mkV2 ( mkV "sågar" ) (mkPrep "ner");
 saaga_vb_2_12_V2	= mkV2 (partV ( mkV "sågar" ) "i") noPrep;
 saalla_vb_1_11_V2	= mkV2 ( mkV "sållar" ) noPrep;
 saalla_vb_1_12_V2	= mkV2 (partV ( mkV "sållar" ) "bort") noPrep;
 saara_vb_1_1_V2	= mkV2 ( mkV "sårar" ) noPrep;
 sabba_vb_1_V2	= mkV2 ( mkV "sabbar" ) noPrep;
 sabotera_vb_1_V2	= mkV2 ( mkV "saboterar" ) noPrep;
 sacka_vb_1_V	= partV ( mkV "sackar" ) "efter";
 sadla_vb_1_V2	= mkV2 ( mkV "sadlar" ) noPrep;
 saecka_vb_1_1_V	= partV ( mkV "säckar" ) "ihop";
 saega_vb_1_11_V	= partV ( mkV "säga" "sade" "sagt" ) "ifrån";
 saega_vb_1_12_V	= reflV (partV ( mkV "säga" "sade" "sagt" ) "upp");
 saega_vb_1_11_V2	= mkV2 (partV ( mkV "säga" "sade" "sagt" ) "till") noPrep;
 saega_vb_1_12_V2	= mkV2 (partV ( mkV "säga" "sade" "sagt" ) "upp") noPrep;
 saega_vb_1_1_V2S	= mkV2S (partV ( mkV "säga" "sade" "sagt" ) "till") noPrep;
 saega_vb_1_1_VS	= mkVS ( mkV "säga" "sade" "sagt" ) ;
 saekerstaella_vb_1_1_V2	= mkV2 ( mkV "säkerställer" ) noPrep;
 saekra_vb_1_1_V2	= mkV2 ( mkV "säkrar" ) noPrep;
 saelja_vb_1_1_V2	= mkV2 ( mkV "sälja" "sålde" "sålt" ) noPrep;
 saellskapa_vb_1_1_V2	= mkV2 ( mkV "sällskapar" ) (mkPrep "med");
 saenda_vb_1_1_V2	= mkV2 ( mkV "sänder" ) noPrep;
 saenda_vb_1_1_V3	= mkV3 ( mkV "sänder" ) noPrep noPrep;
 saenka_vb_1_1_V	= reflV ( mkV "sänker" );
 saenka_vb_1_1_V2	= mkV2 ( mkV "sänker" ) noPrep;
 saera_vb_1_1_V3	= mkV3 ( partV ( mkV "särar" ) "på" ) noPrep (mkPrep "och");
 saerbehandla_vb_1_1_V2	= mkV2 ( mkV "särbehandlar" ) noPrep;
 saerskilja_vb_1_1_V3	= mkV3 ( mkV "särskilja" "särskilde" "särskilt" ) noPrep (mkPrep "och");
 saetta_vb_1_1_V	= reflV ( mkV "sätta" "sätter" "sätt" "satte" "satt" "satt" );
 saetta_vb_1_11_V2	= mkV2 ( mkV "sätta" "sätter" "sätt" "satte" "satt" "satt" ) noPrep;
 saetta_vb_1_12_V2	= mkV2 (partV ( mkV "sätta" "sätter" "sätt" "satte" "satt" "satt" ) "på") noPrep;
 saetta_vb_1_13_V2	= mkV2 (partV ( mkV "sätta" "sätter" "sätt" "satte" "satt" "satt" ) "upp") noPrep;
 saetta_vb_1_14_V2	= mkV2 (partV ( mkV "sätta" "sätter" "sätt" "satte" "satt" "satt" ) "ut") noPrep;
 saetta_vb_1_15_V2	= mkV2 (partV (partV ( mkV "sätta" "sätter" "sätt" "satte" "satt" "satt" ) "igång") "med") noPrep;
 saetta_vb_1_16_V2	= mkV2 (partV (reflV ( mkV "sätta" "sätter" "sätt" "satte" "satt" "satt" )) "in") (mkPrep "i");
 saetta_vb_1_17_V2	= mkV2 (partV (reflV ( mkV "sätta" "sätter" "sätt" "satte" "satt" "satt" )) "över") noPrep;
 saetta_vb_1_18_V2	= mkV2 (reflV (partV ( mkV "sätta" "sätter" "sätt" "satte" "satt" "satt" ) "i")) noPrep;
 saetta_vb_1_11_V3	= mkV3 ( mkV "sätta" "sätter" "sätt" "satte" "satt" "satt" ) noPrep (mkPrep "i");
 saetta_vb_1_12_V3	= mkV3 ( partV ( mkV "sätta" "sätter" "sätt" "satte" "satt" "satt" ) "in" ) noPrep (mkPrep "på");
 saetta_vb_1_1_VS	= mkVS (partV (reflV ( mkV "sätta" "sätter" "sätt" "satte" "satt" "satt" )) "över") ;
 saetta_vb_1_1_VV	= partV (partV ( mkV "sätta" "sätter" "sätt" "satte" "satt" "satt" ) "igång") "med" ** {c2 = mkComplement [ " att" ] ; lock_VV = <>} ;
 saknas_vb_1_V	= mkV "saknas" ;
 saknas_vb_1_V2	= mkV2 ( mkV "saknas" ) noPrep;
 sakta_vb_11_V2	= mkV2 ( mkV "saktar" ) (mkPrep "in");
 sakta_vb_12_V2	= mkV2 ( mkV "saktar" ) noPrep;
 salta_vb_1_V2	= mkV2 ( mkV "saltar" ) noPrep;
 salufoera_vb_1_1_V2	= mkV2 ( mkV "saluföra" "saluförde" "salufört" ) noPrep;
 salutera_vb_1_V2	= mkV2 ( mkV "saluterar" ) noPrep;
 samaaka_vb_1_1_V2	= mkV2 ( mkV "samåker" ) (mkPrep "med");
 samarbeta_vb_1_V2	= mkV2 ( mkV "samarbetar" ) (mkPrep "med");
 samlas_vb_11_V2	= mkV2 ( mkV "samlas" ) (mkPrep "upp");
 samlas_vb_12_V2	= mkV2 (partV ( mkV "samlas" ) "på") noPrep;
 sammanbo_vb_1_V2	= mkV2 ( mkV "sammanbor" ) (mkPrep "med");
 sammanfalla_vb_1_V2	= mkV2 ( mkV "sammanfalla" "sammanföll" "sammanfallit" ) (mkPrep "med");
 sammanfatta_vb_1_V2	= mkV2 ( mkV "sammanfattar" ) noPrep;
 sammanfoera_vb_1_1_V2	= mkV2 ( mkV "sammanföra" "sammanförde" "sammanfört" ) noPrep;
 sammanhaenga_vb_1_1_V2	= mkV2 ( mkV "sammanhänger" ) (mkPrep "med");
 sammanhaenga_vb_1_1_VS	= mkVS ( mkV "sammanhänger" ) ;
 sammankalla_vb_1_V2	= mkV2 ( mkV "sammankallar" ) noPrep;
 sammanstaella_vb_1_1_V2	= mkV2 ( mkV "sammanställer" ) noPrep;
 sammantraeffa_vb_1_1_V2	= mkV2 ( mkV "sammanträffar" ) (mkPrep "med");
 samordna_vb_1_V3	= mkV3 ( mkV "samordnar" ) noPrep (mkPrep "och");
 samsas_vb_1_V2	= mkV2 ( mkV "samsas" ) (mkPrep "med");
 samtala_vb_1_V2	= mkV2 ( mkV "samtalar" ) (mkPrep "med");
 samtycka_vb_1_V2	= mkV2 ( mkV "samtycker" ) (mkPrep "till");
 samverka_vb_1_V2	= mkV2 ( mkV "samverkar" ) (mkPrep "med");
 sanda_vb_1_V2	= mkV2 ( mkV "sandar" ) noPrep;
 sanera_vb_1_V2	= mkV2 ( mkV "sanerar" ) noPrep;
 sarga_vb_1_V2	= mkV2 ( mkV "sargar" ) noPrep;
 satsa_vb_11_V2	= mkV2 ( mkV "satsar" ) (mkPrep "på");
 satsa_vb_12_V2	= mkV2 ( mkV "satsar" ) noPrep;
 satsa_vb_1_VV	= mkV "satsar" ** {c2 = mkComplement [ "på att" ] ; lock_VV = <>} ;
 sautera_vb_1_V2	= mkV2 ( mkV "sauterar" ) noPrep;
 schakta_vb_1_V2	= mkV2 (partV ( mkV "schaktar" ) "bort") noPrep;
 se_vb_1_V2	= mkV2 ( mkV "se" "såg" "sett" ) noPrep;
 se_vb_1_VS	= mkVS ( mkV "se" "såg" "sett" ) ;
 seeda_vb_1_V2	= mkV2 ( mkV "seedar" ) noPrep;
 segla_vb_1_V	= mkV "seglar" ;
 segra_vb_2_V2	= mkV2 ( mkV "segrar" ) (mkPrep "över");
 sekondera_vb_1_V2	= mkV2 ( mkV "sekonderar" ) noPrep;
 sela_vb_1_V2	= mkV2 ( mkV "selar" ) noPrep;
 semestra_vb_1_V	= mkV "semestrar" ;
 seminera_vb_1_V2	= mkV2 ( mkV "seminerar" ) noPrep;
 senarelaegga_vb_1_1_V2	= mkV2 ( mkV "senarelägga" "senarelade" "senarelagt" ) noPrep;
 separera_vb_1_V2	= mkV2 ( mkV "separerar" ) (mkPrep "från");
 separera_vb_1_V3	= mkV3 ( mkV "separerar" ) noPrep (mkPrep "från");
 serva_vb_1_V	= mkV "servar" ;
 serva_vb_1_V2	= mkV2 ( mkV "servar" ) noPrep;
 servera_vb_1_V2	= mkV2 ( mkV "serverar" ) noPrep;
 shoppa_vb_1_V	= mkV "shoppar" ;
 sia_vb_1_V2	= mkV2 ( mkV "siar" ) (mkPrep "om");
 sia_vb_1_VS	= mkVS ( mkV "siar" ) ;
 signalera_vb_2_V2	= mkV2 ( mkV "signalerar" ) noPrep;
 signera_vb_1_V2	= mkV2 ( mkV "signerar" ) noPrep;
 sikta_vb_21_V2	= mkV2 ( mkV "siktar" ) (mkPrep "på");
 sikta_vb_22_V2	= mkV2 ( mkV "siktar" ) noPrep;
 sikta_vb_2_VV	= mkV "siktar" ** {c2 = mkComplement [ "till att" ] ; lock_VV = <>} ;
 sila_vb_2_V2	= mkV2 ( mkV "silar" ) noPrep;
 simma_vb_1_V	= mkV "simmar" ;
 simulera_vb_1_V2	= mkV2 ( mkV "simulerar" ) noPrep;
 sina_vb_1_V	= mkV "sinar" ;
 singla_vb_1_V	= mkV "singlar" ;
 sippra_vb_1_V	= mkV "sipprar" ;
 sitta_vb_11_V	= mkV "sitta" "satt" "suttit" ;
 sitta_vb_12_V	= partV ( mkV "sitta" "satt" "suttit" ) "emellan";
 sitta_vb_13_V	= partV ( mkV "sitta" "satt" "suttit" ) "inne";
 sitta_vb_14_V	= partV ( mkV "sitta" "satt" "suttit" ) "åt";
 sitta_vb_1_V2	= mkV2 ( mkV "sitta" "satt" "suttit" ) (mkPrep "på");
 sjabbla_vb_1_V2	= mkV2 ( mkV "sjabblar" ) (mkPrep "med");
 sjoesaetta_vb_1_1_V2	= mkV2 ( mkV "sjösätta" "sjösätter" "sjösätt" "sjösatte" "sjösatt" "sjösatt" ) noPrep;
 sjuda_vb_1_V	= mkV "sjuda" "sjöd" "sjudit" ;
 sjukanmaela_vb_1_1_V	= reflV ( mkV "sjukanmäler" );
 sjukanmaela_vb_1_1_V2	= mkV2 (reflV ( mkV "sjukanmäler" )) noPrep;
 sjunga_vb_1_V	= mkV "sjunga" "sjöng" "sjungit" ;
 sjunka_vb_1_V	= mkV "sjunka" "sjönk" "sjunkit" ;
 skaada_vb_1_1_V2	= mkV2 ( mkV "skådar" ) noPrep;
 skaala_vb_1_1_V2	= mkV2 ( mkV "skålar" ) (mkPrep "med");
 skaalla_vb_1_1_V2	= mkV2 ( mkV "skållar" ) noPrep;
 skada_vb_1_V2	= mkV2 ( mkV "skadar" ) noPrep;
 skadskjuta_vb_1_V2	= mkV2 ( mkV "skadskjuta" "skadsköt" "skadskjutit" ) noPrep;
 skaella_vb_1_1_V2	= mkV2 ( mkV "skäller" ) (mkPrep "på");
 skaelva_vb_1_1_V	= mkV "skälva" "skalv" "skälv" ;
 skaemma_vb_1_1_V	= reflV (partV ( mkV "skämmer" ) "ut");
 skaemma_vb_1_11_V2	= mkV2 (partV ( mkV "skämmer" ) "bort") noPrep;
 skaemma_vb_1_12_V2	= mkV2 (partV ( mkV "skämmer" ) "ut") noPrep;
 skaemta_vb_1_1_V2	= mkV2 ( mkV "skämtar" ) (mkPrep "med");
 skaenda_vb_1_1_V2	= mkV2 ( mkV "skändar" ) noPrep;
 skaenka_vb_1_1_V2	= mkV2 ( mkV "skänker" ) noPrep;
 skaenka_vb_1_11_V3	= mkV3 ( mkV "skänker" ) noPrep (mkPrep "till");
 skaenka_vb_1_12_V3	= mkV3 ( mkV "skänker" ) noPrep noPrep;
 skaera_vb_1_11_V	= mkV "skära" "skar" "skurit" ;
 skaera_vb_1_12_V	= reflV ( mkV "skära" "skar" "skurit" );
 skaera_vb_1_1_V2	= mkV2 ( mkV "skära" "skar" "skurit" ) noPrep;
 skaerpa_vb_1_1_V	= reflV ( mkV "skärper" );
 skaerpa_vb_1_1_V2	= mkV2 ( mkV "skärper" ) noPrep;
 skaerskaada_vb_1_1_V2	= mkV2 ( mkV "skärskådar" ) noPrep;
 skaffa_vb_11_V2	= mkV2 ( mkV "skaffar" ) (mkPrep "fram");
 skaffa_vb_12_V2	= mkV2 (reflV ( mkV "skaffar" )) noPrep;
 skaka_vb_1_V	= mkV "skakar" ;
 skaka_vb_1_V2	= mkV2 (partV ( mkV "skakar" ) "på") noPrep;
 skala_vb_2_V2	= mkV2 ( mkV "skalar" ) noPrep;
 skalla_vb_2_V	= mkV "skallar" ;
 skalla_vb_2_V2	= mkV2 ( mkV "skallar" ) noPrep;
 skallra_vb_1_V	= mkV "skallrar" ;
 skandera_vb_1_V2	= mkV2 ( mkV "skanderar" ) noPrep;
 skapa_vb_1_V2	= mkV2 ( mkV "skapar" ) noPrep;
 skarva_vb_2_V2	= mkV2 ( mkV "skarvar" ) noPrep;
 skatta_vb_2_V	= mkV "skattar" ;
 skatta_vb_2_V2	= mkV2 ( mkV "skattar" ) noPrep;
 skatteplanera_vb_1_V	= mkV "skatteplanerar" ;
 ske_vb_1_V	= mkV "ske" "skedde" "skett" ;
 skela_vb_1_V	= mkV "skelar" ;
 skena_vb_1_V	= mkV "skenar" ;
 skeppa_vb_1_V2	= mkV2 ( mkV "skeppar" ) noPrep;
 skicka_vb_1_V2	= mkV2 ( mkV "skickar" ) noPrep;
 skifta_vb_2_V	= mkV "skiftar" ;
 skifta_vb_2_V2	= mkV2 ( mkV "skiftar" ) noPrep;
 skildra_vb_1_V2	= mkV2 ( mkV "skildrar" ) noPrep;
 skilja_vb_1_V2	= mkV2 (partV (reflV ( mkV "skilja" "skilde" "skilt" )) "2") (mkPrep "från");
 skilja_vb_11_V3	= mkV3 ( mkV "skilja" "skilde" "skilt" ) (mkPrep "mellan") (mkPrep "och");
 skilja_vb_12_V3	= mkV3 ( mkV "skilja" "skilde" "skilt" ) noPrep (mkPrep "från");
 skimra_vb_1_V	= mkV "skimrar" ;
 skina_vb_1_V	= mkV "skina" "sken" "skinit" ;
 skingras_vb_1_V2	= mkV2 ( mkV "skingras" ) noPrep;
 skinna_vb_1_V2	= mkV2 ( mkV "skinnar" ) noPrep;
 skippa_vb_1_V2	= mkV2 ( mkV "skippar" ) noPrep;
 skissera_vb_1_V2	= mkV2 ( mkV "skisserar" ) noPrep;
 skiva_vb_1_V2	= mkV2 ( mkV "skivar" ) noPrep;
 skjuta_vb_1_V	= partV ( mkV "skjuta" "sköt" "skjutit" ) "ut";
 skjuta_vb_11_V2	= mkV2 ( mkV "skjuta" "sköt" "skjutit" ) noPrep;
 skjuta_vb_12_V2	= mkV2 (partV ( mkV "skjuta" "sköt" "skjutit" ) "på") noPrep;
 skjuta_vb_13_V2	= mkV2 (partV ( mkV "skjuta" "sköt" "skjutit" ) "till") noPrep;
 skjutsa_vb_1_V2	= mkV2 ( mkV "skjutsar" ) noPrep;
 sko_vb_11_V2	= mkV2 ( mkV "skor" ) noPrep;
 sko_vb_12_V2	= mkV2 (reflV ( mkV "skor" )) (mkPrep "på");
 skockas_vb_11_V2	= mkV2 ( mkV "skockas" ) (mkPrep "kring");
 skockas_vb_12_V2	= mkV2 (reflV ( mkV "skockas" )) (mkPrep "kring");
 skoelja_vb_1_1_V	= mkV "skölja" "sköljde" "sköljt" ;
 skoelja_vb_1_1_V2	= mkV2 ( mkV "skölja" "sköljde" "sköljt" ) noPrep;
 skoenmaala_vb_1_1_V2	= mkV2 ( mkV "skönmålar" ) noPrep;
 skoerda_vb_1_1_V2	= mkV2 ( mkV "skördar" ) noPrep;
 skoeta_vb_1_1_V2	= mkV2 (partV ( mkV "sköter" ) "om") noPrep;
 skoevla_vb_1_1_V2	= mkV2 ( mkV "skövlar" ) noPrep;
 skoja_vb_21_V2	= mkV2 ( mkV "skojar" ) (mkPrep "med");
 skoja_vb_22_V2	= mkV2 ( mkV "skojar" ) noPrep;
 skoja_vb_23_V2	= mkV2 (reflV ( mkV "skojar" )) (mkPrep "till");
 skola_vb_1_V2	= mkV2 ( mkV "skolar" ) noPrep;
 skolka_vb_1_V2	= mkV2 ( mkV "skolkar" ) (mkPrep "från");
 skona_vb_1_V2	= mkV2 ( mkV "skonar" ) noPrep;
 skorra_vb_1_V	= mkV "skorrar" ;
 skotta_vb_1_V2	= mkV2 ( mkV "skottar" ) noPrep;
 skraala_vb_1_1_V	= mkV "skrålar" ;
 skraeddarsy_vb_1_1_V2	= mkV2 ( mkV "skräddarsyr" ) noPrep;
 skraella_vb_1_1_V	= mkV "skräller" ;
 skraemma_vb_1_1_V2	= mkV2 ( mkV "skrämmer" ) noPrep;
 skraena_vb_1_1_V	= mkV "skränar" ;
 skraepa_vb_1_1_V2	= mkV2 (partV ( mkV "skräpar" ) "ner") noPrep;
 skraevla_vb_1_1_V2	= mkV2 ( mkV "skrävlar" ) (mkPrep "om");
 skraevla_vb_1_1_VS	= mkVS ( mkV "skrävlar" ) ;
 skramla_vb_2_V	= mkV "skramlar" ;
 skramla_vb_2_V2	= mkV2 ( mkV "skramlar" ) (mkPrep "med");
 skrapa_vb_1_V2	= mkV2 ( mkV "skrapar" ) noPrep;
 skratta_vb_1_V2	= mkV2 ( mkV "skrattar" ) (mkPrep "åt");
 skreva_vb_1_V2	= mkV2 ( mkV "skrevar" ) (mkPrep "med");
 skrida_vb_1_V	= mkV "skrida" "skred" "skridit" ;
 skrika_vb_1_V	= mkV "skrika" "skrek" "skrikit" ;
 skrinlaegga_vb_1_1_V2	= mkV2 ( mkV "skrinlägga" "skrinlade" "skrinlagt" ) noPrep;
 skriva_vb_1_V	= mkV "skriva" "skrev" "skrivit" ;
 skriva_vb_1_V2	= mkV2 ( mkV "skriva" "skrev" "skrivit" ) noPrep;
 skriva_vb_1_VS	= mkVS ( mkV "skriva" "skrev" "skrivit" ) ;
 skrota_vb_2_V2	= mkV2 ( mkV "skrotar" ) noPrep;
 skrubba_vb_1_V	= reflV ( mkV "skrubbar" );
 skrubba_vb_1_V2	= mkV2 ( mkV "skrubbar" ) noPrep;
 skruva_vb_1_V2	= mkV2 ( mkV "skruvar" ) (mkPrep "i");
 skrymma_vb_1_V	= mkV "skrymmer" ;
 skrynkla_vb_1_V2	= mkV2 ( mkV "skrynklar" ) noPrep;
 skryta_vb_1_V2	= mkV2 ( mkV "skryta" "skröt" "skrutit" ) (mkPrep "med");
 skryta_vb_1_VS	= mkVS ( mkV "skryta" "skröt" "skrutit" ) ;
 skubba_vb_1_V	= mkV "skubbar" ;
 skubba_vb_1_V2	= mkV2 (reflV ( mkV "skubbar" )) (mkPrep "mot");
 skugga_vb_1_V2	= mkV2 ( mkV "skuggar" ) noPrep;
 skumma_vb_2_V	= mkV "skummar" ;
 skumma_vb_2_V2	= mkV2 ( mkV "skummar" ) noPrep;
 skumpa_vb_1_V	= mkV "skumpar" ;
 skura_vb_1_V2	= mkV2 ( mkV "skurar" ) noPrep;
 skutta_vb_1_V	= mkV "skuttar" ;
 skvaetta_vb_2_1_V2	= mkV2 ( mkV "skvätta" "skvätter" "skvätt" "skvätte" "skvätt" "skvätt" ) noPrep;
 skvala_vb_1_V	= mkV "skvalar" ;
 skvallra_vb_1_V2	= mkV2 ( mkV "skvallrar" ) (mkPrep "om");
 skvallra_vb_1_VS	= mkVS ( mkV "skvallrar" ) ;
 skvalpa_vb_1_V	= mkV "skvalpar" ;
 sky_vb_1_V2	= mkV2 ( mkV "skyr" ) noPrep;
 skydda_vb_1_V	= reflV ( mkV "skyddar" );
 skydda_vb_11_V2	= mkV2 ( mkV "skyddar" ) (mkPrep "mot");
 skydda_vb_12_V2	= mkV2 ( mkV "skyddar" ) noPrep;
 skyffla_vb_1_V2	= mkV2 ( mkV "skyfflar" ) noPrep;
 skygga_vb_1_V2	= mkV2 ( mkV "skyggar" ) (mkPrep "för");
 skyla_vb_1_V2	= mkV2 ( mkV "skyler" ) noPrep;
 skyldra_vb_1_V	= mkV "skyldrar" ;
 skylla_vb_1_V2	= mkV2 ( mkV "skyller" ) noPrep;
 skylla_vb_1_V3	= mkV3 ( mkV "skyller" ) noPrep (mkPrep "på");
 skylla_vb_1_VS	= mkVS ( mkV "skyller" ) ;
 skylta_vb_1_V2	= mkV2 ( mkV "skyltar" ) (mkPrep "med");
 skymfa_vb_1_V2	= mkV2 ( mkV "skymfar" ) noPrep;
 skymma_vb_1_V2	= mkV2 ( mkV "skymmer" ) noPrep;
 skymta_vb_1_V	= mkV "skymtar" ;
 skynda_vb_1_V	= mkV "skyndar" ;
 skynda_vb_1_V2	= mkV2 (partV ( mkV "skyndar" ) "på") noPrep;
 skynda_vb_1_VV	= mkV "skyndar" ** {c2 = mkComplement [ " att" ] ; lock_VV = <>} ;
 slaa_vb_1_11_V	= partV ( mkV "slå" "slog" "slagit" ) "igen";
 slaa_vb_1_12_V	= partV ( mkV "slå" "slog" "slagit" ) "igenom";
 slaa_vb_1_13_V	= partV ( mkV "slå" "slog" "slagit" ) "in";
 slaa_vb_1_14_V	= partV ( mkV "slå" "slog" "slagit" ) "runt";
 slaa_vb_1_15_V	= partV ( mkV "slå" "slog" "slagit" ) "till";
 slaa_vb_1_16_V	= partV (reflV ( mkV "slå" "slog" "slagit" )) "ner";
 slaa_vb_1_17_V	= reflV ( mkV "slå" "slog" "slagit" );
 slaa_vb_1_11_V2	= mkV2 ( mkV "slå" "slog" "slagit" ) (mkPrep "upp");
 slaa_vb_1_12_V2	= mkV2 ( mkV "slå" "slog" "slagit" ) noPrep;
 slaa_vb_1_13_V2	= mkV2 (partV ( mkV "slå" "slog" "slagit" ) "fast") noPrep;
 slaa_vb_1_14_V2	= mkV2 (partV ( mkV "slå" "slog" "slagit" ) "igen") noPrep;
 slaa_vb_1_15_V2	= mkV2 (partV ( mkV "slå" "slog" "slagit" ) "in") noPrep;
 slaa_vb_1_16_V2	= mkV2 (partV ( mkV "slå" "slog" "slagit" ) "till") noPrep;
 slaa_vb_1_17_V2	= mkV2 (partV ( mkV "slå" "slog" "slagit" ) "upp") noPrep;
 slaa_vb_1_1_VS	= mkVS (partV ( mkV "slå" "slog" "slagit" ) "fast") ;
 sladda_vb_1_V	= mkV "sladdar" ;
 sladdra_vb_1_V	= mkV "sladdrar" ;
 slaecka_vb_1_1_V2	= mkV2 ( mkV "släcker" ) noPrep;
 slaenga_vb_1_1_V	= mkV "slänger" ;
 slaenga_vb_1_1_V2	= mkV2 ( mkV "slänger" ) noPrep;
 slaentra_vb_1_1_V	= mkV "släntrar" ;
 slaepa_vb_1_11_V	= mkV "släpar" ;
 slaepa_vb_1_12_V	= partV ( mkV "släpar" ) "efter";
 slaepa_vb_1_13_V	= reflV ( mkV "släpar" );
 slaepa_vb_1_1_V2	= mkV2 (partV ( mkV "släpar" ) "på") noPrep;
 slaeppa_vb_1_1_V	= mkV "släpper" ;
 slaeppa_vb_1_11_V2	= mkV2 ( mkV "släpper" ) (mkPrep "ut");
 slaeppa_vb_1_12_V2	= mkV2 ( mkV "släpper" ) noPrep;
 slaeta_vb_1_1_V2	= mkV2 ( mkV "slätar" ) (mkPrep "ut");
 slakta_vb_1_V2	= mkV2 ( mkV "slaktar" ) noPrep;
 slamra_vb_1_V	= mkV "slamrar" ;
 slamra_vb_1_V2	= mkV2 ( mkV "slamrar" ) (mkPrep "med");
 slappa_vb_1_V	= mkV "slappar" ;
 slappna_vb_1_V	= mkV "slappnar" ;
 slarva_vb_11_V2	= mkV2 ( mkV "slarvar" ) (mkPrep "bort");
 slarva_vb_12_V2	= mkV2 ( mkV "slarvar" ) (mkPrep "med");
 slaska_vb_1_V	= mkV "slaskar" ;
 slava_vb_1_V	= mkV "slavar" ;
 slicka_vb_1_V2	= mkV2 ( mkV "slickar" ) noPrep;
 slingra_vb_1_V	= reflV ( mkV "slingrar" );
 slinka_vb_1_V	= mkV "slinka" "slank" "slunkit" ;
 slinta_vb_1_V	= mkV "slinta" "slant" "sluntit" ;
 slipa_vb_1_V2	= mkV2 ( mkV "slipar" ) noPrep;
 slippa_vb_1_V2	= mkV2 ( mkV "slippa" "slapp" "sluppit" ) noPrep;
 slippa_vb_1_VV	= mkV "slippa" "slapp" "sluppit" ** {c2 = mkComplement [ " att" ] ; lock_VV = <>} ;
 slira_vb_1_V	= mkV "slirar" ;
 slita_vb_1_V	= reflV ( mkV "slita" "slet" "slitit" );
 slita_vb_11_V2	= mkV2 ( mkV "slita" "slet" "slitit" ) (mkPrep "i");
 slita_vb_12_V2	= mkV2 ( mkV "slita" "slet" "slitit" ) (mkPrep "med");
 slita_vb_13_V2	= mkV2 ( mkV "slita" "slet" "slitit" ) (mkPrep "ut");
 slita_vb_14_V2	= mkV2 (partV ( mkV "slita" "slet" "slitit" ) "på") noPrep;
 slockna_vb_1_V	= mkV "slocknar" ;
 sloea_vb_1_1_V	= mkV "slöar" ;
 sloejda_vb_1_1_V	= mkV "slöjdar" ;
 sloesa_vb_1_1_V2	= mkV2 (partV ( mkV "slösar" ) "med") noPrep;
 sloetitta_vb_1_1_V2	= mkV2 ( mkV "slötittar" ) (mkPrep "på");
 sloka_vb_1_V	= mkV "slokar" ;
 slopa_vb_1_V2	= mkV2 ( mkV "slopar" ) noPrep;
 sluddra_vb_1_V	= mkV "sluddrar" ;
 sluka_vb_1_V2	= mkV2 ( mkV "slukar" ) noPrep;
 slumra_vb_1_V	= mkV "slumrar" ;
 slunga_vb_1_V2	= mkV2 ( mkV "slungar" ) noPrep;
 slussa_vb_1_V2	= mkV2 ( mkV "slussar" ) noPrep;
 sluta_vb_1_V	= mkV "slutar" ;
 sluta_vb_11_V2	= mkV2 ( mkV "slutar" ) (mkPrep "med");
 sluta_vb_12_V2	= mkV2 ( mkV "slutar" ) noPrep;
 sluta_vb_11_VV	= mkV "slutar" ** {c2 = mkComplement [ "med att" ] ; lock_VV = <>} ;
 sluta_vb_12_VV	= mkV "slutar" ** {c2 = mkComplement [ ] ; lock_VV = <>} ;
 sluta_vb_3_V	= reflV ( mkV "sluta" "slöt" "slutit" );
 sluta_vb_31_V2	= mkV2 ( mkV "sluta" "slöt" "slutit" ) noPrep;
 sluta_vb_32_V2	= mkV2 (partV ( mkV "sluta" "slöt" "slutit" ) "upp") (mkPrep "bakom");
 sluta_vb_33_V2	= mkV2 (reflV ( mkV "sluta" "slöt" "slutit" )) (mkPrep "till");
 sluta_vb_3_VS	= mkVS (reflV ( mkV "sluta" "slöt" "slutit" )) ;
 slutfoera_vb_1_1_V2	= mkV2 ( mkV "slutföra" "slutförde" "slutfört" ) noPrep;
 slutta_vb_1_V	= mkV "sluttar" ;
 smaale_vb_1_1_V	= mkV "småle" "smålog" "smålett" ;
 smacka_vb_1_V	= mkV "smackar" ;
 smaeda_vb_1_1_V2	= mkV2 ( mkV "smädar" ) noPrep;
 smaella_vb_2_1_V	= mkV "smälla" "small" "smäll" ;
 smaella_vb_2_11_V2	= mkV2 (partV ( mkV "smälla" "small" "smäll" ) "till") noPrep;
 smaella_vb_2_12_V2	= mkV2 (partV ( mkV "smälla" "small" "smäll" ) "upp") noPrep;
 smaelta_vb_2_1_V	= mkV "smälta" "smälter" "smält" "smälte" "smält" "smält" ;
 smaelta_vb_2_1_V2	= mkV2 ( mkV "smälta" "smälter" "smält" "smälte" "smält" "smält" ) noPrep;
 smaerta_vb_1_1_V	= mkV "smärtar" ;
 smaka_vb_2_V	= mkV "smakar" ;
 smaka_vb_21_V2	= mkV2 ( mkV "smakar" ) (mkPrep "på");
 smaka_vb_22_V2	= mkV2 ( mkV "smakar" ) noPrep;
 smaka_vb_23_V2	= mkV2 (partV ( mkV "smakar" ) "av") noPrep;
 smaksaetta_vb_1_1_V2	= mkV2 ( mkV "smaksätta" "smaksätter" "smaksätt" "smaksatte" "smaksatt" "smaksatt" ) noPrep;
 smalna_vb_1_V	= mkV "smalnar" ;
 smaska_vb_1_V	= mkV "smaskar" ;
 smattra_vb_1_V	= mkV "smattrar" ;
 smeka_vb_1_V2	= mkV2 ( mkV "smeker" ) noPrep;
 smeta_vb_1_V2	= mkV2 (partV ( mkV "smetar" ) "på") noPrep;
 smickra_vb_1_V2	= mkV2 ( mkV "smickrar" ) noPrep;
 smida_vb_1_V2	= mkV2 ( mkV "smida" "smidde" "smitt" ) noPrep;
 smila_vb_1_V	= mkV "smilar" ;
 sminka_vb_1_V2	= mkV2 ( mkV "sminkar" ) noPrep;
 smiska_vb_1_V2	= mkV2 ( mkV "smiskar" ) noPrep;
 smita_vb_1_V	= partV ( mkV "smita" "smet" "smitit" ) "åt";
 smita_vb_1_V2	= mkV2 ( mkV "smita" "smet" "smitit" ) (mkPrep "från");
 smitta_vb_1_V2	= mkV2 ( mkV "smittar" ) noPrep;
 smoerja_vb_1_1_V2	= mkV2 ( mkV "smörja" "smorde" "smort" ) noPrep;
 smuggla_vb_1_V2	= mkV2 ( mkV "smugglar" ) noPrep;
 smula_vb_1_V2	= mkV2 (partV ( mkV "smular" ) "sönder") noPrep;
 smussla_vb_1_V2	= mkV2 ( mkV "smusslar" ) (mkPrep "med");
 smutsa_vb_1_V2	= mkV2 (partV ( mkV "smutsar" ) "ner") noPrep;
 smutskasta_vb_1_V2	= mkV2 ( mkV "smutskastar" ) noPrep;
 smutta_vb_1_V2	= mkV2 ( mkV "smuttar" ) (mkPrep "på");
 smycka_vb_1_V2	= mkV2 ( mkV "smyckar" ) noPrep;
 smyga_vb_1_V	= mkV "smyga" "smög" "smugit" ;
 snaala_vb_1_1_V	= mkV "snålar" ;
 snacka_vb_1_V	= mkV "snackar" ;
 snaerja_vb_1_1_V2	= mkV2 ( mkV "snärja" "snärjde" "snärjt" ) noPrep;
 snaerta_vb_1_1_V2	= mkV2 (partV ( mkV "snärtar" ) "till") noPrep;
 snaesa_vb_1_1_V2	= mkV2 (partV ( mkV "snäser" ) "åt") noPrep;
 snagga_vb_1_V	= reflV ( mkV "snaggar" );
 snagga_vb_1_V2	= mkV2 (reflV ( mkV "snaggar" )) noPrep;
 snappa_vb_11_V2	= mkV2 ( mkV "snappar" ) (mkPrep "efter");
 snappa_vb_12_V2	= mkV2 (partV ( mkV "snappar" ) "upp") noPrep;
 snappa_vb_13_V2	= mkV2 (reflV ( mkV "snappar" )) (mkPrep "till");
 snappa_vb_1_VS	= mkVS (partV ( mkV "snappar" ) "upp") ;
 snarka_vb_1_V	= mkV "snarkar" ;
 snatta_vb_1_V	= mkV "snattar" ;
 snattra_vb_1_V	= mkV "snattrar" ;
 snava_vb_1_V2	= mkV2 ( mkV "snavar" ) (mkPrep "på");
 snedvrida_vb_1_V2	= mkV2 ( mkV "snedvrida" "snedvred" "snedvridit" ) noPrep;
 snegla_vb_1_V2	= mkV2 ( mkV "sneglar" ) (mkPrep "på");
 snickra_vb_1_V	= mkV "snickrar" ;
 snida_vb_1_V2	= mkV2 ( mkV "snidar" ) noPrep;
 sniffa_vb_1_V2	= mkV2 ( mkV "sniffar" ) (mkPrep "på");
 snitsa_vb_1_V	= mkV "snitsar" ;
 snitsa_vb_1_V2	= mkV2 ( mkV "snitsar" ) (mkPrep "till");
 snitsla_vb_1_V2	= mkV2 ( mkV "snitslar" ) noPrep;
 sno_vb_1_V	= reflV ( mkV "snor" );
 sno_vb_1_V2	= mkV2 ( mkV "snor" ) noPrep;
 sno_vb_1_V3	= mkV3 ( mkV "snor" ) noPrep (mkPrep "runt");
 snoera_vb_1_1_V2	= mkV2 ( mkV "snöra" "snörde" "snört" ) noPrep;
 snoerpa_vb_1_11_V2	= mkV2 ( mkV "snörper" ) (mkPrep "ihop");
 snoerpa_vb_1_12_V2	= mkV2 ( mkV "snörper" ) (mkPrep "på");
 snoervla_vb_1_1_V	= mkV "snörvlar" ;
 snoka_vb_1_V	= mkV "snokar" ;
 snoppa_vb_11_V2	= mkV2 ( mkV "snoppar" ) noPrep;
 snoppa_vb_12_V2	= mkV2 (partV ( mkV "snoppar" ) "av") noPrep;
 snora_vb_1_V	= mkV "snorar" ;
 snubbla_vb_1_V2	= mkV2 ( mkV "snubblar" ) (mkPrep "på");
 snudda_vb_1_V2	= mkV2 (partV ( mkV "snuddar" ) "vid") noPrep;
 snurra_vb_1_V	= mkV "snurrar" ;
 snurra_vb_1_V2	= mkV2 (partV ( mkV "snurrar" ) "på") noPrep;
 snusa_vb_1_V	= mkV "snusar" ;
 snuva_vb_1_V2	= mkV2 ( mkV "snuvar" ) noPrep;
 snyfta_vb_1_V	= mkV "snyftar" ;
 snylta_vb_1_V2	= mkV2 ( mkV "snyltar" ) (mkPrep "på");
 snyta_vb_1_V	= reflV ( mkV "snyta" "snöt" "snutit" );
 snyta_vb_1_V2	= mkV2 ( mkV "snyta" "snöt" "snutit" ) noPrep;
 socialisera_vb_1_V2	= mkV2 ( mkV "socialiserar" ) noPrep;
 sockra_vb_1_V2	= mkV2 ( mkV "sockrar" ) noPrep;
 soeka_vb_1_1_V2	= mkV2 ( mkV "söker" ) noPrep;
 soeka_vb_1_1_VV	= mkV "söker" ** {c2 = mkComplement [ ] ; lock_VV = <>} ;
 soela_vb_1_11_V	= mkV "sölar" ;
 soela_vb_1_12_V	= reflV ( mkV "sölar" );
 soela_vb_1_1_V2	= mkV2 ( mkV "sölar" ) (mkPrep "ner");
 soendra_vb_1_1_V2	= mkV2 ( mkV "söndrar" ) noPrep;
 soerja_vb_1_11_V2	= mkV2 ( mkV "sörja" "sörjde" "sörjt" ) noPrep;
 soerja_vb_1_12_V2	= mkV2 (partV ( mkV "sörja" "sörjde" "sörjt" ) "för") noPrep;
 soerja_vb_1_1_VS	= mkVS (partV ( mkV "sörja" "sörjde" "sörjt" ) "för") ;
 soerpla_vb_1_1_V2	= mkV2 ( mkV "sörplar" ) noPrep;
 soeta_vb_1_1_V2	= mkV2 ( mkV "sötar" ) noPrep;
 soeva_vb_1_1_V2	= mkV2 ( mkV "söver" ) noPrep;
 sola_vb_1_V	= reflV ( mkV "solar" );
 solbada_vb_1_V	= mkV "solbadar" ;
 somna_vb_1_V	= mkV "somnar" ;
 sona_vb_1_V2	= mkV2 ( mkV "sonar" ) noPrep;
 sondera_vb_1_V2	= mkV2 ( mkV "sonderar" ) noPrep;
 sopa_vb_11_V2	= mkV2 ( mkV "sopar" ) (mkPrep "ihop");
 sopa_vb_12_V2	= mkV2 ( mkV "sopar" ) noPrep;
 sorla_vb_1_V	= mkV "sorlar" ;
 sortera_vb_11_V2	= mkV2 ( mkV "sorterar" ) (mkPrep "under");
 sortera_vb_12_V2	= mkV2 ( mkV "sorterar" ) noPrep;
 sota_vb_2_V2	= mkV2 ( mkV "sotar" ) noPrep;
 sova_vb_1_V	= mkV "sova" "sov" "sovit" ;
 sovra_vb_1_V2	= mkV2 ( mkV "sovrar" ) (mkPrep "bland");
 spaa_vb_1_1_V2	= mkV2 ( mkV "spår" ) noPrep;
 spaara_vb_1_1_V	= partV ( mkV "spårar" ) "ur";
 spaara_vb_1_1_V2	= mkV2 (partV ( mkV "spårar" ) "upp") noPrep;
 spackla_vb_1_V2	= mkV2 ( mkV "spacklar" ) noPrep;
 spaeka_vb_1_1_V	= reflV ( mkV "späker" );
 spaenna_vb_1_1_V2	= mkV2 ( mkV "spänna" "spände" "spänt" ) noPrep;
 spaerra_vb_1_11_V2	= mkV2 ( mkV "spärrar" ) noPrep;
 spaerra_vb_1_12_V2	= mkV2 (partV ( mkV "spärrar" ) "upp") noPrep;
 spana_vb_1_V2	= mkV2 ( mkV "spanar" ) (mkPrep "efter");
 spankulera_vb_1_V	= mkV "spankulerar" ;
 spara_vb_21_V2	= mkV2 (partV ( mkV "sparar" ) "in") noPrep;
 spara_vb_22_V2	= mkV2 (partV ( mkV "sparar" ) "på") noPrep;
 sparkas_vb_1_V2	= mkV2 (partV ( mkV "sparkas" ) "på") noPrep;
 spatsera_vb_1_V	= mkV "spatserar" ;
 specialisera_vb_1_V2	= mkV2 (reflV ( mkV "specialiserar" )) (mkPrep "på");
 specialisera_vb_1_VV	= reflV ( mkV "specialiserar" ) ** {c2 = mkComplement [ "på att" ] ; lock_VV = <>} ;
 specificera_vb_1_V2	= mkV2 ( mkV "specificerar" ) noPrep;
 spegla_vb_1_V	= reflV ( mkV "speglar" );
 spegla_vb_1_V2	= mkV2 ( mkV "speglar" ) noPrep;
 speja_vb_1_V	= mkV "spejar" ;
 spekulera_vb_11_V2	= mkV2 ( mkV "spekulerar" ) (mkPrep "i");
 spekulera_vb_12_V2	= mkV2 ( mkV "spekulerar" ) (mkPrep "på");
 spekulera_vb_13_V2	= mkV2 ( mkV "spekulerar" ) (mkPrep "över");
 spela_vb_21_V2	= mkV2 ( mkV "spelar" ) noPrep;
 spela_vb_22_V2	= mkV2 (partV ( mkV "spelar" ) "in") noPrep;
 spela_vb_23_V2	= mkV2 (partV ( mkV "spelar" ) "på") noPrep;
 spendera_vb_1_V2	= mkV2 ( mkV "spenderar" ) noPrep;
 spetsa_vb_1_V2	= mkV2 ( mkV "spetsar" ) noPrep;
 spexa_vb_1_V	= mkV "spexar" ;
 spika_vb_1_V2	= mkV2 ( mkV "spikar" ) noPrep;
 spilla_vb_1_V2	= mkV2 ( mkV "spiller" ) noPrep;
 spinna_vb_1_V	= mkV "spinna" "spann" "spunnit" ;
 spinna_vb_1_V2	= mkV2 ( mkV "spinna" "spann" "spunnit" ) noPrep;
 spionera_vb_1_V2	= mkV2 ( mkV "spionerar" ) (mkPrep "på");
 spira_vb_1_V	= mkV "spirar" ;
 spisa_vb_1_V	= mkV "spisar" ;
 spjaelka_vb_1_1_V2	= mkV2 ( mkV "spjälkar" ) noPrep;
 spjaerna_vb_1_1_V	= partV ( mkV "spjärnar" ) "emot";
 splittra_vb_1_V2	= mkV2 ( mkV "splittrar" ) noPrep;
 spoea_vb_1_1_V2	= mkV2 ( mkV "spöar" ) noPrep;
 spoeka_vb_1_1_V	= mkV "spökar" ;
 spola_vb_11_V2	= mkV2 ( mkV "spolar" ) noPrep;
 spola_vb_12_V2	= mkV2 (partV ( mkV "spolar" ) "upp") noPrep;
 spoliera_vb_1_V2	= mkV2 ( mkV "spolierar" ) noPrep;
 sponsra_vb_1_V2	= mkV2 ( mkV "sponsrar" ) noPrep;
 sporra_vb_1_V2	= mkV2 ( mkV "sporrar" ) noPrep;
 spotta_vb_1_V	= mkV "spottar" ;
 spotta_vb_1_V2	= mkV2 (partV ( mkV "spottar" ) "ut") noPrep;
 spraecka_vb_1_1_V2	= mkV2 ( mkV "spräcker" ) noPrep;
 spraenga_vb_2_1_V	= mkV "spränger" ;
 spraenga_vb_2_1_V2	= mkV2 ( mkV "spränger" ) noPrep;
 spraetta_vb_1_1_V	= mkV "sprätta" "sprätter" "sprätt" "sprätte" "sprätt" "sprätt" ;
 spraetta_vb_2_1_V2	= mkV2 (partV ( mkV "sprättar" ) "upp") noPrep;
 spraka_vb_1_V	= mkV "sprakar" ;
 sprattla_vb_1_V	= mkV "sprattlar" ;
 spreja_vb_1_V2	= mkV2 ( mkV "sprejar" ) noPrep;
 spreta_vb_1_V	= mkV "spretar" ;
 spricka_vb_11_V	= mkV "spricka" "sprack" "spruckit" ;
 spricka_vb_12_V	= partV ( mkV "spricka" "sprack" "spruckit" ) "ut";
 sprida_vb_1_V2	= mkV2 ( mkV "sprida" "spred" "spritt" ) noPrep;
 springa_vb_1_V	= mkV "springa" "sprang" "sprungit" ;
 springa_vb_1_V2	= mkV2 (partV ( mkV "springa" "sprang" "sprungit" ) "efter") noPrep;
 spritta_vb_1_V	= mkV "spritta" "spratt" "spruttit" ;
 sprudla_vb_1_V2	= mkV2 ( mkV "sprudlar" ) (mkPrep "av");
 spruta_vb_1_V	= mkV "sprutar" ;
 spruta_vb_1_V2	= mkV2 ( mkV "sprutar" ) noPrep;
 spurta_vb_1_V	= mkV "spurtar" ;
 spy_vb_1_V	= mkV "spyr" ;
 spy_vb_1_V2	= mkV2 ( mkV "spyr" ) noPrep;
 staa_vb_1_11_V	= mkV "stå" "stod" "stått" ;
 staa_vb_1_12_V	= partV ( mkV "stå" "stod" "stått" ) "ut";
 staa_vb_1_13_V	= partV ( mkV "stå" "stod" "stått" ) "över";
 staa_vb_1_14_V	= reflV ( mkV "stå" "stod" "stått" );
 staa_vb_1_11_V2	= mkV2 ( mkV "stå" "stod" "stått" ) (mkPrep "för");
 staa_vb_1_12_V2	= mkV2 (partV ( mkV "stå" "stod" "stått" ) "tillbaka") (mkPrep "för");
 staangas_vb_1_1_V	= mkV "stångas" ;
 staanka_vb_1_1_V	= mkV "stånkar" ;
 staata_vb_1_1_V2	= mkV2 ( mkV "ståtar" ) (mkPrep "med");
 stabilisera_vb_1_V2	= mkV2 ( mkV "stabiliserar" ) noPrep;
 stadfaesta_vb_1_1_V2	= mkV2 ( mkV "stadfästa" "stadfäster" "stadfäst" "stadfäste" "stadfäst" "stadfäst" ) noPrep;
 stadga_vb_1_V2	= mkV2 ( mkV "stadgar" ) noPrep;
 stadga_vb_1_VS	= mkVS ( mkV "stadgar" ) ;
 staeda_vb_1_1_V2	= mkV2 ( mkV "städar" ) noPrep;
 staella_vb_1_11_V	= partV ( mkV "ställer" ) "upp";
 staella_vb_1_12_V	= partV (reflV ( mkV "ställer" )) "in";
 staella_vb_1_13_V	= reflV (partV ( mkV "ställer" ) "om");
 staella_vb_1_11_V2	= mkV2 ( mkV "ställer" ) noPrep;
 staella_vb_1_12_V2	= mkV2 (partV ( mkV "ställer" ) "in") noPrep;
 staella_vb_1_13_V2	= mkV2 (partV ( mkV "ställer" ) "om") noPrep;
 staella_vb_1_14_V2	= mkV2 (partV ( mkV "ställer" ) "samman") noPrep;
 staella_vb_1_15_V2	= mkV2 (partV ( mkV "ställer" ) "till") noPrep;
 staella_vb_1_16_V2	= mkV2 (partV ( mkV "ställer" ) "upp") (mkPrep "för");
 staella_vb_1_17_V2	= mkV2 (partV ( mkV "ställer" ) "upp") noPrep;
 staella_vb_1_18_V2	= mkV2 (partV ( mkV "ställer" ) "ut") noPrep;
 staella_vb_1_19_V2	= mkV2 (partV (partV ( mkV "ställer" ) "till") "med") noPrep;
 staella_vb_1_110_V2	= mkV2 (reflV (partV ( mkV "ställer" ) "in")) (mkPrep "på");
 staella_vb_1_1_VS	= mkVS (reflV (partV ( mkV "ställer" ) "in")) ;
 staemma_vb_1_1_V	= mkV "stämmer" ;
 staemma_vb_1_1_V2	= mkV2 ( mkV "stämmer" ) noPrep;
 staempla_vb_1_1_V2	= mkV2 ( mkV "stämplar" ) noPrep;
 staenga_vb_1_11_V2	= mkV2 ( mkV "stänger" ) noPrep;
 staenga_vb_1_12_V2	= mkV2 (partV ( mkV "stänger" ) "av") noPrep;
 staenka_vb_1_1_V2	= mkV2 ( mkV "stänker" ) noPrep;
 staerka_vb_1_1_V2	= mkV2 ( mkV "stärker" ) noPrep;
 staeva_vb_1_1_V	= mkV "stävar" ;
 staevja_vb_1_1_V2	= mkV2 ( mkV "stävjar" ) noPrep;
 stagnera_vb_1_V	= mkV "stagnerar" ;
 staka_vb_1_V	= reflV ( mkV "stakar" );
 staka_vb_11_V2	= mkV2 ( mkV "stakar" ) noPrep;
 staka_vb_12_V2	= mkV2 (partV ( mkV "stakar" ) "ut") noPrep;
 stamma_vb_2_V	= mkV "stammar" ;
 stamma_vb_2_V2	= mkV2 ( mkV "stammar" ) (mkPrep "från");
 stampa_vb_2_V	= mkV "stampar" ;
 standardisera_vb_1_V2	= mkV2 ( mkV "standardiserar" ) noPrep;
 stanna_vb_1_V	= mkV "stannar" ;
 stanna_vb_1_V2	= mkV2 ( mkV "stannar" ) noPrep;
 stansa_vb_1_V2	= mkV2 ( mkV "stansar" ) noPrep;
 stapla_vb_1_V2	= mkV2 ( mkV "staplar" ) noPrep;
 stappla_vb_1_V	= mkV "stapplar" ;
 starta_vb_1_V2	= mkV2 ( mkV "startar" ) noPrep;
 stationera_vb_1_V2	= mkV2 ( mkV "stationerar" ) noPrep;
 stava_vb_1_V2	= mkV2 (partV ( mkV "stavar" ) "till") noPrep;
 stega_vb_1_V	= mkV "stegar" ;
 stega_vb_1_V2	= mkV2 (partV ( mkV "stegar" ) "ut") noPrep;
 stegra_vb_1_V	= reflV ( mkV "stegrar" );
 stegra_vb_1_V2	= mkV2 ( mkV "stegrar" ) noPrep;
 steka_vb_1_V2	= mkV2 ( mkV "steker" ) noPrep;
 stelna_vb_1_V	= mkV "stelnar" ;
 stena_vb_1_V2	= mkV2 ( mkV "stenar" ) noPrep;
 stencilera_vb_1_V2	= mkV2 ( mkV "stencilerar" ) noPrep;
 sterilisera_vb_1_V	= reflV ( mkV "steriliserar" );
 sterilisera_vb_11_V2	= mkV2 ( mkV "steriliserar" ) noPrep;
 sterilisera_vb_12_V2	= mkV2 (reflV ( mkV "steriliserar" )) noPrep;
 sticka_vb_2_V2	= mkV2 ( mkV "stickar" ) noPrep;
 sticka_vb_31_V	= mkV "sticka" "stack" "stuckit" ;
 sticka_vb_32_V	= partV ( mkV "sticka" "stack" "stuckit" ) "upp";
 sticka_vb_31_V2	= mkV2 ( mkV "sticka" "stack" "stuckit" ) (mkPrep "från");
 sticka_vb_32_V2	= mkV2 ( mkV "sticka" "stack" "stuckit" ) noPrep;
 stifta_vb_1_V2	= mkV2 ( mkV "stiftar" ) noPrep;
 stiga_vb_11_V	= mkV "stiga" "steg" "stigit" ;
 stiga_vb_12_V	= partV ( mkV "stiga" "steg" "stigit" ) "upp";
 stiga_vb_11_V2	= mkV2 ( mkV "stiga" "steg" "stigit" ) (mkPrep "i");
 stiga_vb_12_V2	= mkV2 (partV ( mkV "stiga" "steg" "stigit" ) "av") noPrep;
 stilisera_vb_1_V2	= mkV2 ( mkV "stiliserar" ) noPrep;
 stilla_vb_1_V2	= mkV2 ( mkV "stillar" ) noPrep;
 stimma_vb_1_V	= mkV "stimmar" ;
 stimulera_vb_1_V2	= mkV2 ( mkV "stimulerar" ) noPrep;
 stinka_vb_1_V2	= mkV2 ( mkV "stinka" "stank" "stunkit" ) noPrep;
 stipulera_vb_1_V2	= mkV2 ( mkV "stipulerar" ) noPrep;
 stipulera_vb_1_VS	= mkVS ( mkV "stipulerar" ) ;
 stirra_vb_1_V2	= mkV2 ( mkV "stirrar" ) (mkPrep "på");
 stjaela_vb_1_1_V2	= mkV2 ( mkV "stjäla" "stjäl" "stjäl" "stal" "stulit" "stulen" ) noPrep;
 stjaelpa_vb_1_1_V2	= mkV2 ( mkV "stjälper" ) noPrep;
 stocka_vb_1_V	= reflV ( mkV "stockar" );
 stoedja_vb_1_1_V	= reflV ( mkV "stöda" "stödde" "stött" );
 stoedja_vb_1_1_V2	= mkV2 ( mkV "stöda" "stödde" "stött" ) noPrep;
 stoeka_vb_1_11_V	= mkV "stökar" ;
 stoeka_vb_1_12_V	= partV ( mkV "stökar" ) "till";
 stoeka_vb_1_1_V2	= mkV2 (partV ( mkV "stökar" ) "till") (mkPrep "i");
 stoena_vb_1_1_V	= mkV "stönar" ;
 stoepa_vb_1_1_V2	= mkV2 ( mkV "stöper" ) noPrep;
 stoera_vb_1_1_V2	= mkV2 ( mkV "störa" "störde" "stört" ) noPrep;
 stoerta_vb_1_1_V	= mkV "störtar" ;
 stoerta_vb_1_1_V2	= mkV2 ( mkV "störtar" ) noPrep;
 stoeta_vb_1_11_V2	= mkV2 ( mkV "stöter" ) noPrep;
 stoeta_vb_1_12_V2	= mkV2 (partV ( mkV "stöter" ) "på") noPrep;
 stoeta_vb_1_13_V2	= mkV2 (partV ( mkV "stöter" ) "till") noPrep;
 stoeta_vb_1_14_V2	= mkV2 (reflV ( mkV "stöter" )) (mkPrep "med");
 stoetta_vb_1_1_V2	= mkV2 ( mkV "stöttar" ) noPrep;
 stoevla_vb_1_1_V	= mkV "stövlar" ;
 stoja_vb_1_V	= mkV "stojar" ;
 stoltsera_vb_1_V2	= mkV2 ( mkV "stoltserar" ) (mkPrep "med");
 stoltsera_vb_1_VS	= mkVS ( mkV "stoltserar" ) ;
 stoppa_vb_1_V	= mkV "stoppar" ;
 stoppa_vb_11_V2	= mkV2 ( mkV "stoppar" ) noPrep;
 stoppa_vb_12_V2	= mkV2 (partV ( mkV "stoppar" ) "undan") noPrep;
 storkna_vb_1_V	= mkV "storknar" ;
 storma_vb_1_V2	= mkV2 ( mkV "stormar" ) noPrep;
 straala_vb_1_1_V	= mkV "strålar" ;
 straecka_vb_1_1_V	= reflV (partV ( mkV "sträcker" ) "på");
 straecka_vb_1_1_V2	= mkV2 (partV ( mkV "sträcker" ) "på") noPrep;
 straecklaesa_vb_1_1_V2	= mkV2 ( mkV "sträckläser" ) noPrep;
 straeva_vb_1_1_V2	= mkV2 ( mkV "strävar" ) (mkPrep "efter");
 straeva_vb_1_1_VV	= mkV "strävar" ** {c2 = mkComplement [ "efter att" ] ; lock_VV = <>} ;
 straffa_vb_1_V	= reflV ( mkV "straffar" );
 straffa_vb_1_V2	= mkV2 ( mkV "straffar" ) noPrep;
 strama_vb_1_V	= mkV "stramar" ;
 stranda_vb_1_V	= mkV "strandar" ;
 stranda_vb_1_V2	= mkV2 ( mkV "strandar" ) noPrep;
 strecka_vb_1_V	= mkV "streckar" ;
 strejka_vb_1_V	= mkV "strejkar" ;
 stressa_vb_1_V	= mkV "stressar" ;
 stressa_vb_1_V2	= mkV2 ( mkV "stressar" ) noPrep;
 streta_vb_1_V	= partV ( mkV "stretar" ) "emot";
 strida_vb_1_V2	= mkV2 ( mkV "strida" "stridde" "stritt" ) (mkPrep "mot");
 strila_vb_1_V	= mkV "strilar" ;
 strimla_vb_1_V2	= mkV2 ( mkV "strimlar" ) noPrep;
 strippa_vb_1_V	= mkV "strippar" ;
 stroe_vb_1_1_V2	= mkV2 ( mkV "strör" ) noPrep;
 stroemma_vb_1_1_V	= mkV "strömmar" ;
 stroeva_vb_1_1_V	= mkV "strövar" ;
 strosa_vb_1_V	= mkV "strosar" ;
 strunta_vb_1_V2	= mkV2 ( mkV "struntar" ) (mkPrep "i");
 strunta_vb_1_VV	= mkV "struntar" ** {c2 = mkComplement [ "i att" ] ; lock_VV = <>} ;
 strutta_vb_1_V	= mkV "struttar" ;
 stryka_vb_2_V	= partV ( mkV "stryka" "strök" "strukit" ) "med";
 stryka_vb_21_V2	= mkV2 ( mkV "stryka" "strök" "strukit" ) noPrep;
 stryka_vb_22_V2	= mkV2 (partV ( mkV "stryka" "strök" "strukit" ) "under") noPrep;
 stryka_vb_2_VS	= mkVS (partV ( mkV "stryka" "strök" "strukit" ) "under") ;
 strypa_vb_1_V2	= mkV2 ( mkV "stryper" ) noPrep;
 studera_vb_1_V2	= mkV2 ( mkV "studerar" ) noPrep;
 studsa_vb_1_V	= mkV "studsar" ;
 studsa_vb_1_V2	= mkV2 ( mkV "studsar" ) noPrep;
 stuka_vb_1_V2	= mkV2 ( mkV "stukar" ) noPrep;
 stulta_vb_1_V	= mkV "stultar" ;
 stunda_vb_1_V	= mkV "stundar" ;
 stupa_vb_1_V	= mkV "stupar" ;
 stuva_vb_1_V2	= mkV2 ( mkV "stuvar" ) noPrep;
 stycka_vb_11_V2	= mkV2 ( mkV "styckar" ) (mkPrep "av");
 stycka_vb_12_V2	= mkV2 ( mkV "styckar" ) noPrep;
 stympa_vb_1_V2	= mkV2 ( mkV "stympar" ) noPrep;
 styra_vb_1_V2	= mkV2 ( mkV "styra" "styrde" "styrt" ) noPrep;
 styrka_vb_1_V2	= mkV2 ( mkV "styrker" ) noPrep;
 styrka_vb_1_VS	= mkVS ( mkV "styrker" ) ;
 styvna_vb_1_V	= mkV "styvnar" ;
 subtrahera_vb_1_V3	= mkV3 ( mkV "subtraherar" ) noPrep (mkPrep "med");
 subventionera_vb_1_V2	= mkV2 ( mkV "subventionerar" ) noPrep;
 sucka_vb_1_V	= mkV "suckar" ;
 sudda_vb_1_V	= mkV "suddar" ;
 sudda_vb_1_V2	= mkV2 ( mkV "suddar" ) (mkPrep "ut");
 suga_vb_21_V2	= mkV2 ( mkV "suga" "sög" "sugit" ) (mkPrep "på");
 suga_vb_22_V2	= mkV2 ( mkV "suga" "sög" "sugit" ) (mkPrep "upp");
 suga_vb_23_V2	= mkV2 (partV ( mkV "suga" "sög" "sugit" ) "ut") noPrep;
 suggerera_vb_1_V2	= mkV2 ( mkV "suggererar" ) noPrep;
 sukta_vb_1_V2	= mkV2 ( mkV "suktar" ) (mkPrep "efter");
 summera_vb_1_V2	= mkV2 ( mkV "summerar" ) noPrep;
 sumpa_vb_1_V2	= mkV2 ( mkV "sumpar" ) noPrep;
 supa_vb_1_V	= mkV "supa" "söp" "supit" ;
 supera_vb_1_V2	= mkV2 ( mkV "superar" ) (mkPrep "med");
 sura_vb_1_V	= mkV "surar" ;
 surfa_vb_1_V	= mkV "surfar" ;
 surna_vb_1_V	= mkV "surnar" ;
 surra_vb_2_V	= mkV "surrar" ;
 surra_vb_2_V2	= mkV2 ( mkV "surrar" ) noPrep;
 susa_vb_1_V	= mkV "susar" ;
 suspendera_vb_1_V2	= mkV2 ( mkV "suspenderar" ) noPrep;
 sussa_vb_1_V	= mkV "sussar" ;
 svaelja_vb_1_1_V2	= mkV2 ( mkV "svälja" "svalde" "svalt" ) noPrep;
 svaella_vb_1_1_V	= mkV "sväller" ;
 svaelta_vb_2_1_V	= mkV "svälta" "svälter" "svält" "svalt" "svultit" "svält" ;
 svaenga_vb_2_11_V	= mkV "svänger" ;
 svaenga_vb_2_12_V	= partV ( mkV "svänger" ) "om";
 svaenga_vb_2_1_V2	= mkV2 ( mkV "svänger" ) noPrep;
 svaera_vb_1_1_V	= mkV "svära" "svor" "svurit" ;
 svaera_vb_1_1_VS	= mkVS (partV ( mkV "svära" "svor" "svurit" ) "på") ;
 svaera_vb_1_1_VV	= partV ( mkV "svära" "svor" "svurit" ) "på" ** {c2 = mkComplement [ " att" ] ; lock_VV = <>} ;
 svaerma_vb_1_1_V	= mkV "svärmar" ;
 svaerma_vb_1_1_V2	= mkV2 ( mkV "svärmar" ) (mkPrep "för");
 svaerta_vb_1_11_V2	= mkV2 ( mkV "svärtar" ) noPrep;
 svaerta_vb_1_12_V2	= mkV2 (partV ( mkV "svärtar" ) "ner") noPrep;
 svaeva_vb_1_1_V	= mkV "svävar" ;
 svaja_vb_1_V	= mkV "svajar" ;
 svalka_vb_1_V	= mkV "svalkar" ;
 svalla_vb_1_V	= mkV "svallar" ;
 svalna_vb_1_V	= mkV "svalnar" ;
 svamla_vb_1_V	= mkV "svamlar" ;
 svara_vb_11_V2	= mkV2 ( mkV "svarar" ) (mkPrep "med");
 svara_vb_12_V2	= mkV2 (partV ( mkV "svarar" ) "för") noPrep;
 svara_vb_13_V2	= mkV2 (partV ( mkV "svarar" ) "mot") noPrep;
 svara_vb_11_VS	= mkVS ( mkV "svarar" ) ;
 svara_vb_12_VS	= mkVS (partV ( mkV "svarar" ) "för") ;
 svara_vb_1_VV	= mkV "svarar" ** {c2 = mkComplement [ "med att" ] ; lock_VV = <>} ;
 svartmaala_vb_1_1_V2	= mkV2 ( mkV "svartmålar" ) noPrep;
 svarva_vb_1_V2	= mkV2 ( mkV "svarvar" ) noPrep;
 svepa_vb_1_V	= mkV "sveper" ;
 svepa_vb_1_V2	= mkV2 ( mkV "sveper" ) noPrep;
 svetsa_vb_1_V	= mkV "svetsar" ;
 svettas_vb_1_V	= mkV "svettas" ;
 svida_vb_1_V	= mkV "svida" "sved" "svidit" ;
 svika_vb_1_V	= mkV "svika" "svek" "svikit" ;
 svika_vb_1_V2	= mkV2 ( mkV "svika" "svek" "svikit" ) noPrep;
 svikta_vb_1_V	= mkV "sviktar" ;
 svimma_vb_1_V	= mkV "svimmar" ;
 svindla_vb_2_V	= mkV "svindlar" ;
 svindla_vb_2_V2	= mkV2 ( mkV "svindlar" ) noPrep;
 svinga_vb_2_V	= reflV ( mkV "svingar" );
 svinga_vb_2_V2	= mkV2 ( mkV "svingar" ) noPrep;
 svullna_vb_1_V	= mkV "svullnar" ;
 sy_vb_11_V2	= mkV2 ( mkV "syr" ) noPrep;
 sy_vb_12_V2	= mkV2 (partV ( mkV "syr" ) "ihop") noPrep;
 syfta_vb_11_V2	= mkV2 ( mkV "syftar" ) (mkPrep "på");
 syfta_vb_12_V2	= mkV2 ( mkV "syftar" ) (mkPrep "till");
 syfta_vb_1_VV	= mkV "syftar" ** {c2 = mkComplement [ "till att" ] ; lock_VV = <>} ;
 sylta_vb_1_V2	= mkV2 ( mkV "syltar" ) noPrep;
 symbolisera_vb_1_V2	= mkV2 ( mkV "symboliserar" ) noPrep;
 sympatisera_vb_1_V2	= mkV2 ( mkV "sympatiserar" ) (mkPrep "med");
 syna_vb_1_V2	= mkV2 ( mkV "synar" ) noPrep;
 synkronisera_vb_1_V3	= mkV3 ( mkV "synkroniserar" ) noPrep (mkPrep "med");
 sysselsaetta_vb_1_11_V2	= mkV2 ( mkV "sysselsätta" "sysselsätter" "sysselsätt" "sysselsatte" "sysselsatt" "sysselsatt" ) noPrep;
 sysselsaetta_vb_1_12_V2	= mkV2 (reflV ( mkV "sysselsätta" "sysselsätter" "sysselsätt" "sysselsatte" "sysselsatt" "sysselsatt" )) (mkPrep "med");
 syssla_vb_1_V2	= mkV2 ( mkV "sysslar" ) (mkPrep "med");
 ta_vb_11_V	= mkV "ta" "tar" "ta" "tog" "tagit" "tagen" ;
 ta_vb_12_V	= reflV (partV ( mkV "ta" "tar" "ta" "tog" "tagit" "tagen" ) "igen");
 ta_vb_11_V2	= mkV2 ( mkV "ta" "tar" "ta" "tog" "tagit" "tagen" ) noPrep;
 ta_vb_12_V2	= mkV2 (partV ( mkV "ta" "tar" "ta" "tog" "tagit" "tagen" ) "efter") noPrep;
 ta_vb_13_V2	= mkV2 (partV ( mkV "ta" "tar" "ta" "tog" "tagit" "tagen" ) "emot") noPrep;
 ta_vb_14_V2	= mkV2 (partV ( mkV "ta" "tar" "ta" "tog" "tagit" "tagen" ) "in") (mkPrep "på");
 ta_vb_15_V2	= mkV2 (partV ( mkV "ta" "tar" "ta" "tog" "tagit" "tagen" ) "in") noPrep;
 ta_vb_16_V2	= mkV2 (partV ( mkV "ta" "tar" "ta" "tog" "tagit" "tagen" ) "miste") (mkPrep "på");
 ta_vb_17_V2	= mkV2 (partV ( mkV "ta" "tar" "ta" "tog" "tagit" "tagen" ) "upp") noPrep;
 ta_vb_18_V2	= mkV2 (partV ( mkV "ta" "tar" "ta" "tog" "tagit" "tagen" ) "över") noPrep;
 ta_vb_19_V2	= mkV2 (partV (partV ( mkV "ta" "tar" "ta" "tog" "tagit" "tagen" ) "fasta") "på") noPrep;
 ta_vb_110_V2	= mkV2 (partV (partV ( mkV "ta" "tar" "ta" "tog" "tagit" "tagen" ) "reda") "på") noPrep;
 ta_vb_111_V2	= mkV2 (partV (reflV ( mkV "ta" "tar" "ta" "tog" "tagit" "tagen" )) "an") noPrep;
 ta_vb_112_V2	= mkV2 (partV (reflV ( mkV "ta" "tar" "ta" "tog" "tagit" "tagen" )) "för") noPrep;
 ta_vb_113_V2	= mkV2 (partV (reflV ( mkV "ta" "tar" "ta" "tog" "tagit" "tagen" )) "till") (mkPrep "med");
 ta_vb_114_V2	= mkV2 (reflV (partV ( mkV "ta" "tar" "ta" "tog" "tagit" "tagen" ) "på")) noPrep;
 ta_vb_115_V2	= mkV2 (reflV (partV ( mkV "ta" "tar" "ta" "tog" "tagit" "tagen" ) "åt")) noPrep;
 ta_vb_1_VQ	= mkVQ (partV (partV ( mkV "ta" "tar" "ta" "tog" "tagit" "tagen" ) "reda") "på") ;
 ta_vb_11_VS	= mkVS (partV (partV ( mkV "ta" "tar" "ta" "tog" "tagit" "tagen" ) "fasta") "på") ;
 ta_vb_12_VS	= mkVS (partV (partV ( mkV "ta" "tar" "ta" "tog" "tagit" "tagen" ) "reda") "på") ;
 ta_vb_11_VV	= partV (reflV ( mkV "ta" "tar" "ta" "tog" "tagit" "tagen" )) "för" ** {c2 = mkComplement [ " att" ] ; lock_VV = <>} ;
 ta_vb_12_VV	= partV (reflV ( mkV "ta" "tar" "ta" "tog" "tagit" "tagen" )) "till" ** {c2 = mkComplement [ "med att" ] ; lock_VV = <>} ;
 taaga_vb_1_1_V	= mkV "tågar" ;
 taala_vb_1_1_V2	= mkV2 ( mkV "tåla" "tål" "tål" "tålde" "tålt" "tåld" ) noPrep;
 taala_vb_1_1_VS	= mkVS ( mkV "tåla" "tål" "tål" "tålde" "tålt" "tåld" ) ;
 taaras_vb_1_1_V	= mkV "tåras" ;
 tacka_vb_1_V2	= mkV2 ( mkV "tackar" ) noPrep;
 tackla_vb_1_V2	= mkV2 ( mkV "tacklar" ) noPrep;
 taecka_vb_1_11_V2	= mkV2 ( mkV "täcker" ) noPrep;
 taecka_vb_1_12_V2	= mkV2 (partV ( mkV "täcker" ) "över") noPrep;
 taelja_vb_2_1_V	= mkV "tälja" "täljde" "täljt" ;
 taelta_vb_1_1_V	= mkV "tältar" ;
 taemja_vb_1_1_V2	= mkV2 ( mkV "tämja" "tämjde" "tämjt" ) noPrep;
 taenda_vb_1_1_V	= mkV "tänder" ;
 taenda_vb_1_11_V2	= mkV2 ( mkV "tänder" ) (mkPrep "på");
 taenda_vb_1_12_V2	= mkV2 ( mkV "tänder" ) noPrep;
 taenja_vb_1_1_V2	= mkV2 (partV ( mkV "tänja" "tänjde" "tänjt" ) "på") noPrep;
 taenka_vb_1_1_V	= partV ( mkV "tänker" ) "om";
 taenka_vb_1_11_V2	= mkV2 ( mkV "tänker" ) (mkPrep "på");
 taenka_vb_1_12_V2	= mkV2 (partV ( mkV "tänker" ) "ut") noPrep;
 taenka_vb_1_13_V2	= mkV2 (partV ( mkV "tänker" ) "över") noPrep;
 taenka_vb_1_11_VS	= mkVS ( mkV "tänker" ) ;
 taenka_vb_1_12_VS	= mkVS (reflV ( mkV "tänker" )) ;
 taenka_vb_1_11_VV	= mkV "tänker" ** {c2 = mkComplement [ ] ; lock_VV = <>} ;
 taenka_vb_1_12_VV	= reflV ( mkV "tänker" ) ** {c2 = mkComplement [ " att" ] ; lock_VV = <>} ;
 taera_vb_1_1_V2	= mkV2 ( mkV "tära" "tärde" "tärt" ) (mkPrep "på");
 taerna_vb_1_1_V2	= mkV2 ( mkV "tärnar" ) noPrep;
 taeta_vb_1_1_V2	= mkV2 ( mkV "tätar" ) noPrep;
 taevla_vb_1_1_V2	= mkV2 ( mkV "tävlar" ) (mkPrep "med");
 tafsa_vb_1_V2	= mkV2 ( mkV "tafsar" ) (mkPrep "på");
 tampas_vb_1_V2	= mkV2 ( mkV "tampas" ) (mkPrep "med");
 tangera_vb_1_V2	= mkV2 ( mkV "tangerar" ) noPrep;
 tanka_vb_1_V2	= mkV2 ( mkV "tankar" ) noPrep;
 tapetsera_vb_1_V2	= mkV2 ( mkV "tapetserar" ) noPrep;
 tappa_vb_11_V2	= mkV2 ( mkV "tappar" ) noPrep;
 tappa_vb_12_V2	= mkV2 (partV ( mkV "tappar" ) "i") noPrep;
 tarva_vb_1_V2	= mkV2 ( mkV "tarvar" ) noPrep;
 tassa_vb_1_V	= mkV "tassar" ;
 tatuera_vb_1_V2	= mkV2 ( mkV "tatuerar" ) noPrep;
 taxera_vb_1_V2	= mkV2 ( mkV "taxerar" ) noPrep;
 teckna_vb_1_V2	= mkV2 ( mkV "tecknar" ) noPrep;
 teckna_vb_1_V2S	= mkV2S ( mkV "tecknar" ) (mkPrep "åt");
 teckna_vb_1_VV	= mkV "tecknar" ** {c2 = mkComplement [ "åt att" ] ; lock_VV = <>} ;
 tejpa_vb_1_V2	= mkV2 ( mkV "tejpar" ) noPrep;
 telefonera_vb_1_V2	= mkV2 ( mkV "telefonerar" ) (mkPrep "till");
 telegrafera_vb_1_V2	= mkV2 ( mkV "telegraferar" ) (mkPrep "till");
 tendera_vb_1_VV	= mkV "tenderar" ** {c2 = mkComplement [ " att" ] ; lock_VV = <>} ;
 tenta_vb_1_V	= mkV "tentar" ;
 tentera_vb_11_V2	= mkV2 ( mkV "tenterar" ) (mkPrep "i");
 tentera_vb_12_V2	= mkV2 ( mkV "tenterar" ) noPrep;
 testa_vb_1_V2	= mkV2 ( mkV "testar" ) noPrep;
 texta_vb_1_V2	= mkV2 ( mkV "textar" ) noPrep;
 ticka_vb_1_V	= mkV "tickar" ;
 tiga_vb_1_V	= mkV "tiga" "teg" "tigit" ;
 tigga_vb_1_V2	= mkV2 (partV ( mkV "tigger" ) "om") noPrep;
 tigga_vb_1_VS	= mkVS (partV ( mkV "tigger" ) "om") ;
 tillaata_vb_1_1_V2	= mkV2 ( mkV "tillåta" "tillät" "tillåtit" ) noPrep;
 tillaata_vb_1_1_VS	= mkVS ( mkV "tillåta" "tillät" "tillåtit" ) ;
 tillaegga_vb_1_1_V2	= mkV2 ( mkV "tillägga" "tillade" "tillagt" ) noPrep;
 tillaegga_vb_1_1_VS	= mkVS ( mkV "tillägga" "tillade" "tillagt" ) ;
 tillaegna_vb_1_1_V2	= mkV2 (reflV ( mkV "tillägnar" )) noPrep;
 tillaegna_vb_1_1_V3	= mkV3 ( mkV "tillägnar" ) noPrep noPrep;
 tillaempa_vb_1_1_V2	= mkV2 ( mkV "tillämpar" ) noPrep;
 tillbakavisa_vb_1_V2	= mkV2 ( mkV "tillbakavisar" ) noPrep;
 tillbe_vb_1_V2	= mkV2 ( mkV "tillbe" "tillbad" "tillbett" ) noPrep;
 tillbringa_vb_1_V	= mkV "tillbringar" ;
 tilldela_vb_1_V3	= mkV3 ( mkV "tilldelar" ) noPrep noPrep;
 tilldoema_vb_1_1_V3	= mkV3 ( mkV "tilldömer" ) noPrep noPrep;
 tillerkaenna_vb_1_1_V3	= mkV3 ( mkV "tillerkänna" "tillerkände" "tillerkänt" ) noPrep noPrep;
 tillfaangata_vb_1_1_V2	= mkV2 ( mkV "tillfångata" "tillfångatar" "tillfångata" "tillfångatog" "tillfångatagit" "tillfångatagen" ) noPrep;
 tillfalla_vb_1_V2	= mkV2 ( mkV "tillfalla" "tillföll" "tillfallit" ) noPrep;
 tillfoera_vb_1_1_V2	= mkV2 ( mkV "tillföra" "tillförde" "tillfört" ) noPrep;
 tillfoersaekra_vb_1_1_V3	= mkV3 ( mkV "tillförsäkrar" ) noPrep noPrep;
 tillfoga_vb_1_V2	= mkV2 ( mkV "tillfogar" ) noPrep;
 tillfoga_vb_1_V3	= mkV3 ( mkV "tillfogar" ) noPrep noPrep;
 tillfredsstaella_vb_1_1_V2	= mkV2 ( mkV "tillfredsställer" ) noPrep;
 tillfriskna_vb_1_V	= mkV "tillfrisknar" ;
 tillgodose_vb_1_V2	= mkV2 ( mkV "tillgodose" "tillgodosåg" "tillgodosett" ) noPrep;
 tillgripa_vb_1_V2	= mkV2 ( mkV "tillgripa" "tillgrep" "tillgripit" ) noPrep;
 tillhandahaalla_vb_1_1_V2	= mkV2 ( mkV "tillhandahålla" "tillhandahöll" "tillhandahållit" ) noPrep;
 tillhoera_vb_1_1_V2	= mkV2 ( mkV "tillhöra" "tillhörde" "tillhört" ) noPrep;
 tillintetgoera_vb_1_1_V2	= mkV2 ( mkV "tillintetgöra" "tillintetgjorde" "tillintetgjort" ) noPrep;
 tillkaennage_vb_1_1_V2	= mkV2 ( mkV "tillkännage" "tillkännager" "tillkännage" "tillkännagav" "tillkännagett" "tillkännagiven" ) noPrep;
 tillkaennage_vb_1_1_VS	= mkVS ( mkV "tillkännage" "tillkännager" "tillkännage" "tillkännagav" "tillkännagett" "tillkännagiven" ) ;
 tillkalla_vb_1_V2	= mkV2 ( mkV "tillkallar" ) noPrep;
 tillkomma_vb_1_V	= mkV "tillkomma" "tillkom" "tillkommit" ;
 tillkomma_vb_1_V2	= mkV2 ( mkV "tillkomma" "tillkom" "tillkommit" ) noPrep;
 tillmaeta_vb_1_1_V3	= mkV3 ( mkV "tillmäter" ) noPrep noPrep;
 tilloenska_vb_1_1_V3	= mkV3 ( mkV "tillönskar" ) noPrep noPrep;
 tillraettalaegga_vb_1_1_V2	= mkV2 ( mkV "tillrättalägga" "tillrättalade" "tillrättalagt" ) noPrep;
 tillraettavisa_vb_1_1_V2	= mkV2 ( mkV "tillrättavisar" ) noPrep;
 tillreda_vb_1_V2	= mkV2 ( mkV "tillreda" "tillredde" "tillrett" ) noPrep;
 tillryggalaegga_vb_1_1_V2	= mkV2 ( mkV "tillryggalägga" "tillryggalade" "tillryggalagt" ) noPrep;
 tillsaetta_vb_1_1_V2	= mkV2 ( mkV "tillsätta" "tillsätter" "tillsätt" "tillsatte" "tillsatt" "tillsatt" ) noPrep;
 tillskriva_vb_1_V3	= mkV3 ( mkV "tillskriva" "tillskrev" "tillskrivit" ) noPrep noPrep;
 tillsluta_vb_1_V2	= mkV2 ( mkV "tillsluta" "tillslöt" "tillslutit" ) noPrep;
 tillstoeta_vb_1_1_V	= mkV "tillstöter" ;
 tillstyrka_vb_1_V2	= mkV2 ( mkV "tillstyrker" ) noPrep;
 tillstyrka_vb_1_VS	= mkVS ( mkV "tillstyrker" ) ;
 tillta_vb_1_V	= mkV "tillta" "tilltar" "tillta" "tilltog" "tilltagit" "tilltagen" ;
 tilltala_vb_1_V2	= mkV2 ( mkV "tilltalar" ) noPrep;
 tilltraeda_vb_1_1_V2	= mkV2 ( mkV "tillträda" "tillträdde" "tillträtt" ) noPrep;
 tillvarata_vb_1_V2	= mkV2 ( mkV "tillvarata" "tillvaratar" "tillvarata" "tillvaratog" "tillvaratagit" "tillvaratagen" ) noPrep;
 tillverka_vb_1_V2	= mkV2 ( mkV "tillverkar" ) noPrep;
 tina_vb_1_V	= partV ( mkV "tinar" ) "upp";
 tina_vb_1_V2	= mkV2 (partV ( mkV "tinar" ) "upp") noPrep;
 tindra_vb_1_V	= mkV "tindrar" ;
 tippa_vb_1_V	= mkV "tippar" ;
 tippa_vb_1_V2	= mkV2 ( mkV "tippar" ) noPrep;
 tippa_vb_1_VS	= mkVS ( mkV "tippar" ) ;
 tipsa_vb_1_V3	= mkV3 ( mkV "tipsar" ) noPrep (mkPrep "om");
 titta_vb_11_V	= partV ( mkV "tittar" ) "in";
 titta_vb_12_V	= partV ( mkV "tittar" ) "på";
 titta_vb_1_V2	= mkV2 ( mkV "tittar" ) (mkPrep "på");
 tjaena_vb_1_1_V	= mkV "tjänar" ;
 tjaena_vb_1_11_V2	= mkV2 ( mkV "tjänar" ) (mkPrep "på");
 tjaena_vb_1_12_V2	= mkV2 ( mkV "tjänar" ) noPrep;
 tjaenstgoera_vb_1_1_V	= mkV "tjänstgöra" "tjänstgjorde" "tjänstgjort" ;
 tjafsa_vb_1_V	= mkV "tjafsar" ;
 tjalla_vb_1_V	= mkV "tjallar" ;
 tjata_vb_1_V2	= mkV2 ( mkV "tjatar" ) (mkPrep "på");
 tjattra_vb_1_V	= mkV "tjattrar" ;
 tjura_vb_1_V	= mkV "tjurar" ;
 tjusa_vb_1_V2	= mkV2 ( mkV "tjusar" ) noPrep;
 tjuta_vb_1_V	= mkV "tjuta" "tjöt" "tjutit" ;
 toeja_vb_1_1_V	= reflV (partV ( mkV "töja" "töjde" "töjt" ) "ut");
 toeja_vb_1_1_V2	= mkV2 (partV ( mkV "töja" "töjde" "töjt" ) "på") noPrep;
 toemma_vb_1_1_V2	= mkV2 ( mkV "tömmer" ) noPrep;
 toersta_vb_1_1_V2	= mkV2 ( mkV "törstar" ) (mkPrep "efter");
 tolerera_vb_1_V2	= mkV2 ( mkV "tolererar" ) noPrep;
 tolerera_vb_1_VS	= mkVS ( mkV "tolererar" ) ;
 tolka_vb_1_V2	= mkV2 ( mkV "tolkar" ) noPrep;
 tona_vb_11_V2	= mkV2 ( mkV "tonar" ) noPrep;
 tona_vb_12_V2	= mkV2 (partV ( mkV "tonar" ) "ned") noPrep;
 toppa_vb_1_V2	= mkV2 ( mkV "toppar" ) noPrep;
 torka_vb_11_V	= mkV "torkar" ;
 torka_vb_12_V	= reflV ( mkV "torkar" );
 torka_vb_11_V2	= mkV2 ( mkV "torkar" ) (mkPrep "upp");
 torka_vb_12_V2	= mkV2 ( mkV "torkar" ) noPrep;
 torna_vb_1_V	= reflV (partV ( mkV "tornar" ) "upp");
 torrlaegga_vb_1_1_V2	= mkV2 ( mkV "torrlägga" "torrlade" "torrlagt" ) noPrep;
 tortera_vb_1_V2	= mkV2 ( mkV "torterar" ) noPrep;
 toucha_vb_1_V2	= mkV2 ( mkV "touchar" ) noPrep;
 traaka_vb_1_11_V2	= mkV2 ( mkV "tråkar" ) noPrep;
 traaka_vb_1_12_V2	= mkV2 (partV ( mkV "tråkar" ) "ut") noPrep;
 trae_vb_1_1_V2	= mkV2 ( mkV "trär" ) noPrep;
 traeffas_vb_1_1_V	= mkV "träffas" ;
 traeffas_vb_1_1_V2	= mkV2 ( mkV "träffas" ) noPrep;
 traena_vb_1_1_V	= reflV ( mkV "tränar" );
 traena_vb_1_1_V2	= mkV2 ( mkV "tränar" ) noPrep;
 traengas_vb_1_11_V	= mkV "trängs" ;
 traengas_vb_1_12_V	= reflV ( mkV "trängs" );
 traengas_vb_1_11_V2	= mkV2 ( mkV "trängs" ) (mkPrep "med");
 traengas_vb_1_12_V2	= mkV2 ( mkV "trängs" ) noPrep;
 traengta_vb_1_1_V2	= mkV2 ( mkV "trängtar" ) (mkPrep "efter");
 traeta_vb_1_1_V2	= mkV2 ( mkV "träter" ) (mkPrep "med");
 trafikera_vb_1_V2	= mkV2 ( mkV "trafikerar" ) noPrep;
 traggla_vb_1_V2	= mkV2 (partV ( mkV "tragglar" ) "med") noPrep;
 trakassera_vb_1_V2	= mkV2 ( mkV "trakasserar" ) noPrep;
 trakta_vb_1_V2	= mkV2 ( mkV "traktar" ) (mkPrep "efter");
 traktera_vb_1_V2	= mkV2 ( mkV "trakterar" ) noPrep;
 traktera_vb_1_V3	= mkV3 ( mkV "trakterar" ) noPrep (mkPrep "med");
 tralla_vb_1_V	= mkV "trallar" ;
 trampa_vb_1_V2	= mkV2 ( mkV "trampar" ) (mkPrep "på");
 transferera_vb_1_V2	= mkV2 ( mkV "transfererar" ) noPrep;
 transplantera_vb_1_V2	= mkV2 ( mkV "transplanterar" ) noPrep;
 transportera_vb_1_V2	= mkV2 ( mkV "transporterar" ) noPrep;
 traska_vb_1_V	= mkV "traskar" ;
 trassla_vb_11_V2	= mkV2 ( mkV "trasslar" ) (mkPrep "till");
 trassla_vb_12_V2	= mkV2 (reflV ( mkV "trasslar" )) (mkPrep "in i");
 trava_vb_1_V	= mkV "travar" ;
 trava_vb_1_V2	= mkV2 ( mkV "travar" ) noPrep;
 tredskas_vb_1_V	= mkV "tredskas" ;
 treva_vb_1_V	= reflV ( mkV "trevar" );
 treva_vb_1_V2	= mkV2 ( mkV "trevar" ) (mkPrep "efter");
 tricksa_vb_1_V	= mkV "tricksar" ;
 trilla_vb_1_V	= mkV "trillar" ;
 trilskas_vb_1_V	= mkV "trilskas" ;
 trimma_vb_1_V2	= mkV2 ( mkV "trimmar" ) noPrep;
 trippa_vb_1_V	= mkV "trippar" ;
 triumfera_vb_1_V2	= mkV2 ( mkV "triumferar" ) (mkPrep "över");
 trivas_vb_1_V2	= mkV2 ( mkV "trivs" ) (mkPrep "med");
 tro_vb_1_V2	= mkV2 ( mkV "tror" ) (mkPrep "på");
 tro_vb_1_VS	= mkVS ( mkV "tror" ) ;
 tro_vb_1_VV	= reflV ( mkV "tror" ) ** {c2 = mkComplement [ ] ; lock_VV = <>} ;
 troeska_vb_1_1_V	= mkV "tröskar" ;
 troesta_vb_1_11_V2	= mkV2 ( mkV "tröstar" ) noPrep;
 troesta_vb_1_12_V2	= mkV2 (reflV ( mkV "tröstar" )) (mkPrep "med");
 troesta_vb_1_1_VS	= mkVS (reflV ( mkV "tröstar" )) ;
 troesta_vb_1_1_VV	= reflV ( mkV "tröstar" ) ** {c2 = mkComplement [ "med att" ] ; lock_VV = <>} ;
 troettas_vb_1_1_V2	= mkV2 ( mkV "tröttas" ) noPrep;
 troettna_vb_1_1_V	= mkV "tröttnar" ;
 troettna_vb_1_1_V2	= mkV2 ( mkV "tröttnar" ) (mkPrep "på");
 troettna_vb_1_1_VV	= mkV "tröttnar" ** {c2 = mkComplement [ "på att" ] ; lock_VV = <>} ;
 trolla_vb_1_V	= mkV "trollar" ;
 trollbinda_vb_1_V2	= mkV2 ( mkV "trollbinda" "trollband" "trollbundit" ) noPrep;
 trona_vb_1_V2	= mkV2 ( mkV "tronar" ) (mkPrep "på");
 trotsa_vb_1_V2	= mkV2 ( mkV "trotsar" ) noPrep;
 truga_vb_1_V2S	= mkV2S ( mkV "trugar" ) noPrep;
 truga_vb_11_V3	= mkV3 ( mkV "trugar" ) (mkPrep "i") noPrep;
 truga_vb_12_V3	= mkV3 ( mkV "trugar" ) (mkPrep "på") noPrep;
 trumma_vb_1_V	= mkV "trummar" ;
 trumma_vb_1_V2	= mkV2 (partV ( mkV "trummar" ) "ihop") noPrep;
 truta_vb_1_V2	= mkV2 ( mkV "trutar" ) (mkPrep "med");
 trycka_vb_11_V2	= mkV2 ( mkV "trycker" ) (mkPrep "på");
 trycka_vb_12_V2	= mkV2 ( mkV "trycker" ) noPrep;
 trygga_vb_1_V2	= mkV2 ( mkV "tryggar" ) noPrep;
 tryta_vb_1_V	= mkV "tryta" "tröt" "trutit" ;
 tuffa_vb_11_V	= mkV "tuffar" ;
 tuffa_vb_12_V	= reflV (partV ( mkV "tuffar" ) "till");
 tufsa_vb_1_V2	= mkV2 (partV ( mkV "tufsar" ) "till") noPrep;
 tugga_vb_1_V2	= mkV2 ( mkV "tuggar" ) noPrep;
 tulla_vb_1_V	= mkV "tullar" ;
 tulla_vb_1_V2	= mkV2 ( mkV "tullar" ) (mkPrep "på");
 tumla_vb_1_V	= mkV "tumlar" ;
 tumma_vb_2_V2	= mkV2 ( mkV "tummar" ) (mkPrep "på");
 turnera_vb_2_V	= mkV "turnerar" ;
 tuta_vb_1_V	= mkV "tutar" ;
 tvaerstanna_vb_1_1_V	= mkV "tvärstannar" ;
 tvaetta_vb_1_1_V	= reflV ( mkV "tvättar" );
 tvaetta_vb_1_1_V2	= mkV2 ( mkV "tvättar" ) noPrep;
 tveka_vb_1_VV	= mkV "tvekar" ** {c2 = mkComplement [ " att" ] ; lock_VV = <>} ;
 tvina_vb_1_V	= partV ( mkV "tvinar" ) "bort";
 tvinga_vb_11_V2	= mkV2 ( mkV "tvingar" ) (mkPrep "fram");
 tvinga_vb_12_V2	= mkV2 ( mkV "tvingar" ) noPrep;
 tvinna_vb_1_V2	= mkV2 ( mkV "tvinnar" ) noPrep;
 tvista_vb_1_V2	= mkV2 ( mkV "tvistar" ) (mkPrep "med");
 tvivla_vb_1_V2	= mkV2 ( mkV "tvivlar" ) (mkPrep "på");
 tvivla_vb_1_VS	= mkVS ( mkV "tvivlar" ) ;
 tycka_vb_1_V2	= mkV2 (partV ( mkV "tycker" ) "om") noPrep;
 tycka_vb_11_VS	= mkVS ( mkV "tycker" ) ;
 tycka_vb_12_VS	= mkVS (partV ( mkV "tycker" ) "om") ;
 tycka_vb_11_VV	= mkV "tycker" ** {c2 = mkComplement [ ] ; lock_VV = <>} ;
 tycka_vb_12_VV	= reflV ( mkV "tycker" ) ** {c2 = mkComplement [ ] ; lock_VV = <>} ;
 tyda_vb_11_V2	= mkV2 ( mkV "tyda" "tydde" "tytt" ) noPrep;
 tyda_vb_12_V2	= mkV2 (partV ( mkV "tyda" "tydde" "tytt" ) "på") noPrep;
 tyda_vb_1_VS	= mkVS (partV ( mkV "tyda" "tydde" "tytt" ) "på") ;
 tygla_vb_1_V2	= mkV2 ( mkV "tyglar" ) noPrep;
 tyna_vb_1_V	= partV ( mkV "tynar" ) "bort";
 tynga_vb_1_V2	= mkV2 ( mkV "tynger" ) noPrep;
 tysta_vb_1_V2	= mkV2 ( mkV "tystar" ) noPrep;
 tystna_vb_1_V	= mkV "tystnar" ;
 undanhaalla_vb_1_1_V2	= mkV2 ( mkV "undanhålla" "undanhöll" "undanhållit" ) noPrep;
 undanroeja_vb_1_1_V2	= mkV2 ( mkV "undanröja" "undanröjde" "undanröjt" ) noPrep;
 undanta_vb_1_V2	= mkV2 ( mkV "undanta" "undantar" "undanta" "undantog" "undantagit" "undantagen" ) noPrep;
 underblaasa_vb_1_1_V2	= mkV2 ( mkV "underblåser" ) noPrep;
 underbygga_vb_1_V2	= mkV2 ( mkV "underbygger" ) noPrep;
 underfoerstaa_vb_1_1_V2	= mkV2 ( mkV "underförstå" "underförstod" "underförstådd" ) noPrep;
 undergaa_vb_1_1_V2	= mkV2 ( mkV "undergå" "undergår" "undergå" "undergick" "undergått" "undergången" ) noPrep;
 undergraeva_vb_1_1_V2	= mkV2 ( mkV "undergräver" ) noPrep;
 underhaalla_vb_1_1_V2	= mkV2 ( mkV "underhålla" "underhöll" "underhållit" ) noPrep;
 underhandla_vb_1_V2	= mkV2 ( mkV "underhandlar" ) (mkPrep "med");
 underkaenna_vb_1_1_V2	= mkV2 ( mkV "underkänna" "underkände" "underkänt" ) noPrep;
 underkasta_vb_1_V2	= mkV2 (reflV ( mkV "underkastar" )) noPrep;
 underkuva_vb_1_V2	= mkV2 ( mkV "underkuvar" ) noPrep;
 underlaata_vb_1_1_VV	= mkV "underlåta" "underlät" "underlåtit" ** {c2 = mkComplement [ " att" ] ; lock_VV = <>} ;
 underlaetta_vb_1_1_V2	= mkV2 ( mkV "underlättar" ) noPrep;
 underminera_vb_1_V2	= mkV2 ( mkV "underminerar" ) noPrep;
 underordna_vb_1_V2	= mkV2 (reflV ( mkV "underordnar" )) noPrep;
 underordna_vb_1_V3	= mkV3 ( mkV "underordnar" ) noPrep noPrep;
 underraetta_vb_1_1_V2	= mkV2 ( mkV "underrättar" ) noPrep;
 underskatta_vb_1_V2	= mkV2 ( mkV "underskattar" ) noPrep;
 underskrida_vb_1_V2	= mkV2 ( mkV "underskrida" "underskred" "underskridit" ) noPrep;
 undersoeka_vb_1_1_V2	= mkV2 ( mkV "undersöker" ) noPrep;
 undersoeka_vb_1_1_VQ	= mkVQ ( mkV "undersöker" ) ;
 understiga_vb_1_V2	= mkV2 ( mkV "understiga" "understeg" "understigit" ) noPrep;
 understryka_vb_1_V2	= mkV2 ( mkV "understryka" "underströk" "understrukit" ) noPrep;
 understryka_vb_1_VS	= mkVS ( mkV "understryka" "underströk" "understrukit" ) ;
 underteckna_vb_1_V2	= mkV2 ( mkV "undertecknar" ) noPrep;
 undertrycka_vb_1_V2	= mkV2 ( mkV "undertrycker" ) noPrep;
 undervisa_vb_1_V3	= mkV3 ( mkV "undervisar" ) noPrep (mkPrep "i");
 undgaa_vb_1_1_V2	= mkV2 ( mkV "undgå" "undgick" "undgått" ) noPrep;
 undgaa_vb_1_1_VV	= mkV "undgå" "undgick" "undgått" ** {c2 = mkComplement [ " att" ] ; lock_VV = <>} ;
 undkomma_vb_1_V2	= mkV2 ( mkV "undkomma" "undkom" "undkommit" ) noPrep;
 undra_vb_1_V2	= mkV2 ( mkV "undrar" ) (mkPrep "över");
 undra_vb_1_VQ	= mkVQ ( mkV "undrar" ) ;
 undsaetta_vb_1_1_V2	= mkV2 ( mkV "undsätta" "undsätter" "undsätt" "undsatte" "undsatt" "undsatt" ) noPrep;
 undvara_vb_1_V2	= mkV2 ( mkV "undvarar" ) noPrep;
 undvika_vb_1_V2	= mkV2 ( mkV "undvika" "undvek" "undvikit" ) noPrep;
 undvika_vb_1_VV	= mkV "undvika" "undvek" "undvikit" ** {c2 = mkComplement [ " att" ] ; lock_VV = <>} ;
 unna_vb_1_V3	= mkV3 ( mkV "unnar" ) noPrep noPrep;
 unna_vb_1_VV	= mkV "unnar" ** {c2 = mkComplement [ " att" ] ; lock_VV = <>} ;
 uppbaada_vb_1_1_V2	= mkV2 ( mkV "uppbådar" ) noPrep;
 uppbaera_vb_1_1_V2	= mkV2 ( mkV "uppbära" "uppbar" "uppburit" ) noPrep;
 uppbjuda_vb_1_V2	= mkV2 ( mkV "uppbjuda" "uppbjöd" "uppbjudit" ) noPrep;
 uppbygga_vb_1_V2	= mkV2 ( mkV "uppbygger" ) noPrep;
 uppdaga_vb_1_V2	= mkV2 ( mkV "uppdagar" ) noPrep;
 uppdatera_vb_1_V2	= mkV2 ( mkV "uppdaterar" ) noPrep;
 uppehaalla_vb_1_1_V	= reflV ( mkV "uppehålla" "uppehöll" "uppehållit" );
 uppehaalla_vb_1_11_V2	= mkV2 ( mkV "uppehålla" "uppehöll" "uppehållit" ) noPrep;
 uppehaalla_vb_1_12_V2	= mkV2 (reflV ( mkV "uppehålla" "uppehöll" "uppehållit" )) (mkPrep "vid");
 uppenbara_vb_1_V	= reflV ( mkV "uppenbarar" );
 uppenbara_vb_1_V2	= mkV2 ( mkV "uppenbarar" ) noPrep;
 uppfatta_vb_1_V2	= mkV2 ( mkV "uppfattar" ) noPrep;
 uppfatta_vb_1_VQ	= mkVQ ( mkV "uppfattar" ) ;
 uppfinna_vb_1_V2	= mkV2 ( mkV "uppfinna" "uppfann" "uppfunnit" ) noPrep;
 uppfoera_vb_1_1_V	= reflV ( mkV "uppföra" "uppförde" "uppfört" );
 uppfoera_vb_1_1_V2	= mkV2 ( mkV "uppföra" "uppförde" "uppfört" ) noPrep;
 uppfostra_vb_1_V2	= mkV2 ( mkV "uppfostrar" ) noPrep;
 uppfylla_vb_1_V2	= mkV2 ( mkV "uppfyller" ) noPrep;
 uppgaa_vb_1_1_V	= mkV "uppgå" "uppgår" "uppgå" "uppgick" "uppgått" "uppgången" ;
 uppge_vb_1_V2	= mkV2 ( mkV "uppge" "uppger" "uppge" "uppgav" "uppgett" "uppgiven" ) noPrep;
 uppge_vb_1_V2S	= mkV2S ( mkV "uppge" "uppger" "uppge" "uppgav" "uppgett" "uppgiven" ) (mkPrep "för");
 upphaeva_vb_2_1_V2	= mkV2 ( mkV "upphäver" ) noPrep;
 upphoeja_vb_1_1_V3	= mkV3 ( mkV "upphöja" "upphöjde" "upphöjt" ) noPrep (mkPrep "till");
 upphoera_vb_1_1_V	= mkV "upphöra" "upphörde" "upphört" ;
 upphoera_vb_1_1_V2	= mkV2 ( mkV "upphöra" "upphörde" "upphört" ) (mkPrep "med");
 upphoera_vb_1_1_VV	= mkV "upphöra" "upphörde" "upphört" ** {c2 = mkComplement [ "med att" ] ; lock_VV = <>} ;
 uppkalla_vb_1_V2	= mkV2 ( mkV "uppkallar" ) noPrep;
 uppkomma_vb_1_V	= mkV "uppkomma" "uppkom" "uppkommit" ;
 upplaata_vb_1_1_V3	= mkV3 ( mkV "upplåta" "upplät" "upplåtit" ) noPrep (mkPrep "till");
 uppleva_vb_1_V2	= mkV2 ( mkV "upplever" ) noPrep;
 uppleva_vb_1_VS	= mkVS ( mkV "upplever" ) ;
 uppliva_vb_1_V2	= mkV2 ( mkV "upplivar" ) noPrep;
 upploesa_vb_1_1_V2	= mkV2 ( mkV "upplöser" ) noPrep;
 upplysa_vb_1_V3	= mkV3 ( mkV "upplyser" ) noPrep (mkPrep "om");
 upplysa_vb_1_VS	= mkVS ( mkV "upplyser" ) ;
 uppmaerksamma_vb_1_1_V2	= mkV2 ( mkV "uppmärksammar" ) noPrep;
 uppmana_vb_1_V2	= mkV2 ( mkV "uppmanar" ) noPrep;
 uppmuntra_vb_1_V2	= mkV2 ( mkV "uppmuntrar" ) noPrep;
 uppnaa_vb_1_1_V2	= mkV2 ( mkV "uppnår" ) noPrep;
 uppoffra_vb_1_V2	= mkV2 (reflV ( mkV "uppoffrar" )) (mkPrep "för");
 uppraetta_vb_1_1_V2	= mkV2 ( mkV "upprättar" ) noPrep;
 uppraetthaalla_vb_1_1_V2	= mkV2 ( mkV "upprätthålla" "upprätthöll" "upprätthållit" ) noPrep;
 upprepa_vb_1_V2	= mkV2 ( mkV "upprepar" ) noPrep;
 upprepa_vb_1_VS	= mkVS ( mkV "upprepar" ) ;
 upproera_vb_1_1_V2	= mkV2 ( mkV "uppröra" "upprörde" "upprört" ) noPrep;
 uppskatta_vb_1_V2	= mkV2 ( mkV "uppskattar" ) noPrep;
 uppskjuta_vb_1_V2	= mkV2 ( mkV "uppskjuta" "uppsköt" "uppskjutit" ) noPrep;
 uppsoeka_vb_1_1_V2	= mkV2 ( mkV "uppsöker" ) noPrep;
 uppstaa_vb_1_1_V	= mkV "uppstå" "uppstår" "uppstå" "uppstod" "uppstått" "uppstånden" ;
 upptaecka_vb_1_1_V2	= mkV2 ( mkV "upptäcker" ) noPrep;
 upptaecka_vb_1_1_VS	= mkVS ( mkV "upptäcker" ) ;
 upptraeda_vb_1_1_V	= mkV "uppträda" "uppträdde" "uppträtt" ;
 uppvaega_vb_1_1_V2	= mkV2 ( mkV "uppväger" ) noPrep;
 uppvakta_vb_1_V2	= mkV2 ( mkV "uppvaktar" ) noPrep;
 uppvigla_vb_1_V2	= mkV2 ( mkV "uppviglar" ) noPrep;
 uppvisa_vb_1_V2	= mkV2 ( mkV "uppvisar" ) noPrep;
 urarta_vb_1_V	= mkV "urartar" ;
 urholka_vb_1_V2	= mkV2 ( mkV "urholkar" ) noPrep;
 urinera_vb_1_V	= mkV "urinerar" ;
 ursaekta_vb_1_1_V	= reflV ( mkV "ursäktar" );
 ursaekta_vb_1_1_V2	= mkV2 ( mkV "ursäktar" ) noPrep;
 urskilja_vb_1_V2	= mkV2 ( mkV "urskilja" "urskilde" "urskilt" ) noPrep;
 urskulda_vb_1_V	= reflV ( mkV "urskuldar" );
 utarbeta_vb_1_V2	= mkV2 ( mkV "utarbetar" ) noPrep;
 utarma_vb_1_V2	= mkV2 ( mkV "utarmar" ) noPrep;
 utbilda_vb_1_V2	= mkV2 ( mkV "utbildar" ) noPrep;
 utbre_vb_1_V	= reflV ( mkV "utbreda" "utbredde" "utbrett" );
 utbre_vb_1_V2	= mkV2 (reflV ( mkV "utbreda" "utbredde" "utbrett" )) (mkPrep "över");
 utbringa_vb_1_V2	= mkV2 ( mkV "utbringar" ) noPrep;
 utbrista_vb_1_VS	= mkVS ( mkV "utbrista" "utbrast" "utbrustit" ) ;
 utbryta_vb_1_V	= mkV "utbryta" "utbröt" "utbrutit" ;
 utbyta_vb_1_V3	= mkV3 ( mkV "utbyter" ) noPrep (mkPrep "med");
 utebli_vb_1_V	= mkV "utebli" "uteblev" "uteblivit" ;
 utebli_vb_1_V2	= mkV2 ( mkV "utebli" "uteblev" "uteblivit" ) (mkPrep "från");
 utelaemna_vb_1_1_V2	= mkV2 ( mkV "utelämnar" ) noPrep;
 utesluta_vb_1_V2	= mkV2 ( mkV "utesluta" "uteslöt" "uteslutit" ) noPrep;
 utestaenga_vb_1_1_V3	= mkV3 ( mkV "utestänger" ) noPrep (mkPrep "från");
 utfaerda_vb_1_1_V2	= mkV2 ( mkV "utfärdar" ) noPrep;
 utfoera_vb_1_1_V2	= mkV2 ( mkV "utföra" "utförde" "utfört" ) noPrep;
 utforma_vb_1_V2	= mkV2 ( mkV "utformar" ) noPrep;
 utforska_vb_1_V2	= mkV2 ( mkV "utforskar" ) noPrep;
 utgaa_vb_1_1_V	= mkV "utgå" "utgår" "utgå" "utgick" "utgått" "utgången" ;
 utgaa_vb_1_1_V2	= mkV2 ( mkV "utgå" "utgår" "utgå" "utgick" "utgått" "utgången" ) (mkPrep "från");
 utgaa_vb_1_1_VS	= mkVS ( mkV "utgå" "utgår" "utgå" "utgick" "utgått" "utgången" ) ;
 utgjuta_vb_1_V2	= mkV2 (reflV ( mkV "utgjuta" "utgöt" "utgjutit" )) (mkPrep "över");
 utgoera_vb_1_1_V2	= mkV2 ( mkV "utgöra" "utgjorde" "utgjort" ) noPrep;
 uthaerda_vb_1_1_V2	= mkV2 ( mkV "uthärdar" ) noPrep;
 uthaerda_vb_1_1_VS	= mkVS ( mkV "uthärdar" ) ;
 uthaerda_vb_1_1_VV	= mkV "uthärdar" ** {c2 = mkComplement [ " att" ] ; lock_VV = <>} ;
 uthyra_vb_1_V2	= mkV2 ( mkV "uthyra" "uthyrde" "uthyrt" ) noPrep;
 utjaemna_vb_1_1_V2	= mkV2 ( mkV "utjämnar" ) noPrep;
 utkaempa_vb_1_1_V2	= mkV2 ( mkV "utkämpar" ) noPrep;
 utklassa_vb_1_V2	= mkV2 ( mkV "utklassar" ) noPrep;
 utkomma_vb_1_V	= mkV "utkomma" "utkom" "utkommit" ;
 utlaemna_vb_1_1_V2	= mkV2 ( mkV "utlämnar" ) noPrep;
 utlaesa_vb_1_1_V2	= mkV2 ( mkV "utläser" ) noPrep;
 utlaesa_vb_1_1_VQ	= mkVQ ( mkV "utläser" ) ;
 utlaesa_vb_1_1_VS	= mkVS ( mkV "utläser" ) ;
 utloesa_vb_1_1_V2	= mkV2 ( mkV "utlöser" ) noPrep;
 utlova_vb_1_V2	= mkV2 ( mkV "utlovar" ) noPrep;
 utlova_vb_1_VS	= mkVS ( mkV "utlovar" ) ;
 utlysa_vb_1_V2	= mkV2 ( mkV "utlyser" ) noPrep;
 utmaala_vb_1_1_V2	= mkV2 ( mkV "utmålar" ) noPrep;
 utmaerka_vb_1_1_V2	= mkV2 ( mkV "utmärker" ) noPrep;
 utmana_vb_1_V2	= mkV2 ( mkV "utmanar" ) noPrep;
 utmynna_vb_1_V2	= mkV2 ( mkV "utmynnar" ) (mkPrep "i");
 utmynna_vb_1_VS	= mkVS ( mkV "utmynnar" ) ;
 utnaemna_vb_1_1_V2	= mkV2 ( mkV "utnämner" ) noPrep;
 utnyttja_vb_1_V2	= mkV2 ( mkV "utnyttjar" ) noPrep;
 utoeka_vb_1_1_V2	= mkV2 ( mkV "utökar" ) noPrep;
 utoeva_vb_1_1_V2	= mkV2 ( mkV "utövar" ) noPrep;
 utpeka_vb_1_V2	= mkV2 ( mkV "utpekar" ) noPrep;
 utplaana_vb_1_1_V2	= mkV2 ( mkV "utplånar" ) noPrep;
 utraetta_vb_1_1_V2	= mkV2 ( mkV "uträttar" ) noPrep;
 utreda_vb_1_V2	= mkV2 ( mkV "utreda" "utredde" "utrett" ) noPrep;
 utroena_vb_1_1_V2	= mkV2 ( mkV "utröna" "utröner" "utrön" "utrönte" "utrönt" "utrönt" ) noPrep;
 utroena_vb_1_1_VQ	= mkVQ ( mkV "utröna" "utröner" "utrön" "utrönte" "utrönt" "utrönt" ) ;
 utropa_vb_1_V2	= mkV2 ( mkV "utropar" ) noPrep;
 utropa_vb_1_VS	= mkVS ( mkV "utropar" ) ;
 utrota_vb_1_V2	= mkV2 ( mkV "utrotar" ) noPrep;
 utrusta_vb_1_V2	= mkV2 ( mkV "utrustar" ) noPrep;
 utrusta_vb_1_V3	= mkV3 ( mkV "utrustar" ) noPrep (mkPrep "med");
 utrymma_vb_1_V2	= mkV2 ( mkV "utrymmer" ) noPrep;
 utsaetta_vb_1_1_V2	= mkV2 ( mkV "utsätta" "utsätter" "utsätt" "utsatte" "utsatt" "utsatt" ) noPrep;
 utse_vb_1_V2	= mkV2 ( mkV "utse" "utsåg" "utsett" ) noPrep;
 utsmycka_vb_1_V2	= mkV2 ( mkV "utsmyckar" ) noPrep;
 utstaa_vb_1_1_V2	= mkV2 ( mkV "utstå" "utstår" "utstå" "utstod" "utstått" "utstånden" ) noPrep;
 utstoeta_vb_1_1_V2	= mkV2 ( mkV "utstöter" ) noPrep;
 utstoeta_vb_1_1_V3	= mkV3 ( mkV "utstöter" ) noPrep (mkPrep "ur");
 utstraala_vb_1_1_V2	= mkV2 ( mkV "utstrålar" ) noPrep;
 uttala_vb_11_V2	= mkV2 ( mkV "uttalar" ) noPrep;
 uttala_vb_12_V2	= mkV2 (reflV ( mkV "uttalar" )) (mkPrep "om");
 uttrycka_vb_1_V	= reflV ( mkV "uttrycker" );
 uttrycka_vb_1_V2	= mkV2 ( mkV "uttrycker" ) noPrep;
 utvaerdera_vb_1_1_V2	= mkV2 ( mkV "utvärderar" ) noPrep;
 utvandra_vb_1_V	= mkV "utvandrar" ;
 utvecklas_vb_1_V	= mkV "utvecklas" ;
 utvecklas_vb_1_V2	= mkV2 ( mkV "utvecklas" ) noPrep;
 utverka_vb_1_V2	= mkV2 ( mkV "utverkar" ) noPrep;
 utvidga_vb_1_V2	= mkV2 ( mkV "utvidgar" ) noPrep;
 utvinna_vb_1_V2	= mkV2 ( mkV "utvinna" "utvann" "utvunnit" ) noPrep;
 utvisa_vb_1_V2	= mkV2 ( mkV "utvisar" ) noPrep;
 utvisa_vb_1_VS	= mkVS ( mkV "utvisar" ) ;
 vaaga_vb_1_1_V	= reflV ( mkV "vågar" );
 vaaga_vb_1_1_VV	= mkV "vågar" ** {c2 = mkComplement [ ] ; lock_VV = <>} ;
 vaaldfoera_vb_1_1_V2	= mkV2 (reflV ( mkV "våldföra" "våldförde" "våldfört" )) (mkPrep "på");
 vaaldgaesta_vb_1_1_V2	= mkV2 ( mkV "våldgästar" ) noPrep;
 vaaldta_vb_1_1_V2	= mkV2 ( mkV "våldta" "våldtar" "våldta" "våldtog" "våldtagit" "våldtagen" ) noPrep;
 vaalla_vb_1_1_V2	= mkV2 ( mkV "vållar" ) noPrep;
 vaarda_vb_1_1_V2	= mkV2 ( mkV "vårdar" ) noPrep;
 vaccinera_vb_1_V2	= mkV2 ( mkV "vaccinerar" ) noPrep;
 vackla_vb_1_V	= mkV "vacklar" ;
 vada_vb_1_V	= mkV "vadar" ;
 vaddera_vb_1_V2	= mkV2 ( mkV "vadderar" ) noPrep;
 vaecka_vb_1_1_V2	= mkV2 ( mkV "väcker" ) noPrep;
 vaedja_vb_1_1_V2	= mkV2 ( mkV "vädjar" ) (mkPrep "till");
 vaedra_vb_1_1_V2	= mkV2 ( mkV "vädrar" ) noPrep;
 vaega_vb_3_1_V	= mkV "väger" ;
 vaega_vb_3_1_V2	= mkV2 ( mkV "väger" ) noPrep;
 vaegleda_vb_1_1_V2	= mkV2 ( mkV "vägleda" "vägledde" "väglett" ) noPrep;
 vaegra_vb_1_1_VV	= mkV "vägrar" ** {c2 = mkComplement [ " att" ] ; lock_VV = <>} ;
 vaeja_vb_1_1_V2	= mkV2 ( mkV "väja" "väjde" "väjt" ) (mkPrep "för");
 vaelja_vb_1_1_V2	= mkV2 ( mkV "välja" "valde" "valt" ) noPrep;
 vaelja_vb_1_1_V3	= mkV3 ( mkV "välja" "valde" "valt" ) (mkPrep "mellan") (mkPrep "och");
 vaelja_vb_1_1_VV	= mkV "välja" "valde" "valt" ** {c2 = mkComplement [ " att" ] ; lock_VV = <>} ;
 vaelkomna_vb_1_1_V2	= mkV2 ( mkV "välkomnar" ) noPrep;
 vaella_vb_1_1_V	= partV ( mkV "väller" ) "ut";
 vaelsigna_vb_1_1_V2	= mkV2 ( mkV "välsignar" ) noPrep;
 vaelta_vb_1_1_V	= mkV "välta" "välter" "vält" "välte" "vält" "vält" ;
 vaelta_vb_1_1_V2	= mkV2 ( mkV "välta" "välter" "vält" "välte" "vält" "vält" ) noPrep;
 vaeltra_vb_1_1_V	= reflV ( mkV "vältrar" );
 vaeltra_vb_1_1_V2	= mkV2 ( mkV "vältrar" ) noPrep;
 vaelva_vb_1_11_V2	= mkV2 ( mkV "välver" ) noPrep;
 vaelva_vb_1_12_V2	= mkV2 (reflV ( mkV "välver" )) (mkPrep "över");
 vaenda_vb_2_1_V	= reflV ( mkV "vänder" );
 vaenda_vb_2_11_V2	= mkV2 ( mkV "vänder" ) noPrep;
 vaenda_vb_2_12_V2	= mkV2 (reflV ( mkV "vänder" )) (mkPrep "till");
 vaenja_vb_1_1_V2	= mkV2 ( mkV "vänja" "vande" "vant" ) noPrep;
 vaenja_vb_1_1_VV	= partV (reflV ( mkV "vänja" "vande" "vant" )) "vid" ** {c2 = mkComplement [ " att" ] ; lock_VV = <>} ;
 vaenslas_vb_1_1_V2	= mkV2 ( mkV "vänslas" ) (mkPrep "med");
 vaenta_vb_1_11_V2	= mkV2 ( mkV "väntar" ) noPrep;
 vaenta_vb_1_12_V2	= mkV2 (partV ( mkV "väntar" ) "på") noPrep;
 vaenta_vb_1_1_VS	= mkVS ( mkV "väntar" ) ;
 vaerdera_vb_1_1_V2	= mkV2 ( mkV "värderar" ) noPrep;
 vaerdesaekra_vb_1_1_V2	= mkV2 ( mkV "värdesäkrar" ) noPrep;
 vaerdesaetta_vb_1_1_V2	= mkV2 ( mkV "värdesätta" "värdesätter" "värdesätt" "värdesatte" "värdesatt" "värdesatt" ) noPrep;
 vaerdesaetta_vb_1_1_VS	= mkVS ( mkV "värdesätta" "värdesätter" "värdesätt" "värdesatte" "värdesatt" "värdesatt" ) ;
 vaerja_vb_1_1_V2	= mkV2 (reflV ( mkV "värja" "värjde" "värjt" )) (mkPrep "för");
 vaerma_vb_1_11_V	= mkV "värmer" ;
 vaerma_vb_1_12_V	= reflV ( mkV "värmer" );
 vaerma_vb_1_1_V2	= mkV2 ( mkV "värmer" ) noPrep;
 vaerna_vb_1_1_V2	= mkV2 (partV ( mkV "värnar" ) "om") noPrep;
 vaerpa_vb_1_1_V2	= mkV2 ( mkV "värper" ) noPrep;
 vaerva_vb_1_1_V2	= mkV2 ( mkV "värvar" ) noPrep;
 vaesa_vb_1_1_V	= mkV "väser" ;
 vaesnas_vb_1_1_V	= mkV "väsnas" ;
 vaessa_vb_1_1_V2	= mkV2 ( mkV "vässar" ) noPrep;
 vaeta_vb_1_1_V	= reflV ( mkV "väter" );
 vaeta_vb_1_1_V2	= mkV2 ( mkV "väter" ) noPrep;
 vaeva_vb_1_1_V2	= mkV2 ( mkV "väver" ) noPrep;
 vaexa_vb_1_1_V	= mkV "växa" "växer" "växa" "växte" "vuxit" "vuxen" ;
 vaexla_vb_1_1_V	= mkV "växlar" ;
 vaexla_vb_1_1_V2	= mkV2 ( mkV "växlar" ) noPrep;
 vaexla_vb_1_1_V3	= mkV3 ( mkV "växlar" ) (mkPrep "från") (mkPrep "till");
 vagga_vb_11_V2	= mkV2 ( mkV "vaggar" ) (mkPrep "på");
 vagga_vb_12_V2	= mkV2 ( mkV "vaggar" ) noPrep;
 vaja_vb_1_V	= mkV "vajar" ;
 vaka_vb_1_V2	= mkV2 ( mkV "vakar" ) (mkPrep "över");
 vakna_vb_1_V	= mkV "vaknar" ;
 vakta_vb_1_V2	= mkV2 ( mkV "vaktar" ) noPrep;
 valla_vb_1_V2	= mkV2 ( mkV "vallar" ) noPrep;
 valpa_vb_1_V	= mkV "valpar" ;
 vandalisera_vb_1_V2	= mkV2 ( mkV "vandaliserar" ) noPrep;
 vandra_vb_1_V	= mkV "vandrar" ;
 vanhedra_vb_1_V2	= mkV2 ( mkV "vanhedrar" ) noPrep;
 vanhelga_vb_1_V2	= mkV2 ( mkV "vanhelgar" ) noPrep;
 vankas_vb_1_V	= mkV "vankas" ;
 vantrivas_vb_1_V	= mkV "vantrivs" ;
 vanvaarda_vb_1_1_V2	= mkV2 ( mkV "vanvårdar" ) noPrep;
 varas_vb_1_V	= mkV "varas" ;
 variera_vb_1_V	= mkV "varierar" ;
 variera_vb_1_V2	= mkV2 ( mkV "varierar" ) noPrep;
 varna_vb_1_V3	= mkV3 ( mkV "varnar" ) noPrep (mkPrep "för");
 varna_vb_1_VV	= mkV "varnar" ** {c2 = mkComplement [ " att" ] ; lock_VV = <>} ;
 varsebli_vb_1_V2	= mkV2 ( mkV "varsebli" "varseblev" "varseblivit" ) noPrep;
 varsko_vb_1_V2	= mkV2 ( mkV "varskor" ) noPrep;
 varsla_vb_1_V2	= mkV2 ( mkV "varslar" ) (mkPrep "om");
 varva_vb_1_V2	= mkV2 ( mkV "varvar" ) noPrep;
 varva_vb_1_V3	= mkV3 ( mkV "varvar" ) noPrep (mkPrep "och");
 vattnas_vb_1_V	= mkV "vattnas" ;
 vattnas_vb_1_V2	= mkV2 ( mkV "vattnas" ) noPrep;
 vaxa_vb_1_V2	= mkV2 ( mkV "vaxar" ) noPrep;
 vecka_vb_1_V	= reflV ( mkV "veckar" );
 vecka_vb_1_V2	= mkV2 ( mkV "veckar" ) noPrep;
 veckla_vb_11_V2	= mkV2 (partV ( mkV "vecklar" ) "ihop") noPrep;
 veckla_vb_12_V2	= mkV2 (partV ( mkV "vecklar" ) "upp") noPrep;
 vederlaegga_vb_1_1_V2	= mkV2 ( mkV "vederlägga" "vederlade" "vederlagt" ) noPrep;
 vegetera_vb_1_V	= mkV "vegeterar" ;
 vekna_vb_1_V	= mkV "veknar" ;
 vela_vb_1_V	= mkV "velar" ;
 ventilera_vb_1_V2	= mkV2 ( mkV "ventilerar" ) noPrep;
 verifiera_vb_1_V2	= mkV2 ( mkV "verifierar" ) noPrep;
 verifiera_vb_1_VS	= mkVS ( mkV "verifierar" ) ;
 verka_vb_1_V	= mkV "verkar" ;
 verka_vb_1_V2	= mkV2 ( mkV "verkar" ) (mkPrep "för");
 verka_vb_1_VA	= mkVA ( mkV "verkar" ) ;
 verka_vb_1_VS	= mkVS ( mkV "verkar" ) ;
 vetta_vb_1_V2	= mkV2 ( mkV "vetta" "vette" "vettat" ) (mkPrep "åt");
 veva_vb_1_V2	= mkV2 ( mkV "vevar" ) (mkPrep "upp");
 vibrera_vb_1_V2	= mkV2 ( mkV "vibrerar" ) (mkPrep "av");
 vicka_vb_1_V	= mkV "vickar" ;
 vicka_vb_1_V2	= mkV2 ( mkV "vickar" ) (mkPrep "med");
 vidarebefordra_vb_1_V2	= mkV2 ( mkV "vidarebefordrar" ) noPrep;
 vidga_vb_1_V2	= mkV2 ( mkV "vidgar" ) noPrep;
 vidhaalla_vb_1_1_V2	= mkV2 ( mkV "vidhålla" "vidhöll" "vidhållit" ) noPrep;
 vidhaalla_vb_1_1_VS	= mkVS ( mkV "vidhålla" "vidhöll" "vidhållit" ) ;
 vidimera_vb_1_V2	= mkV2 ( mkV "vidimerar" ) noPrep;
 vidkaennas_vb_1_1_V2	= mkV2 ( mkV "vidkänns" ) noPrep;
 vidmakthaalla_vb_1_1_V2	= mkV2 ( mkV "vidmakthålla" "vidmakthöll" "vidmakthållit" ) noPrep;
 vidroera_vb_1_1_V2	= mkV2 ( mkV "vidröra" "vidrörde" "vidrört" ) noPrep;
 vidta_vb_1_V	= mkV "vidta" "vidtar" "vidta" "vidtog" "vidtagit" "vidtagen" ;
 vidta_vb_1_V2	= mkV2 ( mkV "vidta" "vidtar" "vidta" "vidtog" "vidtagit" "vidtagen" ) noPrep;
 vifta_vb_1_V2	= mkV2 ( mkV "viftar" ) (mkPrep "med");
 viga_vb_1_V2	= mkV2 ( mkV "viger" ) noPrep;
 viga_vb_1_V3	= mkV3 ( mkV "viger" ) noPrep (mkPrep "åt");
 vika_vb_11_V2	= mkV2 ( mkV "vika" "vek" "vikit" ) (mkPrep "från");
 vika_vb_12_V2	= mkV2 ( mkV "vika" "vek" "vikit" ) noPrep;
 vikariera_vb_1_V2	= mkV2 ( mkV "vikarierar" ) (mkPrep "för");
 vila_vb_11_V2	= mkV2 ( mkV "vilar" ) (mkPrep "på");
 vila_vb_12_V2	= mkV2 ( mkV "vilar" ) noPrep;
 vilseleda_vb_1_V2	= mkV2 ( mkV "vilseleda" "vilseledde" "vilselett" ) noPrep;
 vimsa_vb_1_V	= mkV "vimsar" ;
 vina_vb_1_V	= mkV "vina" "ven" "vinit" ;
 vinda_vb_1_V	= mkV "vindar" ;
 vindla_vb_1_V	= mkV "vindlar" ;
 vindsurfa_vb_1_V	= mkV "vindsurfar" ;
 vingla_vb_1_V	= mkV "vinglar" ;
 vinkla_vb_1_V2	= mkV2 ( mkV "vinklar" ) noPrep;
 vinna_vb_11_V2	= mkV2 ( mkV "vinna" "vann" "vunnit" ) (mkPrep "över");
 vinna_vb_12_V2	= mkV2 ( mkV "vinna" "vann" "vunnit" ) noPrep;
 vinna_vb_13_V2	= mkV2 (partV ( mkV "vinna" "vann" "vunnit" ) "i") noPrep;
 vinna_vb_1_VS	= mkVS ( mkV "vinna" "vann" "vunnit" ) ;
 vinna_vb_1_VV	= mkV "vinna" "vann" "vunnit" ** {c2 = mkComplement [ "på att" ] ; lock_VV = <>} ;
 vinterbona_vb_1_V2	= mkV2 ( mkV "vinterbonar" ) noPrep;
 vippa_vb_11_V2	= mkV2 ( mkV "vippar" ) (mkPrep "på");
 vippa_vb_12_V2	= mkV2 ( mkV "vippar" ) noPrep;
 vira_vb_1_V3	= mkV3 ( mkV "virar" ) noPrep (mkPrep "om");
 virka_vb_1_V2	= mkV2 ( mkV "virkar" ) noPrep;
 virvla_vb_1_V	= partV ( mkV "virvlar" ) "omkring";
 visa_vb_11_V3	= mkV3 ( mkV "visar" ) noPrep (mkPrep "för");
 visa_vb_12_V3	= mkV3 ( mkV "visar" ) noPrep noPrep;
 visa_vb_1_VS	= mkVS ( mkV "visar" ) ;
 visa_vb_1_VV	= reflV ( mkV "visar" ) ** {c2 = mkComplement [ ] ; lock_VV = <>} ;
 visitera_vb_1_V2	= mkV2 ( mkV "visiterar" ) noPrep;
 viska_vb_1_V2S	= mkV2S ( mkV "viskar" ) (mkPrep "till");
 vispa_vb_1_V2	= mkV2 ( mkV "vispar" ) noPrep;
 vissla_vb_1_V	= mkV "visslar" ;
 vistas_vb_1_V	= mkV "vistas" ;
 vitna_vb_1_V	= mkV "vitnar" ;
 vitsorda_vb_1_V2	= mkV2 ( mkV "vitsordar" ) noPrep;
 vitsorda_vb_1_VS	= mkVS ( mkV "vitsordar" ) ;
 vittja_vb_1_V2	= mkV2 ( mkV "vittjar" ) noPrep;
 vittna_vb_1_V	= mkV "vittnar" ;
 vittna_vb_1_V2	= mkV2 ( mkV "vittnar" ) (mkPrep "om");
 vittra_vb_1_V	= mkV "vittrar" ;
 voerda_vb_1_1_V2	= mkV2 ( mkV "vördar" ) noPrep;
 votera_vb_1_V2	= mkV2 ( mkV "voterar" ) (mkPrep "om");
 vraala_vb_1_1_V	= mkV "vrålar" ;
 vraeka_vb_1_11_V	= mkV "vräker" ;
 vraeka_vb_1_12_V	= reflV ( mkV "vräker" );
 vraeka_vb_1_11_V2	= mkV2 ( mkV "vräker" ) (mkPrep "bort");
 vraeka_vb_1_12_V2	= mkV2 ( mkV "vräker" ) noPrep;
 vraenga_vb_1_1_V2	= mkV2 ( mkV "vränger" ) noPrep;
 vraka_vb_11_V2	= mkV2 ( mkV "vrakar" ) noPrep;
 vraka_vb_12_V2	= mkV2 (partV ( mkV "vrakar" ) "bort") noPrep;
 vricka_vb_1_V2	= mkV2 ( mkV "vrickar" ) noPrep;
 vrida_vb_1_V	= reflV (partV ( mkV "vrida" "vred" "vridit" ) "på");
 vrida_vb_1_V2	= mkV2 (partV ( mkV "vrida" "vred" "vridit" ) "på") noPrep;
 vurpa_vb_1_V	= mkV "vurpar" ;
 yla_vb_1_V	= mkV "ylar" ;
 ympa_vb_1_V2	= mkV2 (partV ( mkV "ympar" ) "in") noPrep;
 yngla_vb_1_V	= mkV "ynglar" ;
 yppa_vb_1_V2	= mkV2 ( mkV "yppar" ) noPrep;
 yppa_vb_1_VS	= mkVS ( mkV "yppar" ) ;
 yra_vb_1_V2	= mkV2 ( mkV "yrar" ) (mkPrep "om");
 yra_vb_1_VS	= mkVS ( mkV "yrar" ) ;
 yra_vb_2_V	= mkV "yra" "yrde" "yrt" ;
 yrka_vb_1_V2	= mkV2 (partV ( mkV "yrkar" ) "på") noPrep;
 yrka_vb_1_VS	= mkVS (partV ( mkV "yrkar" ) "på") ;
 yttra_vb_1_V2	= mkV2 (reflV ( mkV "yttrar" )) (mkPrep "om");
 yttra_vb_1_VS	= mkVS ( mkV "yttrar" ) ;
